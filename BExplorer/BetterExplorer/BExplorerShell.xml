<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BExplorerShell</name>
    </assembly>
    <members>
        <member name="T:BExplorer.Shell.Reflector">
             <summary>
             This class is from the Front-End for Dosbox and is used to present a 'vista' dialog box to select folders.
             Being able to use a vista style dialog box to select folders is much better then using the shell folder browser.
             http://code.google.com/p/fed/
            
             Example:
             var r = new Reflector("System.Windows.Forms");
             </summary>
        </member>
        <member name="M:BExplorer.Shell.Reflector.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ns">The namespace containing types to be used</param>
        </member>
        <member name="M:BExplorer.Shell.Reflector.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="an">A specific assembly name (used if the assembly name does not tie exactly with the namespace)</param>
            <param name="ns">The namespace containing types to be used</param>
        </member>
        <member name="M:BExplorer.Shell.Reflector.GetType(System.String)">
            <summary>
            Return a Type instance for a type 'typeName'
            </summary>
            <param name="typeName">The name of the type</param>
            <returns>A type instance</returns>
        </member>
        <member name="M:BExplorer.Shell.Reflector.New(System.String,System.Object[])">
            <summary>
            Create a new object of a named type passing along any params
            </summary>
            <param name="name">The name of the type to create</param>
            <param name="parameters"></param>
            <returns>An instantiated type</returns>
        </member>
        <member name="M:BExplorer.Shell.Reflector.Call(System.Object,System.String,System.Object[])">
            <summary>
            Calls method 'func' on object 'obj' passing parameters 'parameters'
            </summary>
            <param name="obj">The object on which to excute function 'func'</param>
            <param name="func">The function to execute</param>
            <param name="parameters">The parameters to pass to function 'func'</param>
            <returns>The result of the function invocation</returns>
        </member>
        <member name="M:BExplorer.Shell.Reflector.Call2(System.Object,System.String,System.Object[])">
            <summary>
            Calls method 'func' on object 'obj' passing parameters 'parameters'
            </summary>
            <param name="obj">The object on which to excute function 'func'</param>
            <param name="func">The function to execute</param>
            <param name="parameters">The parameters to pass to function 'func'</param>
            <returns>The result of the function invocation</returns>
        </member>
        <member name="M:BExplorer.Shell.Reflector.CallAs(System.Type,System.Object,System.String,System.Object[])">
            <summary>
            Calls method 'func' on object 'obj' which is of type 'type' passing parameters 'parameters'
            </summary>
            <param name="type">The type of 'obj'</param>
            <param name="obj">The object on which to excute function 'func'</param>
            <param name="func">The function to execute</param>
            <param name="parameters">The parameters to pass to function 'func'</param>
            <returns>The result of the function invocation</returns>
        </member>
        <member name="M:BExplorer.Shell.Reflector.CallAs2(System.Type,System.Object,System.String,System.Object[])">
            <summary>
            Calls method 'func' on object 'obj' which is of type 'type' passing parameters 'parameters'
            </summary>
            <param name="type">The type of 'obj'</param>
            <param name="obj">The object on which to excute function 'func'</param>
            <param name="func">The function to execute</param>
            <param name="parameters">The parameters to pass to function 'func'</param>
            <returns>The result of the function invocation</returns>
        </member>
        <member name="M:BExplorer.Shell.Reflector.Get(System.Object,System.String)">
            <summary>
            Returns the value of property 'prop' of object 'obj'
            </summary>
            <param name="obj">The object containing 'prop'</param>
            <param name="prop">The property name</param>
            <returns>The property value</returns>
        </member>
        <member name="M:BExplorer.Shell.Reflector.GetAs(System.Type,System.Object,System.String)">
            <summary>
            Returns the value of property 'prop' of object 'obj' which has type 'type'
            </summary>
            <param name="type">The type of 'obj'</param>
            <param name="obj">The object containing 'prop'</param>
            <param name="prop">The property name</param>
            <returns>The property value</returns>
        </member>
        <member name="M:BExplorer.Shell.Reflector.GetEnum(System.String,System.String)">
            <summary>
            Returns an enum value
            </summary>
            <param name="typeName">The name of enum type</param>
            <param name="name">The name of the value</param>
            <returns>The enum value</returns>
        </member>
        <member name="T:BExplorer.Shell.CommonFileDialogs.FolderSelectDialog">
            <summary>
            Wraps System.Windows.Forms.OpenFileDialog to make it present
            a vista-style dialog.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.CommonFileDialogs.FolderSelectDialog.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:BExplorer.Shell.CommonFileDialogs.FolderSelectDialog.ShowDialog">
            <summary>
            Shows the dialog
            </summary>
            <returns>True if the user presses OK else false</returns>
        </member>
        <member name="M:BExplorer.Shell.CommonFileDialogs.FolderSelectDialog.ShowDialog(System.IntPtr)">
            <summary>
            Shows the dialog
            </summary>
            <param name="hWndOwner">Handle of the control to be parent</param>
            <returns>True if the user presses OK else false</returns>
        </member>
        <member name="P:BExplorer.Shell.CommonFileDialogs.FolderSelectDialog.InitialDirectory">
            <summary>
            Gets/Sets the initial folder to be selected. A null value selects the current directory.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.CommonFileDialogs.FolderSelectDialog.Title">
            <summary>
            Gets/Sets the title to show in the dialog
            </summary>
        </member>
        <member name="P:BExplorer.Shell.CommonFileDialogs.FolderSelectDialog.FileName">
            <summary>
            Gets the selected folder
            </summary>
        </member>
        <member name="T:BExplorer.Shell.CommonFileDialogs.WindowWrapper">
            <summary>
            Creates IWin32Window around an IntPtr
            </summary>
        </member>
        <member name="M:BExplorer.Shell.CommonFileDialogs.WindowWrapper.#ctor(System.IntPtr)">
            <summary>
            Constructor
            </summary>
            <param name="handle">Handle to wrap</param>
        </member>
        <member name="P:BExplorer.Shell.CommonFileDialogs.WindowWrapper.Handle">
            <summary>
            Original ptr
            </summary>
        </member>
        <member name="T:BExplorer.Shell.FolderSettings">
            <summary>Container for folder settings stored in the database</summary>
        </member>
        <member name="P:BExplorer.Shell.FolderSettings.View">
            <summary>Specifies how list items where last displayed in a <see cref="T:BExplorer.Shell.ShellView"/> control.</summary>
        </member>
        <member name="P:BExplorer.Shell.FolderSettings.SortColumn">
            <summary>The Column to short</summary>
        </member>
        <member name="P:BExplorer.Shell.FolderSettings.SortOrder">
            <summary>The sort direction</summary>
        </member>
        <member name="T:BExplorer.Shell.FileOperation">
            <summary>
            Interaction logic for FileOperation.xaml
            </summary>
            <summary>
            FileOperation
            </summary>
        </member>
        <member name="M:BExplorer.Shell.FileOperation.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:BExplorer.Shell.FileOperationDialog">
            <summary>
            Interaction logic for FileOperationDialog.xaml
            </summary>
            <summary>
            FileOperationDialog
            </summary>
        </member>
        <member name="M:BExplorer.Shell.FileOperationDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:BExplorer.Shell.GroupState">
            <summary>
            These values indicate what is the state of the group. These values
            are taken directly from the SDK and many are not used by ObjectListView.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupState.LVGS_NORMAL">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupState.LVGS_COLLAPSED">
            <summary>
            Collapsed
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupState.LVGS_HIDDEN">
            <summary>
            Hidden
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupState.LVGS_NOHEADER">
            <summary>
            NoHeader
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupState.LVGS_COLLAPSIBLE">
            <summary>
            Can be collapsed
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupState.LVGS_FOCUSED">
            <summary>
            Has focus
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupState.LVGS_SELECTED">
            <summary>
            Is Selected
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupState.LVGS_SUBSETED">
            <summary>
            Is subsetted
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupState.LVGS_SUBSETLINKFOCUSED">
            <summary>
            Subset link has focus
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupState.LVGS_ALL">
            <summary>
            All styles
            </summary>
        </member>
        <member name="T:BExplorer.Shell.GroupMask">
            <summary>
            This mask indicates which members of a LVGROUP have valid data. These values
            are taken directly from the SDK and many are not used by ObjectListView.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_NONE">
            <summary>
            No mask
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_HEADER">
            <summary>
            Group has header
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_FOOTER">
            <summary>
            Group has footer
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_STATE">
            <summary>
            Group has state
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_ALIGN">
            <summary>
            
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_GROUPID">
            <summary>
            
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_SUBTITLE">
            <summary>
            pszSubtitle is valid
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_TASK">
            <summary>
            pszTask is valid
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_DESCRIPTIONTOP">
            <summary>
            pszDescriptionTop is valid
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_DESCRIPTIONBOTTOM">
            <summary>
            pszDescriptionBottom is valid
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_TITLEIMAGE">
            <summary>
            iTitleImage is valid
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_EXTENDEDIMAGE">
            <summary>
            iExtendedImage is valid
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_ITEMS">
            <summary>
            iFirstItem and cItems are valid
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_SUBSET">
            <summary>
            pszSubsetTitle is valid
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMask.LVGF_SUBSETITEMS">
            <summary>
            readonly, cItems holds count of items in visible subset, iFirstItem is valid
            </summary>
        </member>
        <member name="T:BExplorer.Shell.GroupMetricsMask">
            <summary>
            This mask indicates which members of a GROUPMETRICS structure are valid
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMetricsMask.LVGMF_NONE">
            <summary>
            
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMetricsMask.LVGMF_BORDERSIZE">
            <summary>
            
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMetricsMask.LVGMF_BORDERCOLOR">
            <summary>
            
            </summary>
        </member>
        <member name="F:BExplorer.Shell.GroupMetricsMask.LVGMF_TEXTCOLOR">
            <summary>
            
            </summary>
        </member>
        <member name="T:BExplorer.Shell.ListViewGroupEx">
            <summary>A Group of items in <see cref="T:BExplorer.Shell.ShellView"/></summary>
        </member>
        <member name="P:BExplorer.Shell.ListViewGroupEx.Items">
            <summary>The ShellItems in the group</summary>
        </member>
        <member name="P:BExplorer.Shell.ListViewGroupEx.Header">
            <summary>The Header/Text of the Group</summary>
        </member>
        <member name="P:BExplorer.Shell.ListViewGroupEx.Index">
            <summary>The Index of the Group</summary>
        </member>
        <member name="T:BExplorer.Shell.NavigationLog">
            <summary>Represents a log of where the user has navigated through the file system</summary>
        </member>
        <member name="M:BExplorer.Shell.NavigationLog.NavigateBack">
            <summary>Navigates backwards one item</summary>
        </member>
        <member name="M:BExplorer.Shell.NavigationLog.NavigateForward">
            <summary>Navigates forwards one item</summary>
        </member>
        <member name="M:BExplorer.Shell.NavigationLog.ImportData(BExplorer.Shell.NavigationLog)">
            <summary>Clears all items then adds all items from <param name="log">the log</param></summary>
        </member>
        <member name="P:BExplorer.Shell.NavigationLog.HistoryItemsList">
            <summary>The locations the user has been to</summary>
        </member>
        <member name="P:BExplorer.Shell.NavigationLog.CurrentLocPos">
            <summary>the position/place/item the user is currently at in the <see cref="P:BExplorer.Shell.NavigationLog.HistoryItemsList">History</see> </summary>
        </member>
        <member name="P:BExplorer.Shell.NavigationLog.CanNavigateBackwards">
            <summary>Can the user navigate backwards?</summary>
        </member>
        <member name="P:BExplorer.Shell.NavigationLog.CurrentLocation">
            <summary>Represents the current ShellItem the user is at</summary>
            <remarks>
            Gets the item from <see cref="P:BExplorer.Shell.NavigationLog.HistoryItemsList"/> at index <see cref="P:BExplorer.Shell.NavigationLog.CurrentLocPos"/> (or null if Count = 0). 
            Sets the Location by adding the ShellItem to <see cref="P:BExplorer.Shell.NavigationLog.HistoryItemsList"/> and setting it as the <see cref="P:BExplorer.Shell.NavigationLog.CurrentLocPos"/>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "T:BExplorer.Shell.Win32Api" -->
        <member name="T:BExplorer.Shell.FileAttributes">
            <summary>Provides attributes for files and directories.</summary>
        </member>
        <member name="T:BExplorer.Shell.ImageList">
            <summary>
            A wrapper of IImageList.
            </summary>
            <remarks>
            This works on XP or higher.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.ImageList.GetIconIndexWithOverlay(System.IntPtr,System.Int32@)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="overlayIndex">Index of the overlay icon that use for Draw or GetIndexOfOverlay method.</param>
            <returns></returns>
        </member>
        <member name="F:BExplorer.Shell.ImageListSize.Jumbo">
            <summary>
            Vista or higher
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawOptions.Normal">
            <summary>
            Draw item normally.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawOptions.Transparent">
            <summary>
            Draw item transparently.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawOptions.Blend25">
            <summary>
            Draw item blended with 25% of the specified foreground colour
            or the Highlight colour if no foreground colour specified.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawOptions.Selected">
            <summary>
            Draw item blended with 50% of the specified foreground colour
            or the Highlight colour if no foreground colour specified.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawOptions.Mask">
            <summary>
            Draw the icon's mask
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawOptions.Image">
            <summary>
            Draw the icon image without using the mask
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawOptions.RasterOperation">
            <summary>
            Draw the icon using the ROP specified.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawOptions.PreserveAlpha">
            <summary>
            Preserves the alpha channel in dest. XP only.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawOptions.Scale">
            <summary>
            Scale the image to cx, cy instead of clipping it.  XP only.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawOptions.DpiScale">
            <summary>
            Scale the image to the current DPI of the display. XP only.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawOptions.Async">
            <summary>
            Vista or higher
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawStates.Normal">
            <summary>
              The image state is not modified.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawStates.Glow">
            <summary>
              Adds a glow effect to the icon, which causes the icon to appear to glow 
              with a given color around the edges. (Note: does not appear to be
              implemented)
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawStates.Shadow">
            <summary>
              Adds a drop shadow effect to the icon. (Note: does not appear to be
              implemented)
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawStates.Saturates">
            <summary>
              Saturates the icon by increasing each color component 
              of the RGB triplet for each pixel in the icon. (Note: only ever appears
              to result in a completely unsaturated icon)
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ImageListDrawStates.Alpha">
            <summary>
              Alpha blends the icon. Alpha blending controls the transparency 
              level of an icon, according to the value of its alpha channel. 
              (Note: does not appear to be implemented).
            </summary>
        </member>
        <member name="T:BExplorer.Shell.DataObject">
            <summary>
            Implements the COM version of IDataObject including SetData.
            </summary>
            <remarks>
            <para>Use this object when using shell (or other unmanged) features
            that utilize the clipboard and/or drag and drop.</para>
            <para>The System.Windows.DataObject (.NET 3.0) and
            System.Windows.Forms.DataObject do not support SetData from their COM
            IDataObject interface implementation.</para>
            <para>To use this object with .NET drag and drop, create an instance
            of System.Windows.DataObject (.NET 3.0) or System.Window.Forms.DataObject
            passing an instance of DataObject as the only constructor parameter. For
            example:</para>
            <code>
            System.Windows.DataObject data = new System.Windows.DataObject(new DragDropLib.DataObject());
            </code>
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.DataObject.#ctor">
            <summary>
            Creates an empty instance of DataObject.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.DataObject.Finalize">
            <summary>
            Releases unmanaged resources.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.DataObject.ClearStorage">
            <summary>
            Clears the internal storage array.
            </summary>
            <remarks>
            ClearStorage is called by the IDisposable.Dispose method implementation
            to make sure all unmanaged references are released properly.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.DataObject.Dispose">
            <summary>
            Releases resources.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.DataObject.Dispose(System.Boolean)">
            <summary>
            Releases resources.
            </summary>
            <param name="disposing">Indicates if the call was made by a managed caller, or the garbage collector.
            True indicates that someone called the Dispose method directly. False indicates that the garbage collector
            is finalizing the release of the object instance.</param>
        </member>
        <member name="M:BExplorer.Shell.DataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)">
            <summary>
            Gets an enumerator for the formats contained in this DataObject.
            </summary>
            <param name="direction">The direction of the data.</param>
            <returns>An instance of the IEnumFORMATETC interface.</returns>
        </member>
        <member name="M:BExplorer.Shell.DataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>
            Gets the specified data.
            </summary>
            <param name="format">The requested data format.</param>
            <param name="medium">When the function returns, contains the requested data.</param>
        </member>
        <member name="M:BExplorer.Shell.DataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)">
            <summary>
            Determines if data of the requested format is present.
            </summary>
            <param name="format">The request data format.</param>
            <returns>Returns the status of the request. If the data is present, S_OK is returned.
            If the data is not present, an error code with the best guess as to the reason is returned.</returns>
        </member>
        <member name="M:BExplorer.Shell.DataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)">
            <summary>
            Sets data in the specified format into storage.
            </summary>
            <param name="formatIn">The format of the data.</param>
            <param name="medium">The data.</param>
            <param name="release">If true, ownership of the medium's memory will be transferred
            to this object. If false, a copy of the medium will be created and maintained, and
            the caller is responsible for the memory of the medium it provided.</param>
        </member>
        <member name="M:BExplorer.Shell.DataObject.CopyMedium(System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>
            Creates a copy of the STGMEDIUM structure.
            </summary>
            <param name="medium">The data to copy.</param>
            <returns>The copied data.</returns>
        </member>
        <member name="T:BExplorer.Shell.DataObject.EnumFORMATETC">
            <summary>
            Helps enumerate the formats available in our DataObject class.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.DataObject.EnumFORMATETC.#ctor(System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.Runtime.InteropServices.ComTypes.FORMATETC,System.Runtime.InteropServices.ComTypes.STGMEDIUM}})">
            <summary>
            Creates an instance from a list of key value pairs.
            </summary>
            <param name="storage">List of FORMATETC/STGMEDIUM key value pairs</param>
        </member>
        <member name="M:BExplorer.Shell.DataObject.EnumFORMATETC.#ctor(System.Runtime.InteropServices.ComTypes.FORMATETC[])">
            <summary>
            Creates an instance from an array of FORMATETC's.
            </summary>
            <param name="formats">Array of formats to enumerate.</param>
        </member>
        <member name="M:BExplorer.Shell.DataObject.EnumFORMATETC.Clone(System.Runtime.InteropServices.ComTypes.IEnumFORMATETC@)">
            <summary>
            Creates a clone of this enumerator.
            </summary>
            <param name="newEnum">When this function returns, contains a new instance of IEnumFORMATETC.</param>
        </member>
        <member name="M:BExplorer.Shell.DataObject.EnumFORMATETC.Next(System.Int32,System.Runtime.InteropServices.ComTypes.FORMATETC[],System.Int32[])">
            <summary>
            Retrieves the next elements from the enumeration.
            </summary>
            <param name="celt">The number of elements to retrieve.</param>
            <param name="rgelt">An array to receive the formats requested.</param>
            <param name="pceltFetched">An array to receive the number of element fetched.</param>
            <returns>If the fetched number of formats is the same as the requested number, S_OK is returned.
            There are several reasons S_FALSE may be returned: (1) The requested number of elements is less than
            or equal to zero. (2) The rgelt parameter equals null. (3) There are no more elements to enumerate.
            (4) The requested number of elements is greater than one and pceltFetched equals null or does not
            have at least one element in it. (5) The number of fetched elements is less than the number of
            requested elements.</returns>
        </member>
        <member name="M:BExplorer.Shell.DataObject.EnumFORMATETC.Reset">
            <summary>
            Resets the state of enumeration.
            </summary>
            <returns>S_OK</returns>
        </member>
        <member name="M:BExplorer.Shell.DataObject.EnumFORMATETC.Skip(System.Int32)">
            <summary>
            Skips the number of elements requested.
            </summary>
            <param name="celt">The number of elements to skip.</param>
            <returns>If there are not enough remaining elements to skip, returns S_FALSE. Otherwise, S_OK is returned.</returns>
        </member>
        <member name="F:BExplorer.Shell.ShellTreeViewEx.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellTreeViewEx.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BExplorer.Shell.ShellTreeViewEx.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.PropertyStoreCacheState">
            <summary>
            Property store cache state
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyStoreCacheState.Normal">
            <summary>
            Contained in file, not updated.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyStoreCacheState.NotInSource">
            <summary>
            Not contained in file.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyStoreCacheState.Dirty">
            <summary>
            Contained in file, has been updated since file was consumed.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions">
            <summary>
            Delineates the format of a property string.
            </summary>
            <remarks>
            Typically use one, or a bitwise combination of 
            these flags, to specify the format. Some flags are mutually exclusive, 
            so combinations like <c>ShortTime | LongTime | HideTime</c> are not allowed.
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.None">
            <summary>
            The format settings specified in the property's .propdesc file.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.PrefixName">
            <summary>
            The value preceded with the property's display name.
            </summary>
            <remarks>
            This flag is ignored when the <c>hideLabelPrefix</c> attribute of the <c>labelInfo</c> element 
            in the property's .propinfo file is set to true.
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.FileName">
            <summary>
            The string treated as a file name.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.AlwaysKB">
            <summary>
            The sizes displayed in kilobytes (KB), regardless of size. 
            </summary>
            <remarks>
            This flag applies to properties of <c>Integer</c> types and aligns the values in the column. 
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.RightToLeft">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.ShortTime">
            <summary>
            The time displayed as 'hh:mm am/pm'.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.LongTime">
            <summary>
            The time displayed as 'hh:mm:ss am/pm'.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.HideTime">
            <summary>
            The time portion of date/time hidden.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.ShortDate">
            <summary>
            The date displayed as 'MM/DD/YY'. For example, '3/21/04'.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.LongDate">
            <summary>
            The date displayed as 'DayOfWeek Month day, year'. 
            For example, 'Monday, March 21, 2004'.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.HideDate">
            <summary>
            The date portion of date/time hidden.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.RelativeDate">
            <summary>
            The friendly date descriptions, such as "Yesterday".
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.UseEditInvitation">
            <summary>
            The text displayed in a text box as a cue for the user, such as 'Enter your name'.
            </summary>
            <remarks>
            The invitation text is returned if formatting failed or the value was empty. 
            Invitation text is text displayed in a text box as a cue for the user, 
            Formatting can fail if the data entered 
            is not of an expected type, such as putting alpha characters in 
            a phone number field.
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.ReadOnly">
            <summary>
            This flag requires UseEditInvitation to also be specified. When the 
            formatting flags are ReadOnly | UseEditInvitation and the algorithm 
            would have shown invitation text, a string is returned that indicates 
            the value is "Unknown" instead of the invitation text.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.NoAutoReadingOrder">
            <summary>
            The detection of the reading order is not automatic. Useful when converting 
            to ANSI to omit the Unicode reading order characters.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDescriptionFormatOptions.SmartDateTime">
            <summary>
            Smart display of DateTime values
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.PropertyDisplayType">
            <summary>
            Specifies the display types for a property.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDisplayType.String">
            <summary>
            The String Display. This is the default if the property doesn't specify a display type.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDisplayType.Number">
            <summary>
            The Number Display.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDisplayType.Boolean">
            <summary>
            The Boolean Display.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDisplayType.DateTime">
            <summary>
            The DateTime Display.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyDisplayType.Enumerated">
            <summary>
            The Enumerated Display.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.PropertyAggregationType">
            <summary>
            Property Aggregation Type
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyAggregationType.Default">
            <summary>
            The string "Multiple Values" is displayed.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyAggregationType.First">
            <summary>
            The first value in the selection is displayed.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyAggregationType.Sum">
            <summary>
            The sum of the selected values is displayed. This flag is never returned 
            for data types VT_LPWSTR, VT_BOOL, and VT_FILETIME.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyAggregationType.Average">
            <summary>
            The numerical average of the selected values is displayed. This flag 
            is never returned for data types VT_LPWSTR, VT_BOOL, and VT_FILETIME.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyAggregationType.DateRange">
            <summary>
            The date range of the selected values is displayed. This flag is only 
            returned for values of the VT_FILETIME data type.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyAggregationType.Union">
            <summary>
            A concatenated string of all the values is displayed. The order of 
            individual values in the string is undefined. The concatenated 
            string omits duplicate values; if a value occurs more than once, 
            it only appears a single time in the concatenated string.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyAggregationType.Max">
            <summary>
            The highest of the selected values is displayed.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyAggregationType.Min">
            <summary>
            The lowest of the selected values is displayed.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.PropEnumType">
            <summary>
            Property Enumeration Types
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropEnumType.DiscreteValue">
            <summary>
            Use DisplayText and either RangeMinValue or RangeSetValue.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropEnumType.RangedValue">
            <summary>
            Use DisplayText and either RangeMinValue or RangeSetValue
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropEnumType.DefaultValue">
            <summary>
            Use DisplayText
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropEnumType.EndRange">
            <summary>
            Use Value or RangeMinValue
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.PropertyColumnStateOptions">
            <summary>
            Describes how a property should be treated for display purposes.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.None">
            <summary>
            Default value
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.StringType">
            <summary>
            The value is displayed as a string.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.IntegerType">
            <summary>
            The value is displayed as an integer.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.DateType">
            <summary>
            The value is displayed as a date/time.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.TypeMask">
            <summary>
            A mask for display type values StringType, IntegerType, and DateType.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.OnByDefault">
            <summary>
            The column should be on by default in Details view.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.Slow">
            <summary>
            Will be slow to compute. Perform on a background thread.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.Extended">
            <summary>
            Provided by a handler, not the folder.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.SecondaryUI">
            <summary>
            Not displayed in the context menu, but is listed in the More... dialog.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.Hidden">
            <summary>
            Not displayed in the user interface (UI).
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.PreferVariantCompare">
            <summary>
            VarCmp produces same result as IShellFolder::CompareIDs.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.PreferFormatForDisplay">
            <summary>
            PSFormatForDisplay produces same result as IShellFolder::CompareIDs.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.NoSortByFolders">
            <summary>
            Do not sort folders separately.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.ViewOnly">
            <summary>
            Only displayed in the UI.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.BatchRead">
            <summary>
            Marks columns with values that should be read in a batch.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.NoGroupBy">
            <summary>
            Grouping is disabled for this column.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.FixedWidth">
            <summary>
            Can't resize the column.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.NoDpiScale">
            <summary>
            The width is the same in all dots per inch (dpi)s.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.FixedRatio">
            <summary>
            Fixed width and height ratio.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyColumnStateOptions.DisplayMask">
            <summary>
            Filters out new display flags.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.PropertyConditionType">
            <summary>
            Specifies the condition type to use when displaying the property in the query builder user interface (UI).
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionType.None">
            <summary>
            The default condition type.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionType.String">
            <summary>
            The string type.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionType.Size">
            <summary>
            The size type.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionType.DateTime">
            <summary>
            The date/time type.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionType.Boolean">
            <summary>
            The Boolean type.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionType.Number">
            <summary>
            The number type.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.PropertyConditionOperation">
            <summary>
            Provides a set of flags to be used with IConditionFactory, 
            ICondition, and IConditionGenerator to indicate the operation.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.Implicit">
            <summary>
            The implicit comparison between the value of the property and the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.Equal">
            <summary>
            The value of the property and the value of the constant must be equal.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.NotEqual">
            <summary>
            The value of the property and the value of the constant must not be equal.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.LessThan">
            <summary>
            The value of the property must be less than the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.GreaterThan">
            <summary>
            The value of the property must be greater than the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.LessThanOrEqual">
            <summary>
            The value of the property must be less than or equal to the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.GreaterThanOrEqual">
            <summary>
            The value of the property must be greater than or equal to the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.ValueStartsWith">
            <summary>
            The value of the property must begin with the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.ValueEndsWith">
            <summary>
            The value of the property must end with the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.ValueContains">
            <summary>
            The value of the property must contain the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.ValueNotContains">
            <summary>
            The value of the property must not contain the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.DOSWildCards">
            <summary>
            The value of the property must match the value of the constant, where '?' matches any single character and '*' matches any sequence of characters.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.WordEqual">
            <summary>
            The value of the property must contain a word that is the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.WordStartsWith">
            <summary>
            The value of the property must contain a word that begins with the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyConditionOperation.ApplicationSpecific">
            <summary>
            The application is free to interpret this in any suitable way.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.PropertyGroupingRange">
            <summary>
            Specifies the property description grouping ranges.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyGroupingRange.Discrete">
            <summary>
            The individual values.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyGroupingRange.Alphanumeric">
            <summary>
            The static alphanumeric ranges.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyGroupingRange.Size">
            <summary>
            The static size ranges.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyGroupingRange.Dynamic">
            <summary>
            The dynamically-created ranges.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyGroupingRange.Date">
            <summary>
            The month and year groups.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyGroupingRange.Percent">
            <summary>
            The percent groups.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyGroupingRange.Enumerated">
            <summary>
            The enumerated groups.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.PropertySortDescription">
            <summary>
            Describes the particular wordings of sort offerings.
            </summary>
            <remarks>
            Note that the strings shown are English versions only; 
            localized strings are used for other locales.
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertySortDescription.General">
            <summary>
            The default ascending or descending property sort, "Sort going up", "Sort going down".
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertySortDescription.AToZ">
            <summary>
            The alphabetical sort, "A on top", "Z on top".
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertySortDescription.LowestToHighest">
            <summary>
            The numerical sort, "Lowest on top", "Highest on top".
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertySortDescription.SmallestToBiggest">
            <summary>
            The size sort, "Smallest on top", "Largest on top".
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertySortDescription.OldestToNewest">
            <summary>
            The chronological sort, "Oldest on top", "Newest on top".
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.PropertyTypeOptions">
            <summary>
            Describes the attributes of the <c>typeInfo</c> element in the property's <c>.propdesc</c> file.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyTypeOptions.None">
            <summary>
            The property uses the default values for all attributes.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyTypeOptions.MultipleValues">
            <summary>
            The property can have multiple values.   
            </summary>
            <remarks>
            These values are stored as a VT_VECTOR in the PROPVARIANT structure.
            This value is set by the multipleValues attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyTypeOptions.IsInnate">
            <summary>
            This property cannot be written to. 
            </summary>
            <remarks>
            This value is set by the isInnate attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyTypeOptions.IsGroup">
            <summary>
            The property is a group heading. 
            </summary>
            <remarks>
            This value is set by the isGroup attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyTypeOptions.CanGroupBy">
            <summary>
            The user can group by this property. 
            </summary>
            <remarks>
            This value is set by the canGroupBy attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyTypeOptions.CanStackBy">
            <summary>
            The user can stack by this property. 
            </summary>
            <remarks>
            This value is set by the canStackBy attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyTypeOptions.IsTreeProperty">
            <summary>
            This property contains a hierarchy. 
            </summary>
            <remarks>
            This value is set by the isTreeProperty attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyTypeOptions.IncludeInFullTextQuery">
            <summary>
            Include this property in any full text query that is performed. 
            </summary>
            <remarks>
            This value is set by the includeInFullTextQuery attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyTypeOptions.IsViewable">
            <summary>
            This property is meant to be viewed by the user.  
            </summary>
            <remarks>
            This influences whether the property shows up in the "Choose Columns" dialog, for example.
            This value is set by the isViewable attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyTypeOptions.IsQueryable">
            <summary>
            This property is included in the list of properties that can be queried.   
            </summary>
            <remarks>
            A queryable property must also be viewable.
            This influences whether the property shows up in the query builder UI.
            This value is set by the isQueryable attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyTypeOptions.CanBePurged">
            <summary>
            Used with an innate property (that is, a value calculated from other property values) to indicate that it can be deleted.  
            </summary>
            <remarks>
            Windows Vista with Service Pack 1 (SP1) and later.
            This value is used by the Remove Properties user interface (UI) to determine whether to display a check box next to an property that allows that property to be selected for removal.
            Note that a property that is not innate can always be purged regardless of the presence or absence of this flag.
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyTypeOptions.IsSystemProperty">
            <summary>
            This property is owned by the system.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyTypeOptions.MaskAll">
            <summary>
            A mask used to retrieve all flags.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.PropertyViewOptions">
            <summary>
            Associates property names with property description list strings.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyViewOptions.None">
            <summary>
            The property is shown by default.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyViewOptions.CenterAlign">
            <summary>
            The property is centered.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyViewOptions.RightAlign">
            <summary>
            The property is right aligned.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyViewOptions.BeginNewGroup">
            <summary>
            The property is shown as the beginning of the next collection of properties in the view.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyViewOptions.FillArea">
            <summary>
            The remainder of the view area is filled with the content of this property.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyViewOptions.SortDescending">
            <summary>
            The property is reverse sorted if it is a property in a list of sorted properties.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyViewOptions.ShowOnlyIfPresent">
            <summary>
            The property is only shown if it is present.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyViewOptions.ShowByDefault">
            <summary>
            The property is shown by default in a view (where applicable).
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyViewOptions.ShowInPrimaryList">
            <summary>
            The property is shown by default in primary column selection user interface (UI).
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyViewOptions.ShowInSecondaryList">
            <summary>
            The property is shown by default in secondary column selection UI.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyViewOptions.HideLabel">
            <summary>
            The label is hidden if the view is normally inclined to show the label.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyViewOptions.Hidden">
            <summary>
            The property is not displayed as a column in the UI.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyViewOptions.CanWrap">
            <summary>
            The property is wrapped to the next row.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.PropertyViewOptions.MaskAll">
            <summary>
            A mask used to retrieve all flags.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.IPropertyStoreCache">
            <summary>
            An in-memory property store cache
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.IPropertyStoreCache.GetState(BExplorer.Shell.Interop.PROPERTYKEY@,BExplorer.Shell.Interop.PropertyStoreCacheState@)">
            <summary>
            Gets the state of a property stored in the cache
            </summary>
            <param name="key"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.IPropertyStoreCache.GetValueAndState(BExplorer.Shell.Interop.PROPERTYKEY@,BExplorer.Shell.Interop.PropVariant,BExplorer.Shell.Interop.PropertyStoreCacheState@)">
            <summary>
            Gets the valeu and state of a property in the cache
            </summary>
            <param name="propKey"></param>
            <param name="pv"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.IPropertyStoreCache.SetState(BExplorer.Shell.Interop.PROPERTYKEY@,BExplorer.Shell.Interop.PropertyStoreCacheState)">
            <summary>
            Sets the state of a property in the cache.
            </summary>
            <param name="propKey"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.IPropertyStoreCache.SetValueAndState(BExplorer.Shell.Interop.PROPERTYKEY@,BExplorer.Shell.Interop.PropVariant,BExplorer.Shell.Interop.PropertyStoreCacheState)">
            <summary>
            Sets the value and state in the cache.
            </summary>
            <param name="propKey"></param>
            <param name="pv"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="T:BExplorer.Shell.Interop.IPropertyStore">
            <summary>
            A property store
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.IPropertyStore.GetCount(System.UInt32@)">
            <summary>
            Gets the number of properties contained in the property store.
            </summary>
            <param name="propertyCount"></param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.IPropertyStore.GetAt(System.UInt32,BExplorer.Shell.Interop.PROPERTYKEY@)">
            <summary>
            Get a property key located at a specific index.
            </summary>
            <param name="propertyIndex"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.IPropertyStore.GetValue(BExplorer.Shell.Interop.PROPERTYKEY@,BExplorer.Shell.Interop.PropVariant)">
            <summary>
            Gets the value of a property from the store
            </summary>
            <param name="key"></param>
            <param name="pv"></param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.IPropertyStore.SetValue(BExplorer.Shell.Interop.PROPERTYKEY@,BExplorer.Shell.Interop.PropVariant)">
            <summary>
            Sets the value of a property in the store
            </summary>
            <param name="key"></param>
            <param name="pv"></param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.IPropertyStore.Commit">
            <summary>
            Commits the changes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BExplorer.Shell.Interop.SearchConditionOperation">
            <summary>
            Provides a set of flags to be used with <see cref="!:Microsoft.WindowsAPICodePack.Shell.SearchCondition"/> 
            to indicate the operation in <see cref="!:Microsoft.WindowsAPICodePack.Shell.SearchConditionFactory"/> methods.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.Implicit">
            <summary>
            An implicit comparison between the value of the property and the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.Equal">
            <summary>
            The value of the property and the value of the constant must be equal.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.NotEqual">
            <summary>
            The value of the property and the value of the constant must not be equal.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.LessThan">
            <summary>
            The value of the property must be less than the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.GreaterThan">
            <summary>
            The value of the property must be greater than the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.LessThanOrEqual">
            <summary>
            The value of the property must be less than or equal to the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.GreaterThanOrEqual">
            <summary>
            The value of the property must be greater than or equal to the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.ValueStartsWith">
            <summary>
            The value of the property must begin with the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.ValueEndsWith">
            <summary>
            The value of the property must end with the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.ValueContains">
            <summary>
            The value of the property must contain the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.ValueNotContains">
            <summary>
            The value of the property must not contain the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.DosWildcards">
            <summary>
            The value of the property must match the value of the constant, where '?' 
            matches any single character and '*' matches any sequence of characters.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.WordEqual">
            <summary>
            The value of the property must contain a word that is the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.WordStartsWith">
            <summary>
            The value of the property must contain a word that begins with the value of the constant.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionOperation.ApplicationSpecific">
            <summary>
            The application is free to interpret this in any suitable way.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.SearchConditionType">
            <summary>
            Set of flags to be used with <see cref="!:Microsoft.WindowsAPICodePack.Shell.SearchConditionFactory"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionType.And">
            <summary>
            Indicates that the values of the subterms are combined by "AND".
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionType.Or">
            <summary>
            Indicates that the values of the subterms are combined by "OR".
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionType.Not">
            <summary>
            Indicates a "NOT" comparison of subterms.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SearchConditionType.Leaf">
            <summary>
            Indicates that the node is a comparison between a property and a 
            constant value using a <see cref="!:Microsoft.WindowsAPICodePack.Shell.SearchConditionOperation"/>.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.FolderLogicalViewMode">
            <summary>
            Used to describe the view mode.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.FolderLogicalViewMode.Unspecified">
            <summary>
            The view is not specified.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.FolderLogicalViewMode.None">
            <summary>
            This should have the same affect as Unspecified.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.FolderLogicalViewMode.First">
            <summary>
            The minimum valid enumeration value. Used for validation purposes only.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.FolderLogicalViewMode.Details">
            <summary>
            Details view.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.FolderLogicalViewMode.Tiles">
            <summary>
            Tiles view.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.FolderLogicalViewMode.Icons">
            <summary>
            Icons view.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.FolderLogicalViewMode.List">
            <summary>
            Windows 7 and later. List view.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.FolderLogicalViewMode.Content">
            <summary>
            Windows 7 and later. Content view.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.FolderLogicalViewMode.Last">
            <summary>
            The maximum valid enumeration value. Used for validation purposes only.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.SortDirection">
            <summary>
            The direction in which the items are sorted.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SortDirection.Default">
            <summary>
            A default value for sort direction, this value should not be used;
            instead use Descending or Ascending.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SortDirection.Descending">
            <summary>
            The items are sorted in descending order. Whether the sort is alphabetical, numerical, 
            and so on, is determined by the data type of the column indicated in propkey.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SortDirection.Ascending">
            <summary>
            The items are sorted in ascending order. Whether the sort is alphabetical, numerical, 
            and so on, is determined by the data type of the column indicated in propkey.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.StructuredQuerySingleOption">
            <summary>
            Provides a set of flags to be used with IQueryParser::SetOption and 
            IQueryParser::GetOption to indicate individual options.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQuerySingleOption.Schema">
            <summary>
            The value should be VT_LPWSTR and the path to a file containing a schema binary.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQuerySingleOption.Locale">
            <summary>
            The value must be VT_EMPTY (the default) or a VT_UI4 that is an LCID. It is used
            as the locale of contents (not keywords) in the query to be searched for, when no
            other information is available. The default value is the current keyboard locale.
            Retrieving the value always returns a VT_UI4.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQuerySingleOption.WordBreaker">
            <summary>
            This option is used to override the default word breaker used when identifying keywords
            in queries. The default word breaker is chosen according to the language of the keywords
            (cf. SQSO_LANGUAGE_KEYWORDS below). When setting this option, the value should be VT_EMPTY
            for using the default word breaker, or a VT_UNKNOWN with an object supporting
            the IWordBreaker interface. Retrieving the option always returns a VT_UNKNOWN with an object
            supporting the IWordBreaker interface.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQuerySingleOption.NaturalSyntax">
            <summary>
            The value should be VT_EMPTY or VT_BOOL with VARIANT_TRUE to allow natural query
            syntax (the default) or VT_BOOL with VARIANT_FALSE to allow only advanced query syntax.
            Retrieving the option always returns a VT_BOOL.
            This option is now deprecated, use SQSO_SYNTAX.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQuerySingleOption.AutomaticWildcard">
            <summary>
            The value should be VT_BOOL with VARIANT_TRUE to generate query expressions
            as if each word in the query had a star appended to it (unless followed by punctuation
            other than a parenthesis), or VT_EMPTY or VT_BOOL with VARIANT_FALSE to
            use the words as they are (the default). A word-wheeling application
            will generally want to set this option to true.
            Retrieving the option always returns a VT_BOOL.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQuerySingleOption.TraceLevel">
            <summary>
            Reserved. The value should be VT_EMPTY (the default) or VT_I4.
            Retrieving the option always returns a VT_I4.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQuerySingleOption.LanguageKeywords">
            <summary>
            The value must be a VT_UI4 that is a LANGID. It defaults to the default user UI language.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQuerySingleOption.Syntax">
            <summary>
            The value must be a VT_UI4 that is a STRUCTURED_QUERY_SYNTAX value.
            It defaults to SQS_NATURAL_QUERY_SYNTAX.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQuerySingleOption.TimeZone">
            <summary>
            The value must be a VT_BLOB that is a copy of a TIME_ZONE_INFORMATION structure.
            It defaults to the current time zone.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQuerySingleOption.ImplicitConnector">
            <summary>
            This setting decides what connector should be assumed between conditions when none is specified.
            The value must be a VT_UI4 that is a CONDITION_TYPE. Only CT_AND_CONDITION and CT_OR_CONDITION
            are valid. It defaults to CT_AND_CONDITION.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQuerySingleOption.ConnectorCase">
            <summary>
            This setting decides whether there are special requirements on the case of connector keywords (such
            as AND or OR). The value must be a VT_UI4 that is a CASE_REQUIREMENT value.
            It defaults to CASE_REQUIREMENT_UPPER_IF_AQS.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.StructuredQueryMultipleOption">
            <summary>
            Provides a set of flags to be used with IQueryParser::SetMultiOption 
            to indicate individual options.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQueryMultipleOption.VirtualProperty">
            <summary>
            The key should be property name P. The value should be a
            VT_UNKNOWN with an IEnumVARIANT which has two values: a VT_BSTR that is another
            property name Q and a VT_I4 that is a CONDITION_OPERATION cop. A predicate with
            property name P, some operation and a value V will then be replaced by a predicate
            with property name Q, operation cop and value V before further processing happens.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQueryMultipleOption.DefaultProperty">
            <summary>
            The key should be a value type name V. The value should be a
            VT_LPWSTR with a property name P. A predicate with no property name and a value of type
            V (or any subtype of V) will then use property P.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQueryMultipleOption.GeneratorForType">
            <summary>
            The key should be a value type name V. The value should be a
            VT_UNKNOWN with a IConditionGenerator G. The GenerateForLeaf method of
            G will then be applied to any predicate with value type V and if it returns a query
            expression, that will be used. If it returns NULL, normal processing will be used
            instead.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.StructuredQueryMultipleOption.MapProperty">
            <summary>
            The key should be a property name P. The value should be a VT_VECTOR|VT_LPWSTR,
            where each string is a property name. The count must be at least one. This "map" will be
            added to those of the loaded schema and used during resolution. A second call with the
            same key will replace the current map. If the value is VT_NULL, the map will be removed.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.QueryParserManagerOption">
            <summary>
            Used by IQueryParserManager::SetOption to set parsing options. 
            This can be used to specify schemas and localization options.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.QueryParserManagerOption.SchemaBinaryName">
            <summary>
            A VT_LPWSTR containing the name of the file that contains the schema binary. 
            The default value is StructuredQuerySchema.bin for the SystemIndex catalog 
            and StructuredQuerySchemaTrivial.bin for the trivial catalog.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.QueryParserManagerOption.PreLocalizedSchemaBinaryPath">
            <summary>
            Either a VT_BOOL or a VT_LPWSTR. If the value is a VT_BOOL and is FALSE, 
            a pre-localized schema will not be used. If the value is a VT_BOOL and is TRUE, 
            IQueryParserManager will use the pre-localized schema binary in 
            "%ALLUSERSPROFILE%\Microsoft\Windows". If the value is a VT_LPWSTR, the value should 
            contain the full path of the folder in which the pre-localized schema binary can be found. 
            The default value is VT_BOOL with TRUE.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.QueryParserManagerOption.UnlocalizedSchemaBinaryPath">
            <summary>
            A VT_LPWSTR containing the full path to the folder that contains the 
            unlocalized schema binary. The default value is "%SYSTEMROOT%\System32".
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.QueryParserManagerOption.LocalizedSchemaBinaryPath">
            <summary>
            A VT_LPWSTR containing the full path to the folder that contains the 
            localized schema binary that can be read and written to as needed. 
            The default value is "%LOCALAPPDATA%\Microsoft\Windows".
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.QueryParserManagerOption.AppendLCIDToLocalizedPath">
            <summary>
            A VT_BOOL. If TRUE, then the paths for pre-localized and localized binaries 
            have "\(LCID)" appended to them, where language code identifier (LCID) is 
            the decimal locale ID for the localized language. The default is TRUE.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.QueryParserManagerOption.LocalizerSupport">
            <summary>
            A VT_UNKNOWN with an object supporting ISchemaLocalizerSupport. 
            This object will be used instead of the default localizer support object.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.IconReference">
            <summary>
            A refence to an icon resource 
            </summary>    
        </member>
        <member name="M:BExplorer.Shell.Interop.IconReference.#ctor(System.String,System.Int32)">
            <summary>
            Overloaded constructor takes in the module name and resource id for the icon reference.
            </summary>
            <param name="moduleName">String specifying the name of an executable file, DLL, or icon file</param>
            <param name="resourceId">Zero-based index of the icon</param>
        </member>
        <member name="M:BExplorer.Shell.Interop.IconReference.#ctor(System.String)">
            <summary>
            Overloaded constructor takes in the module name and resource id separated by a comma.
            </summary>
            <param name="refPath">Reference path for the icon consiting of the module name and resource id.</param>
        </member>
        <member name="M:BExplorer.Shell.Interop.IconReference.op_Equality(BExplorer.Shell.Interop.IconReference,BExplorer.Shell.Interop.IconReference)">
            <summary>
            Implements the == (equality) operator.
            </summary>
            <param name="icon1">First object to compare.</param>
            <param name="icon2">Second object to compare.</param>
            <returns>True if icon1 equals icon1; false otherwise.</returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.IconReference.op_Inequality(BExplorer.Shell.Interop.IconReference,BExplorer.Shell.Interop.IconReference)">
            <summary>
            Implements the != (unequality) operator.
            </summary>
            <param name="icon1">First object to compare.</param>
            <param name="icon2">Second object to compare.</param>
            <returns>True if icon1 does not equals icon1; false otherwise.</returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.IconReference.Equals(System.Object)">
            <summary>
            Determines if this object is equal to another.
            </summary>
            <param name="obj">The object to compare</param>
            <returns>Returns true if the objects are equal; false otherwise.</returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.IconReference.GetHashCode">
            <summary>
            Generates a nearly unique hashcode for this structure.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="P:BExplorer.Shell.Interop.IconReference.ModuleName">
            <summary>
            String specifying the name of an executable file, DLL, or icon file
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.IconReference.ResourceId">
            <summary>
            Zero-based index of the icon
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.IconReference.ReferencePath">
            <summary>
            Reference to a specific icon within a EXE, DLL or icon file.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.Helpers.ChangeImageOpacity(System.Drawing.Bitmap,System.Double)">
            <summary>
            Change the opacity of an image
            </summary>
            <param name="originalImage">The original image</param>
            <param name="opacity">Opacity, where 1.0 is no opacity, 0.0 is full transparency</param>
            <returns>The changed image</returns>
        </member>
        <member name="T:BExplorer.Shell.Interop.ShellNotifications">
            <summary>
            Class that allow to receive shell notifications
            
            !!!!! Add this code to your registered form : !!!!!
            protected override void WndProc(ref Message m)
            {
            	switch(m.Msg)
            	{
            		case (int) ShellNotifications.WM_SHNOTIFY:
            		if(Notifications.NotificationReceipt(m.WParam, m.LParam))
            			NewOperation((NotifyInfos) Notifications.NotificationsReceived[Notifications.NotificationsReceived.Count-1]);
            		break;
            	}
            	base.WndProc(ref m);
            }
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellNotifications.RegisterChangeNotify(System.IntPtr,BExplorer.Shell.Interop.ShellNotifications.CSIDL,System.Boolean)">
            <summary>
            Register a form handle
            This form will receive a WM_SHNOTIFY when a notification occures
            
            !!!!! Add this code to your registered form : !!!!!
            protected override void WndProc(ref Message m)
            {
            	switch(m.Msg)
            	{
            		case (int) ShellNotifications.WM_SHNOTIFY:
            		if(Notifications.NotificationReceipt(m.WParam, m.LParam))
            			NewOperation((NotifyInfos) Notifications.NotificationsReceived[Notifications.NotificationsReceived.Count-1]);
            		break;
            	}
            	base.WndProc(ref m);
            }
            </summary>
            <param name="hWnd"></param>
            <param name="FolderID">Root folder of the 'spy' (CSIDL_DESKTOP vor example)</param>
            <param name="Recursively">Look recursively at modifications</param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellNotifications.UnregisterChangeNotify">
            <summary>
            Unregister the form
            </summary>
            <returns>True if successfull</returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellNotifications.GetPathFromPidl(System.IntPtr)">
            <summary>
            Get the path from a Pidl value
            </summary>
            <param name="Pidl">Pidl of the path</param>
            <returns>Path</returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellNotifications.GetDisplayNameFromPidl(System.IntPtr)">
            <summary>
            Do not work
            If someone has a solution please tell me (caudalth@etu.utc.fr)
            </summary>
            <param name="Pidl"></param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellNotifications.GetPidlFromFolderID(System.IntPtr,BExplorer.Shell.Interop.ShellNotifications.CSIDL)">
            <summary>
            Get the Pidl from a special folder ID
            </summary>
            <param name="hWnd">Handle of the window</param>
            <param name="Id">ID of the special folder</param>
            <returns>Pidl of the special folder</returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellNotifications.NotificationReceipt(System.IntPtr,System.IntPtr)">
            <summary>
            Message received from the WndProc of a registered form
            </summary>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns>True if this is a new notification</returns>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_DESKTOP">
            <summary>
            Desktop
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_INTERNET">
            <summary>
            Internet Explorer (icon on desktop)
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_PROGRAMS">
            <summary>
            Start Menu\Programs
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_CONTROLS">
            <summary>
            My Computer\Control Panel
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_PRINTERS">
            <summary>
            My Computer\Printers
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_PERSONAL">
            <summary>
            My Documents
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_FAVORITES">
            <summary>
            user name\Favorites
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_STARTUP">
            <summary>
            Start Menu\Programs\Startup
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_RECENT">
            <summary>
            user name\Recent
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_SENDTO">
            <summary>
            user name\SendTo
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_BITBUCKET">
            <summary>
            desktop\Recycle Bin
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_STARTMENU">
            <summary>
            user name\Start Menu
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_MYDOCUMENTS">
            <summary>
            logical "My Documents" desktop icon
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_MYMUSIC">
            <summary>
            "My Music" folder
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_MYVIDEO">
            <summary>
            "My Videos" folder
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_DESKTOPDIRECTORY">
            <summary>
            user name\Desktop
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_DRIVES">
            <summary>
            My Computer
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_NETWORK">
            <summary>
            Network Neighborhood (My Network Places)
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_NETHOOD">
            <summary>
            user name>nethood
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_FONTS">
            <summary>
            windows\fonts
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_COMMON_STARTMENU">
            <summary>
            All Users\Start Menu
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_COMMON_PROGRAMS">
            <summary>
            All Users\Start Menu\Programs
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_COMMON_STARTUP">
            <summary>
            All Users\Startup
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_COMMON_DESKTOPDIRECTORY">
            <summary>
            All Users\Desktop
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_APPDATA">
            <summary>
            user name\Application Data
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_PRINTHOOD">
            <summary>
            user name\PrintHood
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_LOCAL_APPDATA">
            <summary>
            user name\Local Settings\Applicaiton Data (non roaming)
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_ALTSTARTUP">
            <summary>
            non localized startup
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_COMMON_ALTSTARTUP">
            <summary>
            non localized common startup
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_COMMON_APPDATA">
            <summary>
            All Users\Application Data
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_WINDOWS">
            <summary>
            GetWindowsDirectory()
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_SYSTEM">
            <summary>
            GetSystemDirectory()
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_PROGRAM_FILES">
            <summary>
            C:\Program Files
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_MYPICTURES">
            <summary>
            C:\Program Files\My Pictures
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_PROFILE">
            <summary>
            USERPROFILE
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_SYSTEMX86">
            <summary>
            x86 system directory on RISC
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_PROGRAM_FILESX86">
            <summary>
            x86 C:\Program Files on RISC
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_PROGRAM_FILES_COMMON">
            <summary>
            C:\Program Files\Common
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_PROGRAM_FILES_COMMONX86">
            <summary>
            x86 Program Files\Common on RISC
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_COMMON_TEMPLATES">
            <summary>
            All Users\Templates
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_COMMON_DOCUMENTS">
            <summary>
            All Users\Documents
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_COMMON_ADMINTOOLS">
            <summary>
            All Users\Start Menu\Programs\Administrative Tools
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_ADMINTOOLS">
            <summary>
            user name\Start Menu\Programs\Administrative Tools
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_CONNECTIONS">
            <summary>
            Network and Dial-up Connections
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_COMMON_MUSIC">
            <summary>
            All Users\My Music
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_COMMON_PICTURES">
            <summary>
            All Users\My Pictures
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_COMMON_VIDEO">
            <summary>
            All Users\My Video
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_RESOURCES">
            <summary>
            Resource Direcotry
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_RESOURCES_LOCALIZED">
            <summary>
            Localized Resource Direcotry
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_COMMON_OEM_LINKS">
            <summary>
            Links to All Users OEM specific apps
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_CDBURN_AREA">
            <summary>
            USERPROFILE\Local Settings\Application Data\Microsoft\CD Burning
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_COMPUTERSNEARME">
            <summary>
            Computers Near Me (computered from Workgroup membership)
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_FLAG_CREATE">
            <summary>
            combine with CSIDL_ value to force folder creation in SHGetFolderPath()
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_FLAG_DONT_VERIFY">
            <summary>
            combine with CSIDL_ value to return an unverified folder path
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_FLAG_NO_ALIAS">
            <summary>
            combine with CSIDL_ value to insure non-alias versions of the pidl
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_FLAG_PER_USER_INIT">
            <summary>
            combine with CSIDL_ value to indicate per-user init (eg. upgrade)
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.CSIDL.CSIDL_FLAG_MASK">
            <summary>
            mask for all possible 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.SHGetFolderLocationReturnValues.S_OK">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.SHGetFolderLocationReturnValues.S_FALSE">
            <summary>
            The CSIDL in nFolder is valid but the folder does not exist
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellNotifications.SHGetFolderLocationReturnValues.E_INVALIDARG">
            <summary>
            The CSIDL in nFolder is not valid
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.NotifyInfos">
            <summary>
            Structure that contain informations about a notification
            </summary>
        </member>
        <member name="T:BExplorer.Shell.ShellLibrary">
            <summary>
            A Shell Library in the Shell Namespace
            </summary>
        </member>
        <member name="T:BExplorer.Shell.ShellItem">
            <summary>
            Represents an item in the Windows Shell namespace.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.GetEnumerator">
             <summary>
             Returns an enumerator detailing the child items of the
             <see cref="T:BExplorer.Shell.ShellItem"/>.
             </summary>
            
             <remarks>
             This method returns all child item including hidden
             items.
             </remarks>
            
             <returns>
             An enumerator over all child items.
             </returns>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.GetEnumerator(BExplorer.Shell.Interop.SHCONTF)">
             <summary>
             Returns an enumerator detailing the child items of the
             <see cref="T:BExplorer.Shell.ShellItem"/>.
             </summary>
            
             <param name="filter">
             A filter describing the types of child items to be included.
             </param>
            
             <returns>
             An enumerator over all child items.
             </returns>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.GetDisplayName(BExplorer.Shell.Interop.SIGDN)">
             <summary>
             Returns the name of the item in the specified style.
             </summary>
            
             <param name="sigdn">
             The style of display name to return.
             </param>
            
             <returns>
             A string containing the display name of the item.
             </returns>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.GetShellThumbnail(System.Int32,BExplorer.Shell.Interop.ShellThumbnailFormatOption,BExplorer.Shell.Interop.ShellThumbnailRetrievalOption)">
            <summary>
            Gets the Bitmap of this ShellItem's Icon
            </summary>
            <param name="Size"></param>
            <param name="format"></param>
            <param name="retrieve"></param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.GetIDataObject">
            <summary>
            Returns an <see cref="T:System.Runtime.InteropServices.ComTypes.IDataObject"/> representing the
            item. This object is used in drag and drop operations.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.GetIShellFolder">
            <summary>
            Returns an <see cref="T:BExplorer.Shell.Interop.IShellFolder"/> representing the
            item.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Returns an enumerator detailing the child items of the
             <see cref="T:BExplorer.Shell.ShellItem"/>.
             </summary>
            
             <remarks>
             This method returns all child item including hidden
             items.
             </remarks>
            
             <returns>
             An enumerator over all child items.
             </returns>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.GetSystemImageListIndex(BExplorer.Shell.ShellIconType,BExplorer.Shell.ShellIconFlags)">
             <summary>
             Gets the index in the system image list of the icon representing
             the item.
             </summary>
            
             <param name="type">
             The type of icon to retrieve.
             </param>
            
             <param name="flags">
             Flags detailing additional information to be conveyed by the icon.
             </param>
            
             <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.#ctor(System.Uri)">
             <summary>
             Initializes a new instance of the <see cref="T:BExplorer.Shell.ShellItem"/> class.
             </summary>
            
             <remarks>
             Takes a <see cref="T:System.Uri"/> containing the location of the ShellItem.
             This constructor accepts URIs using two schemes:
            
             - file: A file or folder in the computer's filesystem, e.g.
                     file:///D:/Folder
             - shell: A virtual folder, or a file or folder referenced from
                      a virtual folder, e.g. shell:///Personal/file.txt
             </remarks>
            
             <param name="uri">
             A <see cref="T:System.Uri"/> containing the location of the ShellItem.
             </param>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:BExplorer.Shell.ShellItem"/> class.
             </summary>
            
             <remarks>
             Takes a <see cref="T:System.String"/> containing the location of the ShellItem.
             This constructor accepts URIs using two schemes:
            
             - file: A file or folder in the computer's filesystem, e.g.
                     file:///D:/Folder
             - shell: A virtual folder, or a file or folder referenced from
                      a virtual folder, e.g. shell:///Personal/file.txt
             </remarks>
            
             <param name="path">
             A string containing a Uri with the location of the ShellItem.
             </param>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.#ctor(System.Environment.SpecialFolder)">
             <summary>
             Initializes a new instance of the <see cref="T:BExplorer.Shell.ShellItem"/> class.
             </summary>
            
             <remarks>
             Takes an <see cref="T:System.Environment.SpecialFolder"/> containing the
             location of the folder.
             </remarks>
            
             <param name="folder">
             An <see cref="T:System.Environment.SpecialFolder"/> containing the
             location of the folder.
             </param>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.#ctor(BExplorer.Shell.ShellItem,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:BExplorer.Shell.ShellItem"/> class.
             </summary>
            
             <remarks>
             Creates a ShellItem which is a named child of <paramref name="parent"/>.
             </remarks>
            
             <param name="parent">
             The parent folder of the item.
             </param>
            
             <param name="name">
             The name of the child item.
             </param>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.#ctor(BExplorer.Shell.Interop.IShellItem)">
             <summary>
             Initializes a new instance of the <see cref="T:BExplorer.Shell.ShellItem"/> class.
             </summary>
            
             <param name="comInterface">
             An <see cref="T:BExplorer.Shell.Interop.IShellItem"/> representing the folder.
             </param>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.op_Equality(BExplorer.Shell.ShellItem,BExplorer.Shell.ShellItem)">
            <summary>
            Implements the == (equality) operator.
            </summary>
            <param name="leftShellObject">First object to compare.</param>
            <param name="rightShellObject">Second object to compare.</param>
            <returns>True if leftShellObject equals rightShellObject; false otherwise.</returns>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.op_Inequality(BExplorer.Shell.ShellItem,BExplorer.Shell.ShellItem)">
            <summary>
            Implements the != (inequality) operator.
            </summary>
            <param name="leftShellObject">First object to compare.</param>
            <param name="rightShellObject">Second object to compare.</param>
            <returns>True if leftShellObject does not equal leftShellObject; false otherwise.</returns>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.Compare(BExplorer.Shell.ShellItem)">
             <summary>
             Compares two <see cref="T:BExplorer.Shell.Interop.IShellItem"/>s. The comparison is carried
             out by display order.
             </summary>
            
             <param name="item">
             The item to compare.
             </param>
            
             <returns>
             0 if the two items are equal. A negative number if
             <see langword="this"/> is before <paramref name="item"/> in
             display order. A positive number if
             <see langword="this"/> comes after <paramref name="item"/> in
             display order.
             </returns>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.Equals(BExplorer.Shell.ShellItem)">
            <see langword="true"/> if the two objects refer to the same
            folder, <see langword="false"/> otherwise.
            <summary>
            Determines if two ShellObjects are identical.
            </summary>
            <param name="other">The ShellObject to comare this one to.</param>
            <returns>True if the ShellObjects are equal, false otherwise.</returns>
            		
        </member>
        <member name="M:BExplorer.Shell.ShellItem.Equals(System.Object)">
            <summary>
            Returns whether this object is equal to another.
            </summary>
            <param name="obj">The object to compare against.</param>
            <returns>Equality result.</returns>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.Dispose">
            <summary>
            Clears up any resources associated with the SystemImageList
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.Dispose(System.Boolean)">
            <summary>
            Clears up any resources associated with the SystemImageList
            when disposing is true.
            </summary>
            <param name="disposing">Whether the object is being disposed</param>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.IsParentOf(BExplorer.Shell.ShellItem)">
             <summary>
             Tests whether the <see cref="T:BExplorer.Shell.ShellItem"/> is the parent of
             another item.
             </summary>
            
             <param name="item">
             The potential child item.
             </param>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.ToString">
            <summary>
            Returns a string representation of the <see cref="T:BExplorer.Shell.ShellItem"/>.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.ToUri">
            <summary>
            Returns a URI representation of the <see cref="T:BExplorer.Shell.ShellItem"/>.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellItem.ToShellParsingName(System.String)">
            <summary>
            Converts a File/Folder path into a proper string used to create a <see cref="T:BExplorer.Shell.ShellItem"/>
            </summary>
            <param name="path">The path you want to convert</param>
            <returns></returns>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.ComInterface">
            <summary>
            Gets the underlying <see cref="T:BExplorer.Shell.Interop.IShellItem"/> COM interface.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.Thumbnail">
            <summary>
            Gets the thumbnail of the ShellObject.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.ParsingName">
            <summary>
            Gets the item's parsing name.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.ShellIcon">
            <summary>
            Gets the item's shell icon.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.DisplayName">
            <summary>
            Gets the normal display name of the item.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.FileSystemPath">
            <summary>
            Gets the file system path of the item.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.Pidl">
            <summary>
            Gets a PIDL representing the item.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.IsFolder">
            <summary>
            Gets a value indicating whether the item is a folder.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.HasSubFolders">
            <summary>
            Gets a value indicating whether the item has subfolders.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.IsFileSystem">
            <summary>
            Gets a value indicating whether the item is a file system item.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.IsHidden">
            <summary>Gets a value indicating whether the item is Hidden.</summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.IsLink">
            <summary>
            Gets a value that determines if this ShellObject is a link or shortcut.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.Extension">
             <summary>Returns the extension of the specified path string.</summary>
            <value>
                 The extension of the specified path (including the period "."), or null,
                 or System.String.Empty. If path is null, System.IO.Path.GetExtension(System.String)
                 returns null. If path does not have extension information, System.IO.Path.GetExtension(System.String)
                 returns System.String.Empty.
             </value>
             <exception cref="T:System.ArgumentException">
             path contains one or more of the invalid characters defined in System.IO.Path.GetInvalidPathChars().
             </exception>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.Parent">
            <summary>
            Gets the item's parent.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.ToolTipText">
            <summary>
            Gets the item's tooltip text.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.Desktop">
            <summary>
            Gets the Desktop folder.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItem.Item(System.String)">
             <summary>
             Gets a child item.
             </summary>
            
             <param name="name">
             The name of the child item.
             </param>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.#ctor(BExplorer.Shell.IKnownFolder,System.Boolean)">
            <summary>
            Creates a shell library in the Libraries Known Folder, 
            using the given IKnownFolder
            </summary>
            <param name="sourceKnownFolder">KnownFolder from which to create the new Shell Library</param>
            <param name="isReadOnly">If <B>true</B> , opens the library in read-only mode.</param>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a shell library in the Libraries Known Folder, 
            using the given shell library name.
            </summary>
            <param name="libraryName">The name of this library</param>
            <param name="overwrite">Allow overwriting an existing library; if one exists with the same name</param>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.#ctor(System.String,BExplorer.Shell.IKnownFolder,System.Boolean)">
            <summary>
            Creates a shell library in a given Known Folder, 
            using the given shell library name.
            </summary>
            <param name="libraryName">The name of this library</param>
            <param name="sourceKnownFolder">The known folder</param>
            <param name="overwrite">Override an existing library with the same name</param>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates a shell library in a given local folder, 
            using the given shell library name.
            </summary>
            <param name="libraryName">The name of this library</param>
            <param name="folderPath">The path to the local folder</param>
            <param name="overwrite">Override an existing library with the same name</param>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.Close">
            <summary>
            Close the library, and release its associated file system resources
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.Load(System.String,System.Boolean)">
            <summary>
            Load the library using a number of options
            </summary>
            <param name="libraryName">The name of the library</param>
            <param name="isReadOnly">If <B>true</B>, loads the library in read-only mode.</param>
            <returns>A ShellLibrary Object</returns>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.Load(System.String,System.String,System.Boolean)">
            <summary>
            Load the library using a number of options
            </summary>
            <param name="libraryName">The name of the library.</param>
            <param name="folderPath">The path to the library.</param>
            <param name="isReadOnly">If <B>true</B>, opens the library in read-only mode.</param>
            <returns>A ShellLibrary Object</returns>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.FromShellItem(BExplorer.Shell.Interop.IShellItem,System.Boolean)">
            <summary>
            Load the library using a number of options
            </summary>
            <param name="nativeShellItem">IShellItem</param>
            <param name="isReadOnly">read-only flag</param>
            <returns>A ShellLibrary Object</returns>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.Load(BExplorer.Shell.IKnownFolder,System.Boolean)">
            <summary>
            Load the library using a number of options
            </summary>
            <param name="sourceKnownFolder">A known folder.</param>
            <param name="isReadOnly">If <B>true</B>, opens the library in read-only mode.</param>
            <returns>A ShellLibrary Object</returns>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.ShowManageLibraryUI(System.String,System.String,System.IntPtr,System.String,System.String,System.Boolean)">
            <summary>
            Shows the library management dialog which enables users to mange the library folders and default save location.
            </summary>
            <param name="libraryName">The name of the library</param>
            <param name="folderPath">The path to the library.</param>
            <param name="windowHandle">The parent window,or IntPtr.Zero for no parent</param>
            <param name="title">A title for the library management dialog, or null to use the library name as the title</param>
            <param name="instruction">An optional help string to display for the library management dialog</param>
            <param name="allowAllLocations">If true, do not show warning dialogs about locations that cannot be indexed</param>
            <remarks>If the library is already open in read-write mode, the dialog will not save the changes.</remarks>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.ShowManageLibraryUI(System.String,System.IntPtr,System.String,System.String,System.Boolean)">
            <summary>
            Shows the library management dialog which enables users to mange the library folders and default save location.
            </summary>
            <param name="libraryName">The name of the library</param>
            <param name="windowHandle">The parent window,or IntPtr.Zero for no parent</param>
            <param name="title">A title for the library management dialog, or null to use the library name as the title</param>
            <param name="instruction">An optional help string to display for the library management dialog</param>
            <param name="allowAllLocations">If true, do not show warning dialogs about locations that cannot be indexed</param>
            <remarks>If the library is already open in read-write mode, the dialog will not save the changes.</remarks>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.ShowManageLibraryUI(BExplorer.Shell.IKnownFolder,System.IntPtr,System.String,System.String,System.Boolean)">
            <summary>
            Shows the library management dialog which enables users to mange the library folders and default save location.
            </summary>
            <param name="sourceKnownFolder">A known folder.</param>
            <param name="windowHandle">The parent window,or IntPtr.Zero for no parent</param>
            <param name="title">A title for the library management dialog, or null to use the library name as the title</param>
            <param name="instruction">An optional help string to display for the library management dialog</param>
            <param name="allowAllLocations">If true, do not show warning dialogs about locations that cannot be indexed</param>
            <remarks>If the library is already open in read-write mode, the dialog will not save the changes.</remarks>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.Add(BExplorer.Shell.ShellItem)">
            <summary>
            Add a new FileSystemFolder or SearchConnector
            </summary>
            <param name="item">The folder to add to the library.</param>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.Add(System.String)">
            <summary>
            Add an existing folder to this library
            </summary>
            <param name="folderPath">The path to the folder to be added to the library.</param>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.Clear">
            <summary>
            Clear all items of this Library 
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.Remove(BExplorer.Shell.ShellItem)">
            <summary>
            Remove a folder or search connector
            </summary>
            <param name="item">The item to remove.</param>
            <returns><B>true</B> if the item was removed.</returns>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.Remove(System.String)">
            <summary>
            Remove a folder or search connector
            </summary>
            <param name="folderPath">The path of the item to remove.</param>
            <returns><B>true</B> if the item was removed.</returns>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.Dispose(System.Boolean)">
            <summary>
            Release resources
            </summary>
            <param name="disposing">Indicates that this was called from Dispose(), rather than from the finalizer.</param>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.Finalize">
            <summary>
            Release resources
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.GetEnumerator">
            <summary>
            Retrieves the collection enumerator.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Retrieves the collection enumerator.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.Contains(System.String)">
            <summary>
            Determines if an item with the specified path exists in the collection.
            </summary>
            <param name="fullPath">The path of the item.</param>
            <returns><B>true</B> if the item exists in the collection.</returns>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.Contains(BExplorer.Shell.ShellItem)">
            <summary>
            Determines if a folder exists in the collection.
            </summary>
            <param name="item">The folder.</param>
            <returns><B>true</B>, if the folder exists in the collection.</returns>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.IndexOf(BExplorer.Shell.ShellItem)">
            <summary>
            Searches for the specified FileSystemFolder and returns the zero-based index of the
            first occurrence within Library list.
            </summary>
            <param name="item">The item to search for.</param>
            <returns>The index of the item in the collection, or -1 if the item does not exist.</returns>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.System#Collections#Generic#IList{BExplorer#Shell#ShellItem}#Insert(System.Int32,BExplorer.Shell.ShellItem)">
            <summary>
            Inserts a FileSystemFolder at the specified index.
            </summary>
            <param name="index">The index to insert at.</param>
            <param name="item">The FileSystemFolder to insert.</param>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.System#Collections#Generic#IList{BExplorer#Shell#ShellItem}#RemoveAt(System.Int32)">
            <summary>
            Removes an item at the specified index.
            </summary>
            <param name="index">The index to remove.</param>
        </member>
        <member name="M:BExplorer.Shell.ShellLibrary.System#Collections#Generic#ICollection{BExplorer#Shell#ShellItem}#CopyTo(BExplorer.Shell.ShellItem[],System.Int32)">
            <summary>
            Copies the collection to an array.
            </summary>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The index in the array at which to start the copy.</param>
        </member>
        <member name="P:BExplorer.Shell.ShellLibrary.Name">
            <summary>
            The name of the library, every library must 
            have a name
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">Will throw if no Icon is set</exception>
        </member>
        <member name="P:BExplorer.Shell.ShellLibrary.IconResourceId">
            <summary>
            The Resource Reference to the icon.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellLibrary.LibraryType">
            <summary>
            One of predefined Library types
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">Will throw if no Library Type is set</exception>
        </member>
        <member name="P:BExplorer.Shell.ShellLibrary.LibraryTypeId">
            <summary>
            The Guid of the Library type
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">Will throw if no Library Type is set</exception>
        </member>
        <member name="P:BExplorer.Shell.ShellLibrary.DefaultSaveFolder">
            <summary>
            By default, this folder is the first location 
            added to the library. The default save folder 
            is both the default folder where files can 
            be saved, and also where the library XML 
            file will be saved, if no other path is specified
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellLibrary.IsPinnedToNavigationPane">
            <summary>
            Whether the library will be pinned to the 
            Explorer Navigation Pane
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellLibrary.LibrariesKnownFolder">
            <summary>
            Get a the known folder FOLDERID_Libraries 
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellLibrary.Item(System.Int32)">
            <summary>
            Retrieves the folder at the specified index
            </summary>
            <param name="index">The index of the folder to retrieve.</param>
            <returns>A folder.</returns>
        </member>
        <member name="P:BExplorer.Shell.ShellLibrary.Count">
            <summary>
            The count of the items in the list.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellLibrary.IsReadOnly">
            <summary>
            Indicates whether this list is read-only or not.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellLibrary.IsPlatformSupported">
            <summary>
            Indicates whether this feature is supported on the current platform.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BExplorer.Shell.SyncQueue`1.Enqueue(`0)" -->
        <member name="M:BExplorer.Shell.SyncQueue`1.Dequeue">
            <summary>
            Removes and returns the object at the beginning of the System.Collections.Generic.Queue(Of T). while (queue.Count == 0) System.Threading.Monitor.Wait(queue);
            </summary>
            <returns>
            The object that is removed from the beginning of the System.Collections.Generic.Queue(Of T).
            </returns>
            <Exceptions>
            System.InvalidOperationException: The System.Collections.Generic.Queue(Of T) is empty.
            </Exceptions>
        </member>
        <member name="T:BExplorer.Shell.Collumns">
            <summary>
            Class containing definition for columns
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Defaults.AllColumnsPKeys">
            <summary>
            Return a Dictionary containing information about all columns available to be added to the view.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Defaults.ToNativeColumn(BExplorer.Shell.Collumns,System.Boolean)">
            <summary>
            Convert and Collumns structure to LVCOLUMN (Native Listview Column)
            </summary>
            <param name="col">the column</param>
            <returns>resulting LVCOLUMN structure</returns>
        </member>
        <member name="M:BExplorer.Shell.Extensions.ToShellParsingName(System.String)">
            <summary>
            Converts a File/Folder path into a proper string used to create a <see cref="T:BExplorer.Shell.ShellItem"/>
            </summary>
            <param name="path">The path you want to convert</param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.Extensions.ToArray(BExplorer.Shell.Interop.IShellItemArray)">
            <summary>
            Converts an <see cref="T:BExplorer.Shell.Interop.IShellItemArray"/> into a IShellItem[]
            </summary>
            <param name="shellItemArray">The Interface you want to convert</param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.Extensions.ToShellItemArray(System.Windows.Forms.IDataObject)">
            <summary>
            Converts a <see cref="T:System.Windows.Forms.IDataObject"/> into an <see cref="T:BExplorer.Shell.Interop.IShellItemArray"/>
            </summary>
            <param name="dataobject">The Interface you want to convert</param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.Extensions.ToShellItemArray(System.Windows.IDataObject)">
            <summary>
            Converts a <see cref="T:System.Windows.Forms.IDataObject"/> into an <see cref="T:BExplorer.Shell.Interop.IShellItemArray"/>
            </summary>
            <param name="dataobject">The Interface you want to convert</param>
            <returns></returns>
        </member>
        <member name="T:BExplorer.Shell.Interop.GetPropertyStoreOptions">
            <summary>
            Indicate flags that modify the property store object retrieved by methods 
            that create a property store, such as IShellItem2::GetPropertyStore or 
            IPropertyStoreFactory::GetPropertyStore.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.GetPropertyStoreOptions.Default">
            <summary>
            Meaning to a calling process: Return a read-only property store that contains all 
            properties. Slow items (offline files) are not opened. 
            Combination with other flags: Can be overridden by other flags.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.GetPropertyStoreOptions.HandlePropertiesOnly">
            <summary>
            Meaning to a calling process: Include only properties directly from the property
            handler, which opens the file on the disk, network, or device. Meaning to a file 
            folder: Only include properties directly from the handler.
            
            Meaning to other folders: When delegating to a file folder, pass this flag on 
            to the file folder; do not do any multiplexing (MUX). When not delegating to a 
            file folder, ignore this flag instead of returning a failure code.
            
            Combination with other flags: Cannot be combined with GPS_TEMPORARY, 
            GPS_FASTPROPERTIESONLY, or GPS_BESTEFFORT.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.GetPropertyStoreOptions.ReadWrite">
            <summary>
            Meaning to a calling process: Can write properties to the item. 
            Note: The store may contain fewer properties than a read-only store. 
            
            Meaning to a file folder: ReadWrite.
            
            Meaning to other folders: ReadWrite. Note: When using default MUX, 
            return a single unmultiplexed store because the default MUX does not support ReadWrite.
            
            Combination with other flags: Cannot be combined with GPS_TEMPORARY, GPS_FASTPROPERTIESONLY, 
            GPS_BESTEFFORT, or GPS_DELAYCREATION. Implies GPS_HANDLERPROPERTIESONLY.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.GetPropertyStoreOptions.Temporary">
            <summary>
            Meaning to a calling process: Provides a writable store, with no initial properties, 
            that exists for the lifetime of the Shell item instance; basically, a property bag 
            attached to the item instance. 
            
            Meaning to a file folder: Not applicable. Handled by the Shell item.
            
            Meaning to other folders: Not applicable. Handled by the Shell item.
            
            Combination with other flags: Cannot be combined with any other flag. Implies GPS_READWRITE
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.GetPropertyStoreOptions.FastPropertiesOnly">
            <summary>
            Meaning to a calling process: Provides a store that does not involve reading from the 
            disk or network. Note: Some values may be different, or missing, compared to a store 
            without this flag. 
            
            Meaning to a file folder: Include the "innate" and "fallback" stores only. Do not load the handler.
            
            Meaning to other folders: Include only properties that are available in memory or can 
            be computed very quickly (no properties from disk, network, or peripheral IO devices). 
            This is normally only data sources from the IDLIST. When delegating to other folders, pass this flag on to them.
            
            Combination with other flags: Cannot be combined with GPS_TEMPORARY, GPS_READWRITE, 
            GPS_HANDLERPROPERTIESONLY, or GPS_DELAYCREATION.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.GetPropertyStoreOptions.OpensLowItem">
            <summary>
            Meaning to a calling process: Open a slow item (offline file) if necessary. 
            Meaning to a file folder: Retrieve a file from offline storage, if necessary. 
            Note: Without this flag, the handler is not created for offline files.
            
            Meaning to other folders: Do not return any properties that are very slow.
            
            Combination with other flags: Cannot be combined with GPS_TEMPORARY or GPS_FASTPROPERTIESONLY.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.GetPropertyStoreOptions.DelayCreation">
            <summary>
            Meaning to a calling process: Delay memory-intensive operations, such as file access, until 
            a property is requested that requires such access. 
            
            Meaning to a file folder: Do not create the handler until needed; for example, either 
            GetCount/GetAt or GetValue, where the innate store does not satisfy the request. 
            Note: GetValue might fail due to file access problems.
            
            Meaning to other folders: If the folder has memory-intensive properties, such as 
            delegating to a file folder or network access, it can optimize performance by 
            supporting IDelayedPropertyStoreFactory and splitting up its properties into a 
            fast and a slow store. It can then use delayed MUX to recombine them.
            
            Combination with other flags: Cannot be combined with GPS_TEMPORARY or 
            GPS_READWRITE
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.GetPropertyStoreOptions.BestEffort">
            <summary>
            Meaning to a calling process: Succeed at getting the store, even if some 
            properties are not returned. Note: Some values may be different, or missing,
            compared to a store without this flag. 
            
            Meaning to a file folder: Succeed and return a store, even if the handler or 
            innate store has an error during creation. Only fail if substores fail.
            
            Meaning to other folders: Succeed on getting the store, even if some properties 
            are not returned.
            
            Combination with other flags: Cannot be combined with GPS_TEMPORARY, 
            GPS_READWRITE, or GPS_HANDLERPROPERTIESONLY.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.GetPropertyStoreOptions.MaskValid">
            <summary>
            Mask for valid GETPROPERTYSTOREFLAGS values.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.IExtractIcon.GetIconLocation(BExplorer.Shell.Interop.IExtractIconUFlags,System.Text.StringBuilder,System.Int32,System.Int32@,BExplorer.Shell.Interop.IExtractIconPWFlags@)">
             <summary>
             Gets the location and index of an icon.
             </summary>
             <param name="uFlags">One or more of the following values. This parameter can also be NULL.use GIL_ Consts</param>
             <param name="szIconFile">A pointer to a buffer that receives the icon location. The icon location is a null-terminated string that identifies the file that contains the icon.</param>
             <param name="cchMax">The size of the buffer, in characters, pointed to by pszIconFile.</param>
             <param name="piIndex">A pointer to an int that receives the index of the icon in the file pointed to by pszIconFile.</param>
             <param name="pwFlags">A pointer to a UINT value that receives zero or a combination of the following value</param>
             <returns></returns>
            
        </member>
        <member name="M:BExplorer.Shell.Interop.IExtractIcon.Extract(System.String,System.UInt32,System.IntPtr@,System.IntPtr@,System.UInt32)">
            <summary>
            Extracts an icon image from the specified location.
            </summary>
            <param name="pszFile">A pointer to a null-terminated string that specifies the icon location.</param>
            <param name="nIconIndex">The index of the icon in the file pointed to by pszFile.</param>
            <param name="phiconLarge">A pointer to an HICON value that receives the handle to the large icon. This parameter may be NULL.</param>
            <param name="phiconSmall">A pointer to an HICON value that receives the handle to the small icon. This parameter may be NULL.</param>
            <param name="nIconSize">The desired size of the icon, in pixels. The low word contains the size of the large icon, and the high word contains the size of the small icon. The size specified can be the width or height. The width of an icon always equals its height.</param>
            <returns>
            Returns S_OK if the function extracted the icon, or S_FALSE if the calling application should extract the icon.
            </returns>
        </member>
        <member name="T:BExplorer.Shell.Interop.PropVariant">
            <summary>
            Represents the OLE struct PROPVARIANT.
            This class is intended for internal use only.
            </summary>
            <remarks>
            Originally sourced from http://blogs.msdn.com/adamroot/pages/interop-with-propvariants-in-net.aspx
            and modified to support additional types including vectors and ability to set values
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.FromObject(System.Object)">
            <summary>
            Attempts to create a PropVariant by finding an appropriate constructor.
            </summary>
            <param name="value">Object from which PropVariant should be created.</param>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor">
            <summary>
            Default constrcutor
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.String)">
            <summary>
            Set a string value
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.String[])">
            <summary>
            Set a string vector
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Boolean[])">
            <summary>
            Set a bool vector
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Int16[])">
            <summary>
            Set a short vector
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.UInt16[])">
            <summary>
            Set a short vector
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Int32[])">
            <summary>
            Set an int vector
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.UInt32[])">
            <summary>
            Set an uint vector
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Int64[])">
            <summary>
            Set a long vector
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.UInt64[])">
            <summary>
            Set a ulong vector
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Double[])">
            <summary>>
            Set a double vector
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.DateTime[])">
            <summary>
            Set a DateTime vector
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Boolean)">
            <summary>
            Set a bool value
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.DateTime)">
            <summary>
            Set a DateTime value
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Byte)">
            <summary>
            Set a byte value
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.SByte)">
            <summary>
            Set a sbyte value
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Int16)">
            <summary>
            Set a short value
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.UInt16)">
            <summary>
            Set an unsigned short value
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Int32)">
            <summary>
            Set an int value
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.UInt32)">
            <summary>
            Set an unsigned int value
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Decimal)">
            <summary>
            Set a decimal  value
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Decimal[])">
            <summary>
            Create a PropVariant with a contained decimal array.
            </summary>
            <param name="value">Decimal array to wrap.</param>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Single)">
            <summary>
            Create a PropVariant containing a float type.
            </summary>        
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Single[])">
            <summary>
            Creates a PropVariant containing a float[] array.
            </summary>        
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Int64)">
            <summary>
            Set a long
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.UInt64)">
            <summary>
            Set a ulong
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.#ctor(System.Double)">
            <summary>
            Set a double
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.SetIUnknown(System.Object)">
            <summary>
            Set an IUnknown value
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.SetSafeArray(System.Array)">
            <summary>
            Set a safe array value
            </summary>
            <param name="array">The new value to set.</param>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.Dispose">
            <summary>
            Disposes the object, calls the clear function.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.PropVariant.ToString">
            <summary>
            Provides an simple string representation of the contained data and type.
            </summary>
            <returns></returns>
        </member>
        <member name="P:BExplorer.Shell.Interop.PropVariant.VarType">
            <summary>
            Gets or sets the variant type.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.PropVariant.IsNullOrEmpty">
            <summary>
            Checks if this has an empty or null value
            </summary>
            <returns></returns>
        </member>
        <member name="P:BExplorer.Shell.Interop.PropVariant.Value">
            <summary>
            Gets the variant value.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.IColumnProvider.GetItemData(BExplorer.Shell.Interop.LPCSHCOLUMNID,BExplorer.Shell.Interop.LPCSHCOLUMNDATA,System.Object@)">
            <summary>
            Note: these objects must be threadsafe!  GetItemData _will_ be called
            simultaneously from multiple threads.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.CM_COLUMNINFO.cbSize">
            DWORD->unsigned int
        </member>
        <member name="F:BExplorer.Shell.Interop.CM_COLUMNINFO.dwMask">
            DWORD->unsigned int
        </member>
        <member name="F:BExplorer.Shell.Interop.CM_COLUMNINFO.dwState">
            DWORD->unsigned int
        </member>
        <member name="F:BExplorer.Shell.Interop.CM_COLUMNINFO.uWidth">
            UINT->unsigned int
        </member>
        <member name="F:BExplorer.Shell.Interop.CM_COLUMNINFO.uDefaultWidth">
            UINT->unsigned int
        </member>
        <member name="F:BExplorer.Shell.Interop.CM_COLUMNINFO.uIdealWidth">
            UINT->unsigned int
        </member>
        <member name="F:BExplorer.Shell.Interop.CM_COLUMNINFO.wszName">
            WCHAR[]
        </member>
        <member name="T:BExplorer.Shell.Interop.FileIcon">
            <summary>
            Enables extraction of icons for any file type from
            the Shell.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.FileIcon.GetInfo">
            <summary>
             Gets the information for the specified 
             file name and flags.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.FileIcon.#ctor">
            <summary>
            Constructs a new, default instance of the FileIcon
            class.  Specify the filename and call GetInfo()
            to retrieve an icon.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.FileIcon.#ctor(System.String)">
            <summary>
            Constructs a new instance of the FileIcon class
            and retrieves the icon, display name and type name
            for the specified file.      
            </summary>
            <param name="fileName">The filename to get the icon, 
            display name and type name for</param>
        </member>
        <member name="M:BExplorer.Shell.Interop.FileIcon.#ctor(System.String,BExplorer.Shell.Interop.FileIcon.SHGetFileInfoConstants)">
            <summary>
            Constructs a new instance of the FileIcon class
            and retrieves the information specified in the 
            flags.
            </summary>
            <param name="fileName">The filename to get information
            for</param>
            <param name="flags">The flags to use when extracting the
            icon and other shell information.</param>
        </member>
        <member name="P:BExplorer.Shell.Interop.FileIcon.Flags">
            <summary>
            Gets/sets the flags used to extract the icon
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.FileIcon.FileName">
            <summary>
            Gets/sets the filename to get the icon for
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.FileIcon.ShellIcon">
            <summary>
            Gets the icon for the chosen file
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.FileIcon.DisplayName">
            <summary>
            Gets the display name for the selected file
            if the SHGFI_DISPLAYNAME flag was set.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.FileIcon.TypeName">
            <summary>
            Gets the type name for the selected file
            if the SHGFI_TYPENAME flag was set.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.FileIcon.SHGetFileInfoConstants.SHIL_JUMBO">
            <summary>Transfered from SystemImageList. I don't know if its needed O.o!</summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.ShellLink">
            <summary>
            Summary description for ShellLink.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellLink.#ctor">
            <summary>
            Creates an instance of the Shell Link object.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellLink.#ctor(System.String)">
            <summary>
            Creates an instance of a Shell Link object
            from the specified link file
            </summary>
            <param name="linkFile">The Shortcut file to open</param>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellLink.Finalize">
            <summary>
            Call dispose just in case it hasn't happened yet
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellLink.Dispose">
            <summary>
            Dispose the object, releasing the COM ShellLink object
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellLink.Save">
            <summary>
            Saves the shortcut to ShortCutFile.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellLink.Save(System.String)">
            <summary>
            Saves the shortcut to the specified file
            </summary>
            <param name="linkFile">The shortcut file (.lnk)</param>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellLink.Open(System.String)">
            <summary>
            Loads a shortcut from the specified file
            </summary>
            <param name="linkFile">The shortcut file (.lnk) to load</param>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellLink.Open(System.String,System.IntPtr,BExplorer.Shell.Interop.ShellLink.EShellLinkResolveFlags)">
            <summary>
            Loads a shortcut from the specified file, and allows flags controlling
            the UI behaviour if the shortcut's target isn't found to be set.
            </summary>
            <param name="linkFile">The shortcut file (.lnk) to load</param>
            <param name="hWnd">The window handle of the application's UI, if any</param>
            <param name="resolveFlags">Flags controlling resolution behaviour</param>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellLink.Open(System.String,System.IntPtr,BExplorer.Shell.Interop.ShellLink.EShellLinkResolveFlags,System.UInt16)">
            <summary>
            Loads a shortcut from the specified file, and allows flags controlling
            the UI behaviour if the shortcut's target isn't found to be set.  If
            no SLR_NO_UI is specified, you can also specify a timeout.
            </summary>
            <param name="linkFile">The shortcut file (.lnk) to load</param>
            <param name="hWnd">The window handle of the application's UI, if any</param>
            <param name="resolveFlags">Flags controlling resolution behaviour</param>
            <param name="timeOut">Timeout if SLR_NO_UI is specified, in ms.</param>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellLink.LargeIcon">
            <summary>
            Gets a System.Drawing.Icon containing the icon for this
            ShellLink object.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellLink.IconPath">
            <summary>
            Gets the path to the file containing the icon for this shortcut.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellLink.IconIndex">
            <summary>
            Gets the index of this icon within the icon path's resources
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellLink.Target">
            <summary>
            Gets/sets the fully qualified path to the link's target
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellLink.WorkingDirectory">
            <summary>
            Gets/sets the Working Directory for the Link
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellLink.Description">
            <summary>
            Gets/sets the description of the link
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellLink.Arguments">
            <summary>
            Gets/sets any command line arguments associated with the link
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellLink.DisplayMode">
            <summary>
            Gets/sets the initial display mode when the shortcut is
            run
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellLink.HotKey">
            <summary>
            Gets/sets the HotKey to start the shortcut (if any)
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.ShellLink.EShellLinkResolveFlags">
            <summary>
            Flags determining how the links with missing
            targets are resolved.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellLink.EShellLinkResolveFlags.SLR_ANY_MATCH">
            <summary>
            Allow any match during resolution.  Has no effect
            on ME/2000 or above, use the other flags instead.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellLink.EShellLinkResolveFlags.SLR_INVOKE_MSI">
            <summary>
            Call the Microsoft Windows Installer. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellLink.EShellLinkResolveFlags.SLR_NOLINKINFO">
            <summary>
            Disable distributed link tracking. By default, 
            distributed link tracking tracks removable media 
            across multiple devices based on the volume name. 
            It also uses the UNC path to track remote file 
            systems whose drive letter has changed. Setting 
            SLR_NOLINKINFO disables both types of tracking.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellLink.EShellLinkResolveFlags.SLR_NO_UI">
            <summary>
            Do not display a dialog box if the link cannot be resolved. 
            When SLR_NO_UI is set, a time-out value that specifies the 
            maximum amount of time to be spent resolving the link can 
            be specified in milliseconds. The function returns if the 
            link cannot be resolved within the time-out duration. 
            If the timeout is not set, the time-out duration will be 
            set to the default value of 3,000 milliseconds (3 seconds). 
            </summary>                                  
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellLink.EShellLinkResolveFlags.SLR_NO_UI_WITH_MSG_PUMP">
            <summary>
            Not documented in SDK.  Assume same as SLR_NO_UI but 
            intended for applications without a hWnd.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellLink.EShellLinkResolveFlags.SLR_NOUPDATE">
            <summary>
            Do not update the link information. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellLink.EShellLinkResolveFlags.SLR_NOSEARCH">
            <summary>
            Do not execute the search heuristics. 
            </summary>                                                        
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellLink.EShellLinkResolveFlags.SLR_NOTRACK">
            <summary>
            Do not use distributed link tracking. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellLink.EShellLinkResolveFlags.SLR_UPDATE">
            <summary>
            If the link object has changed, update its path and list 
            of identifiers. If SLR_UPDATE is set, you do not need to 
            call IPersistFile::IsDirty to determine whether or not 
            the link object has changed. 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:BExplorer.Shell.Interop.ShellThumbnailRetrievalOption" -->
        <member name="F:BExplorer.Shell.Interop.ShellThumbnailRetrievalOption.Default">
            <summary>
            The default behavior loads a thumbnail. If there is no thumbnail for the current ShellItem,  
            the icon is retrieved. The thumbnail or icon is extracted if it is not currently cached.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellThumbnailRetrievalOption.CacheOnly">
            <summary>
            The CacheOnly behavior returns a cached thumbnail if it is available. Allows access to the disk,
            but only to retrieve a cached item. If no cached thumbnail is available, a cached per-instance icon is returned but  
            a thumbnail or icon is not extracted.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellThumbnailRetrievalOption.MemoryOnly">
            <summary>
            The MemoryOnly behavior returns the item only if it is in memory. The disk is not accessed even if the item is cached. 
            Note that this only returns an already-cached icon and can fall back to a per-class icon if 
            an item has a per-instance icon that has not been cached yet. Retrieving a thumbnail, 
            even if it is cached, always requires the disk to be accessed, so this method should not be 
            called from the user interface (UI) thread without passing ShellThumbnailCacheOptions.MemoryOnly.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.ShellThumbnailFormatOption">
            <summary>
            Represents the format options for the thumbnails and icons.
            </summary>    
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellThumbnailFormatOption.Default">
            <summary>
            The default behavior loads a thumbnail. An HBITMAP for the icon of the item is retrieved if there is no thumbnail for the current Shell Item.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellThumbnailFormatOption.ThumbnailOnly">
            <summary>
            The ThumbnailOnly behavior returns only the thumbnails, never the icon. Note that not all items have thumbnails 
            so ShellThumbnailFormatOption.ThumbnailOnly can fail in these cases.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellThumbnailFormatOption.IconOnly">
            <summary>
            The IconOnly behavior returns only the icon, never the thumbnail.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.ShellThumbnail">
            <summary>
            Represents a thumbnail or an icon for a ShellObject.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellThumbnail.shellItemNative">
            <summary>
            Native shellItem
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ShellThumbnail.currentSize">
            <summary>
            Internal member to keep track of the current size
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.ShellThumbnail.#ctor(BExplorer.Shell.ShellItem)">
            <summary>
            Internal constructor that takes in a parent ShellObject.
            </summary>
            <param name="shellObject"></param>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.CurrentSize">
            <summary>
            Gets or sets the default size of the thumbnail or icon. The default is 32x32 pixels for icons and 
            256x256 pixels for thumbnails.
            </summary>
            <remarks>If the size specified is larger than the maximum size of 1024x1024 for thumbnails and 256x256 for icons,
            an <see cref="T:System.ArgumentOutOfRangeException"/> is thrown.
            </remarks>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.Bitmap">
            <summary>
            Gets the thumbnail or icon image in <see cref="T:System.Drawing.Bitmap"/> format.
            Null is returned if the ShellObject does not have a thumbnail or icon image.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.BitmapSource">
            <summary>
            Gets the thumbnail or icon image in <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> format. 
            Null is returned if the ShellObject does not have a thumbnail or icon image.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.Icon">
            <summary>
            Gets the thumbnail or icon image in <see cref="T:System.Drawing.Icon"/> format. 
            Null is returned if the ShellObject does not have a thumbnail or icon image.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.SmallBitmap">
            <summary>
            Gets the thumbnail or icon in small size and <see cref="T:System.Drawing.Bitmap"/> format.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.SmallBitmapSource">
            <summary>
            Gets the thumbnail or icon in small size and <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> format.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.SmallIcon">
            <summary>
            Gets the thumbnail or icon in small size and <see cref="T:System.Drawing.Icon"/> format.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.MediumBitmap">
            <summary>
            Gets the thumbnail or icon in Medium size and <see cref="T:System.Drawing.Bitmap"/> format.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.MediumBitmapSource">
            <summary>
            Gets the thumbnail or icon in medium size and <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> format.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.MediumIcon">
            <summary>
            Gets the thumbnail or icon in Medium size and <see cref="T:System.Drawing.Icon"/> format.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.LargeBitmap">
            <summary>
            Gets the thumbnail or icon in large size and <see cref="T:System.Drawing.Bitmap"/> format.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.LargeBitmapSource">
            <summary>
            Gets the thumbnail or icon in large size and <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> format.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.LargeIcon">
            <summary>
            Gets the thumbnail or icon in Large size and <see cref="T:System.Drawing.Icon"/> format.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.ExtraLargeBitmap">
            <summary>
            Gets the thumbnail or icon in extra large size and <see cref="T:System.Drawing.Bitmap"/> format.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.ExtraLargeBitmapSource">
            <summary>
            Gets the thumbnail or icon in Extra Large size and <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> format.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.ExtraLargeIcon">
            <summary>
            Gets the thumbnail or icon in Extra Large size and <see cref="T:System.Drawing.Icon"/> format.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.RetrievalOption">
            <summary>
            Gets or sets a value that determines if the current retrieval option is cache or extract, cache only, or from memory only.
            The default is cache or extract.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.FormatOption">
            <summary>
            Gets or sets a value that determines if the current format option is thumbnail or icon, thumbnail only, or icon only.
            The default is thumbnail or icon.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Interop.ShellThumbnail.AllowBiggerSize">
            <summary>
            Gets or sets a value that determines if the user can manually stretch the returned image.
            The default value is false.
            </summary>
            <remarks>
            For example, if the caller passes in 80x80 a 96x96 thumbnail could be returned. 
            This could be used as a performance optimization if the caller will need to stretch 
            the image themselves anyway. Note that the Shell implementation performs a GDI stretch blit. 
            If the caller wants a higher quality image stretch, they should pass this flag and do it themselves.
            </remarks>
        </member>
        <member name="T:BExplorer.Shell.Interop.DefaultIconSize">
            <summary>
            Defines the read-only properties for default shell icon sizes.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.DefaultIconSize.Small">
            <summary>
            The small size property for a 16x16 pixel Shell Icon.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.DefaultIconSize.Medium">
            <summary>
            The medium size property for a 32x32 pixel Shell Icon.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.DefaultIconSize.Large">
            <summary>
            The large size property for a 48x48 pixel Shell Icon.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.DefaultIconSize.ExtraLarge">
            <summary>
            The extra-large size property for a 256x256 pixel Shell Icon.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.DefaultIconSize.Maximum">
            <summary>
            The maximum size for a Shell Icon, 256x256 pixels.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.DefaultThumbnailSize">
            <summary>
            Defines the read-only properties for default shell thumbnail sizes.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.DefaultThumbnailSize.Small">
            <summary>
            Gets the small size property for a 32x32 pixel Shell Thumbnail.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.DefaultThumbnailSize.Medium">
            <summary>
            Gets the medium size property for a 96x96 pixel Shell Thumbnail.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.DefaultThumbnailSize.Large">
            <summary>
            Gets the large size property for a 256x256 pixel Shell Thumbnail.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.DefaultThumbnailSize.ExtraLarge">
            <summary>
            Gets the extra-large size property for a 1024x1024 pixel Shell Thumbnail.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.DefaultThumbnailSize.Maximum">
            <summary>
            Maximum size for the Shell Thumbnail, 1024x1024 pixels.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.DefinitionOptions">
            <summary>
            Specifies behaviors for known folders.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.DefinitionOptions.None">
            <summary>
            No behaviors are defined.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.DefinitionOptions.LocalRedirectOnly">
            <summary>
            Prevents a per-user known folder from being 
            redirected to a network location.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.DefinitionOptions.Roamable">
            <summary>
            The known folder can be roamed through PC-to-PC synchronization.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.DefinitionOptions.Precreate">
            <summary>
            Creates the known folder when the user first logs on.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.FileSystemKnownFolder">
            <summary>
            Represents a registered file system Known Folder
            </summary>
        </member>
        <member name="T:BExplorer.Shell.IKnownFolder">
            <summary>
            Represents a registered or known folder in the system.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.Path">
            <summary>
            Gets the path for this known folder.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.Category">
            <summary>
            Gets the category designation for this known folder.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.CanonicalName">
            <summary>
            Gets this known folder's canonical name.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.Description">
            <summary>
            Gets this known folder's description.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.ParentId">
            <summary>
            Gets the unique identifier for this known folder's parent folder.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.RelativePath">
            <summary>
            Gets this known folder's relative path.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.ParsingName">
            <summary>
            Gets this known folder's parsing name.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.Tooltip">
            <summary>
            Gets this known folder's tool tip text.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.TooltipResourceId">
            <summary>
            Gets the resource identifier for this 
            known folder's tool tip text.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.LocalizedName">
            <summary>
            Gets this known folder's localized name.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.LocalizedNameResourceId">
            <summary>
            Gets the resource identifier for this 
            known folder's localized name.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.Security">
            <summary>
            Gets this known folder's security attributes.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.FileAttributes">
            <summary>
            Gets this known folder's file attributes, 
            such as "read-only".
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.DefinitionOptions">
            <summary>
            Gets an value that describes this known folder's behaviors.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.FolderTypeId">
            <summary>
            Gets the unique identifier for this known folder's type.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.FolderType">
            <summary>
            Gets a string representation of this known folder's type.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.FolderId">
            <summary>
            Gets the unique identifier for this known folder.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.PathExists">
            <summary>
            Gets a value that indicates whether this known folder's path exists on the computer. 
            </summary>
            <remarks>If this property value is <b>false</b>, 
            the folder might be a virtual folder (<see cref="P:BExplorer.Shell.IKnownFolder.Category"/> property will
            be <see cref="F:BExplorer.Shell.FolderCategory.Virtual"/> for virtual folders)</remarks>
        </member>
        <member name="P:BExplorer.Shell.IKnownFolder.Redirection">
            <summary>
            Gets a value that states whether this known folder 
            can have its path set to a new value, 
            including any restrictions on the redirection.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.FileSystemKnownFolder.#ctor(System.Uri)">
             <summary>
             Initializes a new instance of the <see cref="T:BExplorer.Shell.FileSystemKnownFolder"/> class.
             </summary>
             <remarks>
             Takes a <see cref="T:System.Uri"/> containing the location of the FileSystemKnownFolder. 
             This constructor accepts URIs using two schemes:
            
             - file: A file or folder in the computer's filesystem, e.g.
             file:///D:/Folder
             - shell: A virtual folder, or a file or folder referenced from 
             a virtual folder, e.g. shell:///Personal/file.txt
             </remarks>
             <param name="uri">
             A <see cref="T:System.Uri"/> containing the location of the FileSystemKnownFolder.
             </param>
        </member>
        <member name="M:BExplorer.Shell.FileSystemKnownFolder.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:BExplorer.Shell.FileSystemKnownFolder"/> class.
             </summary>
             <remarks>
             Takes a <see cref="T:System.String"/> containing the location of the FileSystemKnownFolder. 
             This constructor accepts URIs using two schemes:
            
             - file: A file or folder in the computer's filesystem, e.g.
             file:///D:/Folder
             - shell: A virtual folder, or a file or folder referenced from 
             a virtual folder, e.g. shell:///Personal/file.txt
             </remarks>
             <param name="path">
             A string containing a Uri with the location of the FileSystemKnownFolder.
             </param>
        </member>
        <member name="M:BExplorer.Shell.FileSystemKnownFolder.#ctor(System.Environment.SpecialFolder)">
            <summary>
            Initializes a new instance of the <see cref="T:BExplorer.Shell.FileSystemKnownFolder"/> class.
            </summary>
            <remarks>
            Takes an <see cref="T:System.Environment.SpecialFolder"/> containing the 
            location of the folder.
            </remarks>
            <param name="folder">
            An <see cref="T:System.Environment.SpecialFolder"/> containing the 
            location of the folder.
            </param>
        </member>
        <member name="M:BExplorer.Shell.FileSystemKnownFolder.#ctor(BExplorer.Shell.ShellItem,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BExplorer.Shell.FileSystemKnownFolder"/> class.
            </summary>
            <remarks>
            Creates a FileSystemKnownFolder which is a named child of <paramref name="parent"/>.
            </remarks>
            <param name="parent">
            The parent folder of the item.
            </param>
            <param name="name">
            The name of the child item.
            </param>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.Category">
            <summary>
            Gets the category designation for this known folder.
            </summary>
            <value>A <see cref="T:BExplorer.Shell.FolderCategory"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.CanonicalName">
            <summary>
            Gets this known folder's canonical name.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.Description">
            <summary>
            Gets this known folder's description.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.ParentId">
            <summary>
            Gets the unique identifier for this known folder's parent folder.
            </summary>
            <value>A <see cref="T:System.Guid"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.RelativePath">
            <summary>
            Gets this known folder's relative path.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.Tooltip">
            <summary>
            Gets this known folder's tool tip text.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.TooltipResourceId">
            <summary>
            Gets the resource identifier for this 
            known folder's tool tip text.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.LocalizedName">
            <summary>
            Gets this known folder's localized name.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.LocalizedNameResourceId">
            <summary>
            Gets the resource identifier for this 
            known folder's localized name.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.Security">
            <summary>
            Gets this known folder's security attributes.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.FileAttributes">
            <summary>
            Gets this known folder's file attributes, 
            such as "read-only".
            </summary>
            <value>A <see cref="T:System.IO.FileAttributes"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.DefinitionOptions">
            <summary>
            Gets an value that describes this known folder's behaviors.
            </summary>
            <value>A <see cref="P:BExplorer.Shell.FileSystemKnownFolder.DefinitionOptions"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.FolderTypeId">
            <summary>
            Gets the unique identifier for this known folder's type.
            </summary>
            <value>A <see cref="T:System.Guid"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.FolderType">
            <summary>
            Gets a string representation of this known folder's type.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.FolderId">
            <summary>
            Gets the unique identifier for this known folder.
            </summary>
            <value>A <see cref="T:System.Guid"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.PathExists">
            <summary>
            Gets a value that indicates whether this known folder's path exists on the computer. 
            </summary>
            <value>A bool<see cref="T:System.Boolean"/> value.</value>
            <remarks>If this property value is <b>false</b>, 
            the folder might be a virtual folder (<see cref="P:BExplorer.Shell.FileSystemKnownFolder.Category"/> property will
            be <see cref="F:BExplorer.Shell.FolderCategory.Virtual"/> for virtual folders)</remarks>
        </member>
        <member name="P:BExplorer.Shell.FileSystemKnownFolder.Redirection">
            <summary>
            Gets a value that states whether this known folder 
            can have its path set to a new value, 
            including any restrictions on the redirection.
            </summary>
            <value>A <see cref="T:BExplorer.Shell.RedirectionCapability"/> value.</value>
        </member>
        <member name="T:BExplorer.Shell.FolderCategory">
            <summary>
            Specifies the categories for known folders.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderCategory.None">
            <summary>
            The folder category is not specified.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderCategory.Virtual">
            <summary>
            The folder is a virtual folder. Virtual folders are not part 
            of the file system. For example, Control Panel and 
            Printers are virtual folders. A number of properties 
            such as folder path and redirection do not apply to this category.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderCategory.Fixed">
            <summary>
            The folder is fixed. Fixed file system folders are not 
            managed by the Shell and are usually given a permanent 
            path when the system is installed. For example, the 
            Windows and Program Files folders are fixed folders. 
            A number of properties such as redirection do not apply 
            to this category.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderCategory.Common">
            <summary>
            The folder is a common folder. Common folders are 
            used for sharing data and settings 
            accessible by all users of a system. For example, 
            all users share a common Documents folder as well 
            as their per-user Documents folder.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderCategory.PerUser">
            <summary>
            Each user has their own copy of the folder. Per-user folders 
            are those stored under each user's profile and 
            accessible only by that user.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.FolderProperties">
            <summary>
            Structure used internally to store property values for 
            a known folder. This structure holds the information
            returned in the FOLDER_DEFINITION structure, and 
            resources referenced by fields in NativeFolderDefinition,
            such as icon and tool tip.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.FolderIdentifiers">
            <summary>
            Contains the GUID identifiers for well-known folders.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.FolderIdentifiers.NameForGuid(System.Guid)">
            <summary>
            Returns the friendly name for a specified folder.
            </summary>
            <param name="folderId">The Guid identifier for a known folder.</param>
            <returns>A <see cref="T:System.String"/> value.</returns>
        </member>
        <member name="M:BExplorer.Shell.FolderIdentifiers.GetAllFolders">
            <summary>
            Returns a sorted list of name, guid pairs for 
            all known folders.
            </summary>
            <returns></returns>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Computer">
            <summary>
            Computer
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Conflict">
            <summary>
            Conflicts
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.ControlPanel">
            <summary>
            Control Panel
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Desktop">
            <summary>
            Desktop
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Internet">
            <summary>
            Internet Explorer
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Printers">
            <summary>
            Printers
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SyncManager">
            <summary>
            Sync Center
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Connections">
            <summary>
            Network Connections
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SyncSetup">
            <summary>
            Sync Setup
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SyncResults">
            <summary>
            Sync Results
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.RecycleBin">
            <summary>
            Recycle Bin
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Fonts">
            <summary>
            Fonts
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Programs">
            <summary>
            Programs
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.StartMenu">
            <summary>
            Start Menu
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Recent">
            <summary>
            Recent Items
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SendTo">
            <summary>
            SendTo
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Documents">
            <summary>
            Documents
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Favorites">
            <summary>
            Favorites
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.NetHood">
            <summary>
            Network Shortcuts
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.PrintHood">
            <summary>
            Printer Shortcuts
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Templates">
            <summary>
            Templates
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.CommonStartup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.CommonPrograms">
            <summary>
            Programs
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.CommonStartMenu">
            <summary>
            Start Menu
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.PublicDesktop">
            <summary>
            Public Desktop
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.ProgramData">
            <summary>
            ProgramData
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.CommonTemplates">
            <summary>
            Templates
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.PublicDocuments">
            <summary>
            Public Documents
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.RoamingAppData">
            <summary>
            Roaming
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.LocalAppData">
            <summary>
            Local
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.LocalAppDataLow">
            <summary>
            LocalLow
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.InternetCache">
            <summary>
            Temporary Internet Files
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Cookies">
            <summary>
            Cookies
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.History">
            <summary>
            History
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.System">
            <summary>
            System32
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SystemX86">
            <summary>
            System32
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Windows">
            <summary>
            Windows
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Profile">
            <summary>
            The user's username (%USERNAME%)
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Pictures">
            <summary>
            Pictures
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.ProgramFilesX86">
            <summary>
            Program Files
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.ProgramFilesCommonX86">
            <summary>
            Common Files
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.ProgramFilesX64">
            <summary>
            Program Files
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.ProgramFilesCommonX64">
            <summary>
            Common Files
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.ProgramFiles">
            <summary>
            Program Files
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.ProgramFilesCommon">
            <summary>
            Common Files
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.AdminTools">
            <summary>
            Administrative Tools
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.CommonAdminTools">
            <summary>
            Administrative Tools
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Music">
            <summary>
            Music
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Videos">
            <summary>
            Videos
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.PublicPictures">
            <summary>
            Public Pictures
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.PublicMusic">
            <summary>
            Public Music
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.PublicVideos">
            <summary>
            Public Videos
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.ResourceDir">
            <summary>
            Resources
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.LocalizedResourcesDir">
            <summary>
            None
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.CommonOEMLinks">
            <summary>
            OEM Links
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.CDBurning">
            <summary>
            Temporary Burn Folder
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.UserProfiles">
            <summary>
            Users
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Playlists">
            <summary>
            Playlists
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SamplePlaylists">
            <summary>
            Sample Playlists
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SampleMusic">
            <summary>
            Sample Music
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SamplePictures">
            <summary>
            Sample Pictures
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SampleVideos">
            <summary>
            Sample Videos
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.PhotoAlbums">
            <summary>
            Slide Shows
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Public">
            <summary>
            Public
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.ChangeRemovePrograms">
            <summary>
            Programs and Features
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.AppUpdates">
            <summary>
            Installed Updates
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.AddNewPrograms">
            <summary>
            Get Programs
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Downloads">
            <summary>
            Downloads
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.PublicDownloads">
            <summary>
            Public Downloads
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SavedSearches">
            <summary>
            Searches
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.QuickLaunch">
            <summary>
            Quick Launch
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Contacts">
            <summary>
            Contacts
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SidebarParts">
            <summary>
            Gadgets
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SidebarDefaultParts">
            <summary>
            Gadgets
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.TreeProperties">
            <summary>
            Tree property value folder
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.PublicGameTasks">
            <summary>
            GameExplorer
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.GameTasks">
            <summary>
            GameExplorer
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SavedGames">
            <summary>
            Saved Games
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Games">
            <summary>
            Games
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.RecordedTV">
            <summary>
            Recorded TV
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SearchMapi">
            <summary>
            Microsoft Office Outlook
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SearchCsc">
            <summary>
            Offline Files
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Links">
            <summary>
            Links
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.UsersFiles">
            <summary>
            The user's full name (for instance, Jean Philippe Bagel) entered when the user account was created.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.SearchHome">
            <summary>
            Search home
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.OriginalImages">
            <summary>
            Original Images
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.UserProgramFiles">
            <summary>
            UserProgramFiles
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.UserProgramFilesCommon">
            <summary>
            UserProgramFilesCommon
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Ringtones">
            <summary>
            Ringtones
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.PublicRingtones">
            <summary>
            PublicRingtones
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.UsersLibraries">
            <summary>
            UsersLibraries
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.DocumentsLibrary">
            <summary>
            DocumentsLibrary
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.MusicLibrary">
            <summary>
            MusicLibrary
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.PicturesLibrary">
            <summary>
            PicturesLibrary
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.VideosLibrary">
            <summary>
            VideosLibrary
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.RecordedTVLibrary">
            <summary>
            RecordedTVLibrary
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.OtherUsers">
            <summary>
            OtherUsers
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.DeviceMetadataStore">
            <summary>
            DeviceMetadataStore
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.Libraries">
            <summary>
            Libraries
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.UserPinned">
            <summary>
            UserPinned
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderIdentifiers.ImplicitAppShortcuts">
            <summary>
            ImplicitAppShortcuts
            </summary>
        </member>
        <member name="T:BExplorer.Shell.FolderTypes">
            <summary>
            The FolderTypes values represent a view template applied to a folder, 
            usually based on its intended use and contents.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.NotSpecified">
            <summary>
            No particular content type has been detected or specified. This value is not supported in Windows 7 and later systems.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.Invalid">
            <summary>
            The folder is invalid. There are several things that can cause this judgement: hard disk errors, file system errors, and compression errors among them.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.Documents">
            <summary>
            The folder contains document files. These can be of mixed format.doc, .txt, and others.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.Pictures">
            <summary>
            Image files, such as .jpg, .tif, or .png files.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.Music">
            <summary>
            Windows 7 and later. The folder contains audio files, such as .mp3 and .wma files.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.MusicIcons">
            <summary>
            A list of music files displayed in Icons view. This value is not supported in Windows 7 and later systems.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.Games">
            <summary>
            The folder is the Games folder found in the Start menu.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.ControlPanelCategory">
            <summary>
            The Control Panel in category view. This is a virtual folder.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.ControlPanelClassic">
            <summary>
            The Control Panel in classic view. This is a virtual folder.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.Printers">
            <summary>
            Printers that have been added to the system. This is a virtual folder.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.RecycleBin">
            <summary>
            The Recycle Bin. This is a virtual folder.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.SoftwareExplorer">
            <summary>
            The software explorer window used by the Add or Remove Programs control panel icon.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.CompressedFolder">
            <summary>
            The folder is a compressed archive, such as a compressed file with a .zip file name extension.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.Contacts">
            <summary>
            An e-mail-related folder that contains contact information.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.Library">
            <summary>
            A default library view without a more specific template. This value is not supported in Windows 7 and later systems.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.NetworkExplorer">
            <summary>
            The Network Explorer folder.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.UserFiles">
            <summary>
            The folder is the FOLDERID_UsersFiles folder.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.GenericSearchResults">
            <summary>
            Windows 7 and later. The folder contains search results, but they are of mixed or no specific type.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.GenericLibrary">
            <summary>
            Windows 7 and later. The folder is a library, but of no specified type.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.Videos">
            <summary>
            Windows 7 and later. The folder contains video files. These can be of mixed format.wmv, .mov, and others.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.UsersLibraries">
            <summary>
            Windows 7 and later. The view shown when the user clicks the Windows Explorer button on the taskbar.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.OtherUsers">
            <summary>
            Windows 7 and later. The homegroup view.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.Communications">
            <summary>
            Windows 7 and later. A folder that contains communication-related files such as e-mails, calendar information, and contact information.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.RecordedTV">
            <summary>
            Windows 7 and later. The folder contains recorded television broadcasts.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.SavedGames">
            <summary>
            Windows 7 and later. The folder contains saved game states.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.OpenSearch">
            <summary>
            Windows 7 and later. The folder contains federated search OpenSearch results.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.SearchConnector">
            <summary>
            Windows 7 and later. Before you search.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.FolderTypes.Searches">
            <summary>
            Windows 7 and later. A user's Searches folder, normally found at C:\Users\username\Searches.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.KnownFolderHelper">
            <summary>
            Creates the helper class for known folders.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.KnownFolderHelper.FromPIDL(System.IntPtr)">
            <summary>
            Returns the native known folder (IKnownFolderNative) given a PID list
            </summary>
            <param name="pidl"></param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.KnownFolderHelper.FromKnownFolderId(System.Guid)">
            <summary>
            Returns a known folder given a globally unique identifier.
            </summary>
            <param name="knownFolderId">A GUID for the requested known folder.</param>
            <returns>A known folder representing the specified name.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the given Known Folder ID is invalid.</exception>
        </member>
        <member name="M:BExplorer.Shell.KnownFolderHelper.FromKnownFolderIdInternal(System.Guid)">
            <summary>
            Returns a known folder given a globally unique identifier.
            </summary>
            <param name="knownFolderId">A GUID for the requested known folder.</param>
            <returns>A known folder representing the specified name. Returns null if Known Folder is not found or could not be created.</returns>
        </member>
        <member name="M:BExplorer.Shell.KnownFolderHelper.GetKnownFolder(BExplorer.Shell.Interop.IKnownFolderNative)">
            <summary>
            Given a native KnownFolder (IKnownFolderNative), create the right type of
            IKnownFolder object (FileSystemKnownFolder or NonFileSystemKnownFolder)
            </summary>
            <param name="knownFolderNative">Native Known Folder</param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.KnownFolderHelper.FromCanonicalName(System.String)">
            <summary>
            Returns the known folder given its canonical name.
            </summary>
            <param name="canonicalName">A non-localized canonical name for the known folder, such as MyComputer.</param>
            <returns>A known folder representing the specified name.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the given canonical name is invalid or if the KnownFolder could not be created.</exception>
        </member>
        <member name="M:BExplorer.Shell.KnownFolderHelper.FromPath(System.String)">
            <summary>
            Returns a known folder given its shell path, such as <c>C:\users\public\documents</c> or 
            <c>::{645FF040-5081-101B-9F08-00AA002F954E}</c> for the Recycle Bin.
            </summary>
            <param name="path">The path for the requested known folder; either a physical path or a virtual path.</param>
            <returns>A known folder representing the specified name.</returns>
        </member>
        <member name="M:BExplorer.Shell.KnownFolderHelper.FromParsingNameOnly(System.String)">
            <summary>
            Returns a known folder given its shell namespace parsing name, such as 
            <c>::{645FF040-5081-101B-9F08-00AA002F954E}</c> for the Recycle Bin.
            </summary>
            <param name="parsingName">The parsing name (or path) for the requested known folder.</param>
            <returns>A known folder representing the specified name.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the given parsing name is invalid.</exception>
            
        </member>
        <member name="T:BExplorer.Shell.KnownFolders">
            <summary>
            Defines properties for known folders that identify the path of standard known folders.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.All">
            <summary>
            Gets a strongly-typed read-only collection of all the registered known folders.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Computer">
            <summary> Gets the metadata for the <b>Computer</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Conflict">
            <summary> Gets the metadata for the <b>Conflict</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.ControlPanel">
            <summary> Gets the metadata for the <b>ControlPanel</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Desktop">
            <summary> Gets the metadata for the <b>Desktop</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Internet">
            <summary> Gets the metadata for the <b>Internet</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Network">
            <summary> Gets the metadata for the <b>Network</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Printers">
            <summary> Gets the metadata for the <b>Printers</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SyncManager">
            <summary> Gets the metadata for the <b>SyncManager</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Connections">
            <summary> Gets the metadata for the <b>Connections</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SyncSetup">
            <summary> Gets the metadata for the <b>SyncSetup</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SyncResults">
            <summary> Gets the metadata for the <b>SyncResults</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.RecycleBin">
            <summary> Gets the metadata for the <b>RecycleBin</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Fonts">
            <summary> Gets the metadata for the <b>Fonts</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Startup">
            <summary> Gets the metadata for the <b>Startup</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Programs">
            <summary> Gets the metadata for the <b>Programs</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.StartMenu">
            <summary> Gets the metadata for the per-user <b>StartMenu</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Recent">
            <summary> Gets the metadata for the per-user <b>Recent</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SendTo">
            <summary> Gets the metadata for the per-user <b>SendTo</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Documents">
            <summary> Gets the metadata for the per-user <b>Documents</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Favorites">
            <summary> Gets the metadata for the per-user <b>Favorites</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.NetHood">
            <summary> Gets the metadata for the <b>NetHood</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.PrintHood">
            <summary> Gets the metadata for the <b>PrintHood</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Templates">
            <summary> Gets the metadata for the <b>Templates</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.CommonStartup">
            <summary> Gets the metadata for the <b>CommonStartup</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.CommonPrograms">
            <summary> Gets the metadata for the <b>CommonPrograms</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.CommonStartMenu">
            <summary> Gets the metadata for the <b>CommonStartMenu</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.PublicDesktop">
            <summary> Gets the metadata for the <b>PublicDesktop</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.ProgramData">
            <summary> Gets the metadata for the <b>ProgramData</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.CommonTemplates">
            <summary> Gets the metadata for the <b>CommonTemplates</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.PublicDocuments">
            <summary> Gets the metadata for the <b>PublicDocuments</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.RoamingAppData">
            <summary> Gets the metadata for the <b>RoamingAppData</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.LocalAppData">
            <summary> Gets the metadata for the per-user <b>LocalAppData</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.LocalAppDataLow">
            <summary> Gets the metadata for the <b>LocalAppDataLow</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.InternetCache">
            <summary> Gets the metadata for the <b>InternetCache</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Cookies">
            <summary> Gets the metadata for the <b>Cookies</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.History">
            <summary> Gets the metadata for the <b>History</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.System">
            <summary> Gets the metadata for the <b>System</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SystemX86">
            <summary> Gets the metadata for the <b>SystemX86</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Windows">
            <summary> Gets the metadata for the <b>Windows</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Profile">
            <summary> Gets the metadata for the <b>Profile</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Pictures">
            <summary> Gets the metadata for the per-user <b>Pictures</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.ProgramFilesX86">
            <summary> Gets the metadata for the <b>ProgramFilesX86</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.ProgramFilesCommonX86">
            <summary> Gets the metadata for the <b>ProgramFilesCommonX86</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.ProgramFilesX64">
            <summary> Gets the metadata for the <b>ProgramsFilesX64</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.ProgramFilesCommonX64">
            <summary> Gets the metadata for the <b> ProgramFilesCommonX64</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.ProgramFiles">
            <summary> Gets the metadata for the <b>ProgramFiles</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.ProgramFilesCommon">
            <summary> Gets the metadata for the <b>ProgramFilesCommon</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.AdminTools">
            <summary> Gets the metadata for the <b>AdminTools</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.CommonAdminTools">
            <summary> Gets the metadata for the <b>CommonAdminTools</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Music">
            <summary> Gets the metadata for the per-user <b>Music</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Videos">
            <summary> Gets the metadata for the <b>Videos</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.PublicPictures">
            <summary> Gets the metadata for the <b>PublicPictures</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.PublicMusic">
            <summary> Gets the metadata for the <b>PublicMusic</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.PublicVideos">
            <summary> Gets the metadata for the <b>PublicVideos</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.ResourceDir">
            <summary> Gets the metadata for the <b>ResourceDir</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.LocalizedResourcesDir">
            <summary> Gets the metadata for the <b>LocalizedResourcesDir</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.CommonOemLinks">
            <summary> Gets the metadata for the <b>CommonOEMLinks</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.CDBurning">
            <summary> Gets the metadata for the <b>CDBurning</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.UserProfiles">
            <summary> Gets the metadata for the <b>UserProfiles</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Playlists">
            <summary> Gets the metadata for the <b>Playlists</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SamplePlaylists">
            <summary> Gets the metadata for the <b>SamplePlaylists</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SampleMusic">
            <summary> Gets the metadata for the <b>SampleMusic</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SamplePictures">
            <summary> Gets the metadata for the <b>SamplePictures</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SampleVideos">
            <summary> Gets the metadata for the <b>SampleVideos</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.PhotoAlbums">
            <summary> Gets the metadata for the <b>PhotoAlbums</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Public">
            <summary> Gets the metadata for the <b>Public</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.ChangeRemovePrograms">
            <summary> Gets the metadata for the <b>ChangeRemovePrograms</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.AppUpdates">
            <summary> Gets the metadata for the <b>AppUpdates</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.AddNewPrograms">
            <summary> Gets the metadata for the <b>AddNewPrograms</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Downloads">
            <summary> Gets the metadata for the per-user <b>Downloads</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.PublicDownloads">
            <summary> Gets the metadata for the <b>PublicDownloads</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SavedSearches">
            <summary> Gets the metadata for the per-user <b>SavedSearches</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.QuickLaunch">
            <summary> Gets the metadata for the per-user <b>QuickLaunch</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Contacts">
            <summary> Gets the metadata for the <b>Contacts</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SidebarParts">
            <summary> Gets the metadata for the <b>SidebarParts</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SidebarDefaultParts">
            <summary> Gets the metadata for the <b>SidebarDefaultParts</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.TreeProperties">
            <summary> Gets the metadata for the <b>TreeProperties</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.PublicGameTasks">
            <summary> Gets the metadata for the <b>PublicGameTasks</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.GameTasks">
            <summary> Gets the metadata for the <b>GameTasks</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SavedGames">
            <summary> Gets the metadata for the per-user <b>SavedGames</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Games">
            <summary> Gets the metadata for the <b>Games</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.RecordedTV">
            <summary> Gets the metadata for the <b>RecordedTV</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
            <remarks> This folder is not used. </remarks>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SearchMapi">
            <summary> Gets the metadata for the <b>SearchMapi</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SearchCsc">
            <summary> Gets the metadata for the <b>SearchCsc</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Links">
            <summary> Gets the metadata for the per-user <b>Links</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.UsersFiles">
            <summary> Gets the metadata for the <b>UsersFiles</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.SearchHome">
            <summary> Gets the metadata for the <b>SearchHome</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.OriginalImages">
            <summary> Gets the metadata for the <b>OriginalImages</b> folder. </summary>
            <value> An <see cref="T:BExplorer.Shell.IKnownFolder"/> object. </value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.UserProgramFiles">
            <summary> Gets the metadata for the <b>UserProgramFiles</b> folder. </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.UserProgramFilesCommon">
            <summary> Gets the metadata for the <b>UserProgramFilesCommon</b> folder. </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Ringtones">
            <summary> Gets the metadata for the <b>Ringtones</b> folder. </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.PublicRingtones">
            <summary> Gets the metadata for the <b>PublicRingtones</b> folder. </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.UsersLibraries">
            <summary> Gets the metadata for the <b>UsersLibraries</b> folder. </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.DocumentsLibrary">
            <summary> Gets the metadata for the <b>DocumentsLibrary</b> folder. </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.MusicLibrary">
            <summary> Gets the metadata for the <b>MusicLibrary</b> folder. </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.PicturesLibrary">
            <summary> Gets the metadata for the <b>PicturesLibrary</b> folder. </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.VideosLibrary">
            <summary> Gets the metadata for the <b>VideosLibrary</b> folder. </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.RecordedTVLibrary">
            <summary> Gets the metadata for the <b>RecordedTVLibrary</b> folder. </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.OtherUsers">
            <summary> Gets the metadata for the <b>OtherUsers</b> folder. </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.DeviceMetadataStore">
            <summary> Gets the metadata for the <b>DeviceMetadataStore</b> folder. </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.Libraries">
            <summary> Gets the metadata for the <b>Libraries</b> folder. </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.UserPinned">
             <summary>
            Gets the metadata for the <b>UserPinned</b> folder.
             </summary>
        </member>
        <member name="P:BExplorer.Shell.KnownFolders.ImplicitAppShortcuts">
            <summary> Gets the metadata for the <b>ImplicitAppShortcuts</b> folder. </summary>
        </member>
        <member name="T:BExplorer.Shell.KnownFolderSettings">
            <summary>
            Internal class to represent the KnownFolder settings/properties
            </summary>
        </member>
        <member name="M:BExplorer.Shell.KnownFolderSettings.GetFolderProperties(BExplorer.Shell.Interop.IKnownFolderNative)">
            <summary>
            Populates a structure that contains 
            this known folder's properties.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.KnownFolderSettings.GetPath(System.Boolean@,BExplorer.Shell.Interop.IKnownFolderNative)">
            <summary>
            Gets the path of this this known folder.
            </summary>
            <param name="fileExists">
            Returns false if the folder is virtual, or a boolean
            value that indicates whether this known folder exists.
            </param>
            <param name="knownFolderNative">Native IKnownFolder reference</param>
            <returns>
            A <see cref="T:System.String"/> containing the path, or <see cref="F:System.String.Empty"/> if this known folder does not exist.
            </returns>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.Path">
            <summary>
            Gets the path for this known folder.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.Category">
            <summary>
            Gets the category designation for this known folder.
            </summary>
            <value>A <see cref="T:BExplorer.Shell.FolderCategory"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.CanonicalName">
            <summary>
            Gets this known folder's canonical name.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.Description">
            <summary>
            Gets this known folder's description.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.ParentId">
            <summary>
            Gets the unique identifier for this known folder's parent folder.
            </summary>
            <value>A <see cref="T:System.Guid"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.RelativePath">
            <summary>
            Gets this known folder's relative path.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.Tooltip">
            <summary>
            Gets this known folder's tool tip text.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.TooltipResourceId">
            <summary>
            Gets the resource identifier for this 
            known folder's tool tip text.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.LocalizedName">
            <summary>
            Gets this known folder's localized name.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.LocalizedNameResourceId">
            <summary>
            Gets the resource identifier for this 
            known folder's localized name.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.Security">
            <summary>
            Gets this known folder's security attributes.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.FileAttributes">
            <summary>
            Gets this known folder's file attributes, 
            such as "read-only".
            </summary>
            <value>A <see cref="T:System.IO.FileAttributes"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.DefinitionOptions">
            <summary>
            Gets an value that describes this known folder's behaviors.
            </summary>
            <value>A <see cref="P:BExplorer.Shell.KnownFolderSettings.DefinitionOptions"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.FolderTypeId">
            <summary>
            Gets the unique identifier for this known folder's type.
            </summary>
            <value>A <see cref="T:System.Guid"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.FolderType">
            <summary>
            Gets a string representation of this known folder's type.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.FolderId">
            <summary>
            Gets the unique identifier for this known folder.
            </summary>
            <value>A <see cref="T:System.Guid"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.PathExists">
            <summary>
            Gets a value that indicates whether this known folder's path exists on the computer. 
            </summary>
            <value>A bool<see cref="T:System.Boolean"/> value.</value>
            <remarks>If this property value is <b>false</b>, 
            the folder might be a virtual folder (<see cref="P:BExplorer.Shell.KnownFolderSettings.Category"/> property will
            be <see cref="F:BExplorer.Shell.FolderCategory.Virtual"/> for virtual folders)</remarks>
        </member>
        <member name="P:BExplorer.Shell.KnownFolderSettings.Redirection">
            <summary>
            Gets a value that states whether this known folder 
            can have its path set to a new value, 
            including any restrictions on the redirection.
            </summary>
            <value>A <see cref="T:BExplorer.Shell.RedirectionCapability"/> value.</value>
        </member>
        <member name="T:BExplorer.Shell.NonFileSystemKnownFolder">
            <summary>
            Represents a registered non file system Known Folder
            </summary>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.Path">
            <summary>
            Gets the path for this known folder.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.Category">
            <summary>
            Gets the category designation for this known folder.
            </summary>
            <value>A <see cref="T:BExplorer.Shell.FolderCategory"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.CanonicalName">
            <summary>
            Gets this known folder's canonical name.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.Description">
            <summary>
            Gets this known folder's description.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.ParentId">
            <summary>
            Gets the unique identifier for this known folder's parent folder.
            </summary>
            <value>A <see cref="T:System.Guid"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.RelativePath">
            <summary>
            Gets this known folder's relative path.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.Tooltip">
            <summary>
            Gets this known folder's tool tip text.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.TooltipResourceId">
            <summary>
            Gets the resource identifier for this 
            known folder's tool tip text.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.LocalizedName">
            <summary>
            Gets this known folder's localized name.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.LocalizedNameResourceId">
            <summary>
            Gets the resource identifier for this 
            known folder's localized name.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.Security">
            <summary>
            Gets this known folder's security attributes.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.FileAttributes">
            <summary>
            Gets this known folder's file attributes, 
            such as "read-only".
            </summary>
            <value>A <see cref="T:System.IO.FileAttributes"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.DefinitionOptions">
            <summary>
            Gets an value that describes this known folder's behaviors.
            </summary>
            <value>A <see cref="P:BExplorer.Shell.NonFileSystemKnownFolder.DefinitionOptions"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.FolderTypeId">
            <summary>
            Gets the unique identifier for this known folder's type.
            </summary>
            <value>A <see cref="T:System.Guid"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.FolderType">
            <summary>
            Gets a string representation of this known folder's type.
            </summary>
            <value>A <see cref="T:System.String"/> object.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.FolderId">
            <summary>
            Gets the unique identifier for this known folder.
            </summary>
            <value>A <see cref="T:System.Guid"/> value.</value>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.PathExists">
            <summary>
            Gets a value that indicates whether this known folder's path exists on the computer. 
            </summary>
            <value>A bool<see cref="T:System.Boolean"/> value.</value>
            <remarks>If this property value is <b>false</b>, 
            the folder might be a virtual folder (<see cref="P:BExplorer.Shell.NonFileSystemKnownFolder.Category"/> property will
            be <see cref="F:BExplorer.Shell.FolderCategory.Virtual"/> for virtual folders)</remarks>
        </member>
        <member name="P:BExplorer.Shell.NonFileSystemKnownFolder.Redirection">
            <summary>
            Gets a value that states whether this known folder 
            can have its path set to a new value, 
            including any restrictions on the redirection.
            </summary>
            <value>A <see cref="T:BExplorer.Shell.RedirectionCapability"/> value.</value>
        </member>
        <member name="T:BExplorer.Shell.RedirectionCapability">
            <summary>
            Specifies the redirection capabilities for known folders. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.RedirectionCapability.None">
            <summary>
            Redirection capability is unknown.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.RedirectionCapability.AllowAll">
            <summary>
            The known folder can be redirected.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.RedirectionCapability.Redirectable">
            <summary>
            The known folder can be redirected. 
            Currently, redirection exists only for 
             common and user folders; fixed and virtual folders 
            cannot be redirected.
            </summary>       
        </member>
        <member name="F:BExplorer.Shell.RedirectionCapability.DenyAll">
            <summary>
            Redirection is not allowed.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.RedirectionCapability.DenyPolicyRedirected">
            <summary>
            The folder cannot be redirected because it is 
            already redirected by group policy.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.RedirectionCapability.DenyPolicy">
            <summary>
            The folder cannot be redirected because the policy 
            prohibits redirecting this folder.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.RedirectionCapability.DenyPermissions">
            <summary>
            The folder cannot be redirected because the calling 
            application does not have sufficient permissions.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.RetrievalOptions">
            <summary>
            Contains special retrieval options for known folders.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.AccessModes">
            <summary>
            The STGM constants are flags that indicate 
            conditions for creating and deleting the object and access modes 
            for the object. 
            
            You can combine these flags, but you can only choose one flag 
            from each group of related flags. Typically one flag from each 
            of the access and sharing groups must be specified for all 
            functions and methods which use these constants. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.Direct">
            <summary>
            Indicates that, in direct mode, each change to a storage 
            or stream element is written as it occurs.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.Transacted">
            <summary>
            Indicates that, in transacted mode, changes are buffered 
            and written only if an explicit commit operation is called. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.Simple">
            <summary>
            Provides a faster implementation of a compound file 
            in a limited, but frequently used, case. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.Read">
            <summary>
            Indicates that the object is read-only, 
            meaning that modifications cannot be made.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.Write">
            <summary>
            Enables you to save changes to the object, 
            but does not permit access to its data. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.ReadWrite">
            <summary>
            Enables access and modification of object data.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.ShareDenyNone">
            <summary>
            Specifies that subsequent openings of the object are 
            not denied read or write access. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.ShareDenyRead">
            <summary>
            Prevents others from subsequently opening the object in Read mode. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.ShareDenyWrite">
            <summary>
            Prevents others from subsequently opening the object 
            for Write or ReadWrite access.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.ShareExclusive">
            <summary>
            Prevents others from subsequently opening the object in any mode. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.Priority">
            <summary>
            Opens the storage object with exclusive access to the most 
            recently committed version.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.DeleteOnRelease">
            <summary>
            Indicates that the underlying file is to be automatically destroyed when the root 
            storage object is released. This feature is most useful for creating temporary files. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.NoScratch">
            <summary>
            Indicates that, in transacted mode, a temporary scratch file is usually used 
            to save modifications until the Commit method is called. 
            Specifying NoScratch permits the unused portion of the original file 
            to be used as work space instead of creating a new file for that purpose. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.Create">
            <summary>
            Indicates that an existing storage object 
            or stream should be removed before the new object replaces it. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.Convert">
            <summary>
            Creates the new object while preserving existing data in a stream named "Contents". 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.FailIfThere">
            <summary>
            Causes the create operation to fail if an existing object with the specified name exists.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.NoSnapshot">
            <summary>
            This flag is used when opening a storage object with Transacted 
            and without ShareExclusive or ShareDenyWrite. 
            In this case, specifying NoSnapshot prevents the system-provided 
            implementation from creating a snapshot copy of the file. 
            Instead, changes to the file are written to the end of the file. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.AccessModes.DirectSingleWriterMultipleReader">
            <summary>
            Supports direct mode for single-writer, multireader file operations. 
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.LibraryFolderType.Generic">
            <summary>
            General Items
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.LibraryFolderType.Documents">
            <summary>
            Documents
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.LibraryFolderType.Music">
            <summary>
            Music
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.LibraryFolderType.Pictures">
            <summary>
            Pictures
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.LibraryFolderType.Videos">
            <summary>
            Videos
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.ThumbnailAlphaType">
            <summary>
            Thumbnail Alpha Types
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ThumbnailAlphaType.Unknown">
            <summary>
            Let the system decide.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ThumbnailAlphaType.NoAlphaChannel">
            <summary>
            No transparency
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ThumbnailAlphaType.HasAlphaChannel">
            <summary>
            Has transparency
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.WM">
            <summary>
            Standard Window messages
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.GridLines">
            <summary>
            LVS_EX_GRIDLINES
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.SubItemImages">
            <summary>
            LVS_EX_SUBITEMIMAGES
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.CheckBoxes">
            <summary>
            LVS_EX_CHECKBOXES
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.TrackSelect">
            <summary>
            LVS_EX_TRACKSELECT
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.HeaderDragDrop">
            <summary>
            LVS_EX_HEADERDRAGDROP
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.FullRowSelect">
            <summary>
            LVS_EX_FULLROWSELECT
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.OneClickActivate">
            <summary>
            LVS_EX_ONECLICKACTIVATE
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.TwoClickActivate">
            <summary>
            LVS_EX_TWOCLICKACTIVATE
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.FlatsB">
            <summary>
            LVS_EX_FLATSB
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.Regional">
            <summary>
            LVS_EX_REGIONAL
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.InfoTip">
            <summary>
            LVS_EX_INFOTIP
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.UnderlineHot">
            <summary>
            LVS_EX_UNDERLINEHOT
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.UnderlineCold">
            <summary>
            LVS_EX_UNDERLINECOLD
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.MultilWorkAreas">
            <summary>
            LVS_EX_MULTIWORKAREAS
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.LabelTip">
            <summary>
            LVS_EX_LABELTIP
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.BorderSelect">
            <summary>
            LVS_EX_BORDERSELECT
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.DoubleBuffer">
            <summary>
            LVS_EX_DOUBLEBUFFER
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.HideLabels">
            <summary>
            LVS_EX_HIDELABELS
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.SingleRow">
            <summary>
            LVS_EX_SINGLEROW
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.SnapToGrid">
            <summary>
            LVS_EX_SNAPTOGRID
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.SimpleSelect">
            <summary>
            LVS_EX_SIMPLESELECT
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.AutosizeColumns">
            <summary>
            LVS_EX_AUTOSIZECOLUMNS
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.ListViewExtendedStyles.HeaderInAllViews">
            <summary>
            LVS_EX_HEADERINALLVIEWS
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.NativePoint">
            <summary>
            A wrapper for the native POINT structure.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.NativePoint.#ctor(System.Int32,System.Int32)">
            <summary>
            Initialize the NativePoint
            </summary>
            <param name="x">The x coordinate of the point.</param>
            <param name="y">The y coordinate of the point.</param>
        </member>
        <member name="M:BExplorer.Shell.Interop.NativePoint.op_Equality(BExplorer.Shell.Interop.NativePoint,BExplorer.Shell.Interop.NativePoint)">
            <summary>
            Determines if two NativePoints are equal.
            </summary>
            <param name="first">First NativePoint</param>
            <param name="second">Second NativePoint</param>
            <returns>True if first NativePoint is equal to the second; false otherwise.</returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.NativePoint.op_Inequality(BExplorer.Shell.Interop.NativePoint,BExplorer.Shell.Interop.NativePoint)">
            <summary>
            Determines if two NativePoints are not equal.
            </summary>
            <param name="first">First NativePoint</param>
            <param name="second">Second NativePoint</param>
            <returns>True if first NativePoint is not equal to the second; false otherwise.</returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.NativePoint.Equals(System.Object)">
            <summary>
            Determines if this NativePoint is equal to another.
            </summary>
            <param name="obj">Another NativePoint to compare</param>
            <returns>True if this NativePoint is equal obj; false otherwise.</returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.NativePoint.GetHashCode">
            <summary>
            Gets a hash code for the NativePoint.
            </summary>
            <returns>Hash code for the NativePoint</returns>
        </member>
        <member name="P:BExplorer.Shell.Interop.NativePoint.X">
            <summary>
            The X coordinate of the point
            </summary>        
        </member>
        <member name="P:BExplorer.Shell.Interop.NativePoint.Y">
            <summary>
            The Y coordinate of the point
            </summary>                                
        </member>
        <member name="T:BExplorer.Shell.ShellViewStyle">
            <summary> Specifies how list items are displayed in a <see cref="T:BExplorer.Shell.ShellView"/> control. </summary>
        </member>
        <member name="F:BExplorer.Shell.ShellViewStyle.ExtraLargeIcon">
            <summary> Items appear in a grid and icon size is 256x256 </summary>
        </member>
        <member name="F:BExplorer.Shell.ShellViewStyle.LargeIcon">
            <summary> Items appear in a grid and icon size is 96x96 </summary>
        </member>
        <member name="F:BExplorer.Shell.ShellViewStyle.Medium">
            <summary> Each item appears as a full-sized icon with a label below it. </summary>
        </member>
        <member name="F:BExplorer.Shell.ShellViewStyle.SmallIcon">
            <summary> Each item appears as a small icon with a label to its right. </summary>
        </member>
        <member name="F:BExplorer.Shell.ShellViewStyle.List">
            <summary>
            Each item appears as a small icon with a label to its right. Items are arranged in columns.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ShellViewStyle.Details">
            <summary>
            Each item appears on a separate line with further information about each item arranged
            in columns. The left-most column contains a small icon and label.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ShellViewStyle.Thumbnail">
            <summary> Each item appears with a thumbnail picture of the file's content. </summary>
        </member>
        <member name="F:BExplorer.Shell.ShellViewStyle.Tile">
            <summary>
            Each item appears as a full-sized icon with the item label and file information to the
            right of it.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ShellViewStyle.Thumbstrip">
            <summary>
            Each item appears in a thumbstrip at the bottom of the control, with a large preview of
            the seleted item appearing above.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ShellViewStyle.Content">
            <summary> Each item appears in a item that occupy the whole view width </summary>
        </member>
        <member name="P:BExplorer.Shell.NavigatedEventArgs.Folder">
            <summary> The folder that is navigated to. </summary>
        </member>
        <member name="T:BExplorer.Shell.NavigatingEventArgs">
            <summary> Provides information for the <see cref="E:BExplorer.Shell.ShellView.Navigating"/> event. </summary>
        </member>
        <member name="M:BExplorer.Shell.NavigatingEventArgs.#ctor(BExplorer.Shell.ShellItem,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BExplorer.Shell.NavigatingEventArgs"/> class.
            </summary>
            <param name="folder">The folder being navigated to.</param>
            <param name="isInSameTab"></param>
        </member>
        <member name="P:BExplorer.Shell.NavigatingEventArgs.Folder">
            <summary> The folder being navigated to. </summary>
        </member>
        <member name="P:BExplorer.Shell.NavigatingEventArgs.Cancel">
            <summary> Gets/sets a value indicating whether the navigation should be canceled. </summary>
        </member>
        <member name="P:BExplorer.Shell.ViewChangedEventArgs.CurrentView">
            <summary> The current ViewStyle </summary>
        </member>
        <member name="T:BExplorer.Shell.ShellView">
            <summary> The ShellFileListView class that visualize contents of a directory </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellView.OnNavigating(BExplorer.Shell.NavigatingEventArgs)">
            <summary> Triggers the Navigating event. </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellView.GetFirstIndexOf(System.String)">
            <summary>
            Returns the index of the first item whose display name starts with the search string.
            </summary>
            <param name="search"> The string for which to search for. </param>
            <returns> The index of an item within the list view. </returns>
        </member>
        <member name="M:BExplorer.Shell.ShellView.#ctor">
            <summary> Main constructor </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellView.NavigateParent">
            <summary> Navigates to the parent of the currently displayed folder. </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellView.RunExeAsAdmin(System.String)">
            <summary> Runs an application as an administrator. </summary>
            <param name="ExePath"> The path of the application. </param>
        </member>
        <member name="M:BExplorer.Shell.ShellView.NavigateForward(BExplorer.Shell.ShellItem)">
             <summary>
             Navigates the <see cref="T:BExplorer.Shell.ShellView"/> control forwards to the
             requested folder in the navigation history.
             </summary>
            
             <remarks>
             The WebBrowser control maintains a history list of all the folders
             visited during a session. You can use the
             <see cref="M:BExplorer.Shell.ShellView.NavigateForward(BExplorer.Shell.ShellItem)"/> method to implement a drop-down menu
             on a <b>Forward</b> button similar to the one in Windows Explorer,
             which will allow your users to return to a folder in the 'forward'
             navigation history.
             </remarks>
            
             <param name="folder">
             The folder to navigate to.
             </param>
            
             <exception cref="T:System.Exception">
             The requested folder is not present in the
             <see cref="T:BExplorer.Shell.ShellView"/>'s 'forward' history.
             </exception>
        </member>
        <member name="M:BExplorer.Shell.ShellView.NavigateForward">
             <summary>
             Navigates the <see cref="T:BExplorer.Shell.ShellView"/> control to the next folder
             in the navigation history.
             </summary>
            
             <remarks>
             <para>
             The WebBrowser control maintains a history list of all the folders
             visited during a session. You can use the <see cref="M:BExplorer.Shell.ShellView.NavigateForward(BExplorer.Shell.ShellItem)"/>
             method to implement a <b>Forward</b> button similar to the one
             in Windows Explorer, allowing your users to return to the next
             folder in the navigation history after navigating backward.
             </para>
            
             <para>
             Use the <see cref="P:BExplorer.Shell.ShellView.CanNavigateForward"/> property to determine
             whether the navigation history is available and contains a folder
             located after the current one.  This property is useful, for
             example, to change the enabled state of a <b>Forward</b> button
             when the ShellView control navigates to or leaves the end of the
             navigation history.
             </para>
             </remarks>
            
             <exception cref="T:System.InvalidOperationException">
             There is no history to navigate forwards through.
             </exception>
        </member>
        <member name="M:BExplorer.Shell.ShellView.NavigateBack(BExplorer.Shell.ShellItem)">
             <summary>
             Navigates the <see cref="T:BExplorer.Shell.ShellView"/> control backwards to the
             requested folder in the navigation history.
             </summary>
            
             <remarks>
             The WebBrowser control maintains a history list of all the folders
             visited during a session. You can use the <see cref="M:BExplorer.Shell.ShellView.NavigateBack(BExplorer.Shell.ShellItem)"/>
             method to implement a drop-down menu on a <b>Back</b> button similar
             to the one in Windows Explorer, which will allow your users to return
             to a previous folder in the navigation history.
             </remarks>
            
             <param name="folder">
             The folder to navigate to.
             </param>
            
             <exception cref="T:System.Exception">
             The requested folder is not present in the
             <see cref="T:BExplorer.Shell.ShellView"/>'s 'back' history.
             </exception>
        </member>
        <member name="M:BExplorer.Shell.ShellView.NavigateBack">
             <summary>
             Navigates the <see cref="T:BExplorer.Shell.ShellView"/> control to the previous folder
             in the navigation history.
             </summary>
            
             <remarks>
             <para>
             The WebBrowser control maintains a history list of all the folders
             visited during a session. You can use the <see cref="M:BExplorer.Shell.ShellView.NavigateBack(BExplorer.Shell.ShellItem)"/>
             method to implement a <b>Back</b> button similar to the one in
             Windows Explorer, which will allow your users to return to a
             previous folder in the navigation history.
             </para>
            
             <para>
             Use the <see cref="P:BExplorer.Shell.ShellView.CanNavigateBack"/> property to determine whether
             the navigation history is available and contains a previous page.
             This property is useful, for example, to change the enabled state
             of a Back button when the ShellView control navigates to or leaves
             the beginning of the navigation history.
             </para>
             </remarks>
            
             <exception cref="T:System.InvalidOperationException">
             There is no history to navigate backwards through.
             </exception>
        </member>
        <member name="M:BExplorer.Shell.ShellView.RunExeAsAnotherUser(System.String,System.String)">
            <summary> Runs an application as an another user. </summary>
            <param name="ExePath">  The path of the application. </param>
            <param name="username"> The path of the username to use. </param>
        </member>
        <member name="M:BExplorer.Shell.ShellView.Focus(System.Boolean)">
            <summary> Gives the ShellListView focus </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellView.GetFirstIndexOf(System.String,System.Int32)">
            <summary>
            Returns the index of the first item whose display name starts with the search string.
            </summary>
            <param name="search">     The string for which to search for. </param>
            <param name="startindex">
            The index from which to start searching. Enter '0' to search all items.
            </param>
            <returns> The index of an item within the list view. </returns>
        </member>
        <member name="F:BExplorer.Shell.ShellView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BExplorer.Shell.ShellView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellView.GotFocus">
            <summary> Occurs when the control gains focus </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellView.LostFocus">
            <summary> Occurs when the control loses focus </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellView.Navigated">
            <summary> Occurs when the <see cref="T:BExplorer.Shell.ShellView"/> control navigates to a new folder. </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellView.SelectionChanged">
             <summary>
             Occurs when the <see cref="T:BExplorer.Shell.ShellView"/>'s current selection
             changes.
             </summary>
            
             <remarks>
             <b>Important:</b> When <see cref="!:ShowWebView"/> is set to
             <see langref="true"/>, this event will not occur. This is due to
             a limitation in the underlying windows control.
             </remarks>
        </member>
        <member name="E:BExplorer.Shell.ShellView.ColumnHeaderRightClick">
            <summary>
            Occurs when the user right-clicks on the blank area of the column header area
            </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellView.KeyDown">
            <summary> Raised whenever a key is pressed </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellView.KeyJumpKeyDown">
            <summary>
            Raised whenever a key is pressed, with the intention of doing a key jump. Please use
            <see cref="E:BExplorer.Shell.ShellView.KeyDown"/> to catch when any key is pressed.
            </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellView.KeyJumpTimerDone">
            <summary> Raised when the timer finishes for the Key Jump timer. </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellView.KeyJumpString">
            <summary> Returns the key jump string as it currently is.</summary>
        </member>
        <member name="P:BExplorer.Shell.ShellView.CanNavigateBack">
            <summary>
            Gets a value indicating whether a previous page in navigation history is available,
            which allows the <see cref="M:BExplorer.Shell.ShellView.NavigateBack(BExplorer.Shell.ShellItem)"/> method to succeed.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellView.CanNavigateForward">
            <summary>
            Gets a value indicating whether a subsequent page in navigation history is available,
            which allows the <see cref="M:BExplorer.Shell.ShellView.NavigateForward(BExplorer.Shell.ShellItem)"/> method to succeed.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellView.CanNavigateParent">
            <summary>
            Gets a value indicating whether the folder currently being browsed by the <see cref="T:BExplorer.Shell.ShellView"/> has parent folder which can be navigated to by calling <see cref="M:BExplorer.Shell.ShellView.NavigateParent"/>.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellView.CurrentFolder">
            <summary>
            Gets/sets a <see cref="T:BExplorer.Shell.ShellItem"/> describing the folder currently being browsed by
            the <see cref="T:BExplorer.Shell.ShellView"/>.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellView.History">
            <summary> Gets the <see cref="T:BExplorer.Shell.ShellView"/>'s navigation history. </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellView.View">
            <summary> Gets or sets how items are displayed in the control. </summary>
        </member>
        <member name="T:BExplorer.Shell.ToolTip">
            <summary>
            Interaction logic for ToolTip.xaml
            </summary>
            <summary>
            ToolTip
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ToolTip.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:BExplorer.Shell.FileFilterComboBox">
            <summary>
            A file-filter combo box suitable for use in open/save file dialogs.
            </summary>
            
            <remarks>
            <para>
            This control extends the <see cref="T:System.Windows.Forms.ComboBox"/> class to provide
            automatic filtering of shell items according to wildcard patterns. 
            By setting the control's <see cref="P:BExplorer.Shell.FileFilterComboBox.ShellView"/> property, the control
            will automatically filter items in a ShellView.
            </para>
            
            <para>
            The <see cref="P:BExplorer.Shell.FileFilterComboBox.FilterItems"/> property accepts a filter string 
            similar to that accepted by the standard <see cref="T:System.Windows.Forms.FileDialog"/>
            class, for example: 
            <b>"Text files (*.txt)|*.txt|All files (*.*)|*.*"</b>
            </para>
            
            <para>
            The currently selected filter is selected by the <see cref="P:BExplorer.Shell.FileFilterComboBox.Filter"/>
            property. This should be set to one of the filter patterns specified
            in <see cref="P:BExplorer.Shell.FileFilterComboBox.FilterItems"/>, e.g. <b>"*.txt"</b>.
            </para>
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.FileFilterComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BExplorer.Shell.FileFilterComboBox"/>
            class.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.FileFilterComboBox.GenerateRegex(System.String)">
            <summary>
            Generates a <see cref="T:System.Text.RegularExpressions.Regex"/> object equivalent to the 
            provided wildcard.
            </summary>
            
            <param name="wildcard">
            The wildcard to generate a regex for.
            </param>
            
            <returns>
            A regex equivalent to the wildcard.
            </returns>
        </member>
        <member name="M:BExplorer.Shell.FileFilterComboBox.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.TextChanged"/> event.
            </summary>
            
            <param name="e">
            An EventArgs that contains the event data.
            </param>
        </member>
        <member name="P:BExplorer.Shell.FileFilterComboBox.Filter">
            <summary>
            Gets or sets the current filter string, which determines the 
            items that appear in the control's <see cref="P:BExplorer.Shell.FileFilterComboBox.ShellView"/>.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.FileFilterComboBox.DropDownStyle">
            <summary>
            This property does not apply to <see cref="T:BExplorer.Shell.FileFilterComboBox"/>.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.FileFilterComboBox.FilterItems">
            <summary>
            Gets/sets the filter string which determines the choices that 
            appear in the control's drop-down list.
            </summary>
            
            <remarks>
            <para>
            For each filtering option, the filter string contains a 
            description of the filter, followed by the vertical bar (|) and
            the filter pattern. The strings for different filtering options
            are separated by the vertical bar.
            </para>
            
            <para>
            If the filter itself does not appear in the description then
            it will be automatically added when the control is displayed.
            For example, in the example below the "Video files" entry will
            be displayed as "Video files (*.avi, *.wmv)". Beacuse the "All 
            files" entry already has the filter string present in its 
            description, it will not be added again.
            </para>
            
            <para>
            <example>
            "Video files|*.avi, *.wmv|All files (*.*)|*.*"
            </example>
            </para>
            </remarks>
        </member>
        <member name="P:BExplorer.Shell.FileFilterComboBox.Items">
            <summary>
            This property does not apply to <see cref="T:BExplorer.Shell.FileFilterComboBox"/>.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.FileFilterComboBox.ShellView">
            <summary>
            Gets/sets the <see cref="P:BExplorer.Shell.FileFilterComboBox.ShellView"/> control that the 
            <see cref="T:BExplorer.Shell.FileFilterComboBox"/> should filter the items of.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.FileNameComboBox">
            <summary>
            A filename combo box suitable for use in file Open/Save dialogs.
            </summary>
            
            <remarks>
            <para>
            This control extends the <see cref="T:System.Windows.Forms.ComboBox"/> class to provide
            auto-completion of filenames based on the folder selected in a
            <see cref="P:BExplorer.Shell.FileNameComboBox.ShellView"/>. The control also automatically navigates 
            the ShellView control when the user types a folder path.
            </para>
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.FileNameComboBox.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether the specified key is a regular input key or a 
            special key that requires preprocessing. 
            </summary>
            
            <param name="keyData">
            One of the <see cref="T:System.Windows.Forms.Keys"/> values.
            </param>
            
            <returns>
            true if the specified key is a regular input key; otherwise, false. 
            </returns>
        </member>
        <member name="M:BExplorer.Shell.FileNameComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"/> event.
            </summary>
            
            <param name="e">
            A <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="M:BExplorer.Shell.FileNameComboBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyPress"/> event.
            </summary>
            
            <param name="e">
            A <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="M:BExplorer.Shell.FileNameComboBox.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.TextChanged"/> event.
            </summary>
            
            <param name="e">
            An <see cref="T:System.EventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="P:BExplorer.Shell.FileNameComboBox.FilterControl">
            <summary>
            Initializes a new instance of the <see cref="T:BExplorer.Shell.FileNameComboBox"/>
            class.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.FileNameComboBox.ShellView">
            <summary>
            Gets/sets the <see cref="P:BExplorer.Shell.FileNameComboBox.ShellView"/> control that the 
            <see cref="T:BExplorer.Shell.FileNameComboBox"/> should look for auto-completion
            hints.
            </summary>
        </member>
        <member name="E:BExplorer.Shell.FileNameComboBox.FileNameEntered">
            <summary>
            Occurs when a file name is entered into the 
            <see cref="T:BExplorer.Shell.FileNameComboBox"/> and the Return key pressed.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.FilterItem">
            <summary>Represents items/filters in a FileFilterComboBox</summary>
        </member>
        <member name="M:BExplorer.Shell.FilterItem.ParseFilterString(System.String,System.String,System.Int32@)">
            <summary>
            Takes a string (representing a list of filters like: "txt|All files|") and converts it into a FilterItem[]
            </summary>
            <param name="filterString">The string representing a list of filters like: "txt|All files|"</param>
            <param name="existing">Not Sure</param>
            <param name="existingIndex">Not Sure</param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.Kernel32.GetDriveType(System.String)">
            <summary>
            The GetDriveType function determines whether a disk drive is a removable, fixed, CD-ROM, RAM disk, or network drive
            </summary>
            <param name="lpRootPathName">A pointer to a null-terminated string that specifies the root directory and returns information about the disk.A trailing backslash is required. If this parameter is NULL, the function uses the root of the current directory.</param>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.Icon">
            <summary>get icon</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.DisplayName">
            <summary>get display name</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.TypeName">
            <summary>get type name</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.Attributes">
            <summary>get attributes</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.IconLocation">
            <summary>get icon location</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.ExeType">
            <summary>return exe type</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.SysIconIndex">
            <summary>get system icon index</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.LinkOverlay">
            <summary>put a link overlay on icon</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.Selected">
            <summary>show icon in selected state</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.Attr_Specified">
            <summary>get only specified attributes</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.LargeIcon">
            <summary>get large icon</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.SmallIcon">
            <summary>get small icon</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.OpenIcon">
            <summary>get open icon</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.ShellIconSize">
            <summary>get shell size icon</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.PIDL">
            <summary>pszPath is a pidl</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.UseFileAttributes">
            <summary>use passed dwFileAttribute</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.AddOverlays">
            <summary>apply the appropriate overlays</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.SHGFI.OverlayIndex">
            <summary>Get the index of the overlay in the upper 8 bits of the iIcon</summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.Shell32.SHChangeNotify(BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID,BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags,System.IntPtr,System.IntPtr)">
            <summary>
            Notifies the system of an event that an application has performed. 
            An application should use this function if it performs an action that may affect the Shell.
            </summary>
            <param name="wEventId">Describes the event that has occurred. Typically, only one event is specified at a time. 
            If more than one event is specified, the values contained in the dwItem1 and dwItem2 parameters must be the same, respectively, for all specified events. This parameter can be one or more of the following values.</param>
            <param name="uFlags">Flags that, when combined bitwise with SHCNF_TYPE, indicate the meaning of the dwItem1 and dwItem2 parameters.</param>
            <param name="dwItem1">Optional. First event-dependent value.</param>
            <param name="dwItem2">Optional. Second event-dependent value.</param>
        </member>
        <member name="M:BExplorer.Shell.Interop.Shell32.SHFormatDrive(System.IntPtr,System.UInt32,BExplorer.Shell.Interop.Shell32.SHFormatFlags,BExplorer.Shell.Interop.Shell32.SHFormatOptions)">
            <summary>
            Formats a Drive
            </summary>
            <param name="hwnd"></param>
            <param name="drive"></param>
            <param name="fmtID"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.Shell32.FormatDrive(System.IntPtr,System.String)">
            <summary>
            Format a Drive by givven Drive letter
            </summary>
            <param name="DriveLetter">The Drive letter</param>
            <returns>Error or Success Code</returns>
        </member>
        <member name="T:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID">
            <summary>
            Describes the event that has occurred.
            Typically, only one event is specified at a time.
            If more than one event is specified, the values contained
            in the <i>dwItem1</i> and <i>dwItem2</i>
            parameters must be the same, respectively, for all specified events.
            This parameter can be one or more of the following values.
            </summary>
            <remarks>
            <para><b>Windows NT/2000/XP:</b> <i>dwItem2</i> contains the index
            in the system image list that has changed.
            <i>dwItem1</i> is not used and should be <see langword="null"/>.</para>
            <para><b>Windows 95/98:</b> <i>dwItem1</i> contains the index
            in the system image list that has changed.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.</para>
            </remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_ALLEVENTS">
            <summary>
            All events have occurred.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_ASSOCCHANGED">
            <summary>
            A file type association has changed. <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/>
            must be specified in the <i>uFlags</i> parameter.
            <i>dwItem1</i> and <i>dwItem2</i> are not used and must be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_ATTRIBUTES">
            <summary>
            The attributes of an item or folder have changed.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the item or folder that has changed.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_CREATE">
            <summary>
            A nonfolder item has been created.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the item that was created.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_DELETE">
            <summary>
            A nonfolder item has been deleted.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the item that was deleted.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_DRIVEADD">
            <summary>
            A drive has been added.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the root of the drive that was added.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_DRIVEADDGUI">
            <summary>
            A drive has been added and the Shell should create a new window for the drive.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the root of the drive that was added.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_DRIVEREMOVED">
            <summary>
            A drive has been removed. <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the root of the drive that was removed.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_EXTENDED_EVENT">
            <summary>
            Not currently used.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_FREESPACE">
            <summary>
            The amount of free space on a drive has changed.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the root of the drive on which the free space changed.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_MEDIAINSERTED">
            <summary>
            Storage media has been inserted into a drive.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the root of the drive that contains the new media.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_MEDIAREMOVED">
            <summary>
            Storage media has been removed from a drive.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the root of the drive from which the media was removed.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_MKDIR">
            <summary>
            A folder has been created. <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/>
            or <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the folder that was created.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_NETSHARE">
            <summary>
            A folder on the local computer is being shared via the network.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the folder that is being shared.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_NETUNSHARE">
            <summary>
            A folder on the local computer is no longer being shared via the network.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the folder that is no longer being shared.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_RENAMEFOLDER">
            <summary>
            The name of a folder has changed.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the previous pointer to an item identifier list (PIDL) or name of the folder.
            <i>dwItem2</i> contains the new PIDL or name of the folder.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_RENAMEITEM">
            <summary>
            The name of a nonfolder item has changed.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the previous PIDL or name of the item.
            <i>dwItem2</i> contains the new PIDL or name of the item.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_RMDIR">
            <summary>
            A folder has been removed.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the folder that was removed.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_SERVERDISCONNECT">
            <summary>
            The computer has disconnected from a server.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the server from which the computer was disconnected.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_UPDATEDIR">
            <summary>
            The contents of an existing folder have changed,
            but the folder still exists and has not been renamed.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="!:HChangeNotifyFlags.SHCNF_PATH"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the folder that has changed.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            If a folder has been created, deleted, or renamed, use SHCNE_MKDIR, SHCNE_RMDIR, or
            SHCNE_RENAMEFOLDER, respectively, instead.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyEventID.SHCNE_UPDATEIMAGE">
            <summary>
            An image in the system image list has changed.
            <see cref="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_DWORD"/> must be specified in <i>uFlags</i>.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags">
            <summary>
            Flags that indicate the meaning of the <i>dwItem1</i> and <i>dwItem2</i> parameters.
            The uFlags parameter must be one of the following values.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_DWORD">
            <summary>
            The <i>dwItem1</i> and <i>dwItem2</i> parameters are DWORD values.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_IDLIST">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of ITEMIDLIST structures that
            represent the item(s) affected by the change.
            Each ITEMIDLIST must be relative to the desktop folder.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_PATHA">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings of
            maximum length MAX_PATH that contain the full path names
            of the items affected by the change.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_PATHW">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings of
            maximum length MAX_PATH that contain the full path names
            of the items affected by the change.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_PRINTERA">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings that
            represent the friendly names of the printer(s) affected by the change.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_PRINTERW">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings that
            represent the friendly names of the printer(s) affected by the change.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_FLUSH">
            <summary>
            The function should not return until the notification
            has been delivered to all affected components.
            As this flag modifies other data-type flags, it cannot by used by itself.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.HChangeNotifyFlags.SHCNF_FLUSHNOWAIT">
            <summary>
            The function should begin delivering notifications to all affected components
            but should return as soon as the notification process has begun.
            As this flag modifies other data-type flags, it cannot by used by itself.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.SHELLSTATE.dwWin95Unused">
            DWORD->unsigned int
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.SHELLSTATE.uWin95Unused">
            UINT->unsigned int
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.SHELLSTATE.lParamSort">
            LONG->int
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.SHELLSTATE.iSortDirection">
            int
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.SHELLSTATE.version">
            UINT->unsigned int
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.SHELLSTATE.uNotUsed">
            UINT->unsigned int
        </member>
        <member name="F:BExplorer.Shell.Interop.Shell32.SHELLSTATE.bitvector2">
             fSepProcess : 1
            fStartPanelOn : 1
            fShowStartPage : 1
            fSpareFlags : 13
        </member>
        <member name="M:BExplorer.Shell.Interop.ShlWapi.StrFormatByteSize(System.Int64)">
            <summary>
            Converts a numeric value into a string that represents the number expressed as a size value in bytes, kilobytes, megabytes, or gigabytes, depending on the size.
            </summary>
            <param name="filesize">The numeric value to be converted.</param>
            <returns>the converted string</returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.User32.getOSInfo">
            <summary>
            Gets the operating system version
            </summary>
            <returns>OsVersionInfo object that contains windows version</returns>
        </member>
        <member name="M:BExplorer.Shell.Interop.User32.GetForegroundWindow">
            <summary>The GetForegroundWindow function returns a handle to the foreground window.</summary>
        </member>
        <member name="M:BExplorer.Shell.Interop.User32.MoveWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            The MoveWindow function changes the position and dimensions of the specified window. For a top-level window, the position and dimensions are relative to the upper-left corner of the screen. For a child window, they are relative to the upper-left corner of the parent window's client area.
            </summary>
            <param name="hWnd">Handle to the window.</param>
            <param name="X">Specifies the new position of the left side of the window.</param>
            <param name="Y">Specifies the new position of the top of the window.</param>
            <param name="nWidth">Specifies the new width of the window.</param>
            <param name="nHeight">Specifies the new height of the window.</param>
            <param name="bRepaint">Specifies whether the window is to be repainted. If this parameter is TRUE, the window receives a message. If the parameter is FALSE, no repainting of any kind occurs. This applies to the client area, the nonclient area (including the title bar and scroll bars), and any part of the parent window uncovered as a result of moving a child window.</param>
            <returns>If the function succeeds, the return value is nonzero.
            <para>If the function fails, the return value is zero. To get extended error information, call GetLastError.</para></returns>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.AsynchronousWindowPosition">
            <summary>If the calling thread and the thread that owns the window are attached to different input queues,
            the system posts the request to the thread that owns the window. This prevents the calling thread from
            blocking its execution while other threads process the request.</summary>
            <remarks>SWP_ASYNCWINDOWPOS</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.DeferErase">
            <summary>Prevents generation of the WM_SYNCPAINT message.</summary>
            <remarks>SWP_DEFERERASE</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.DrawFrame">
            <summary>Draws a frame (defined in the window's class description) around the window.</summary>
            <remarks>SWP_DRAWFRAME</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.FrameChanged">
            <summary>Applies new frame styles set using the SetWindowLong function. Sends a WM_NCCALCSIZE message to
            the window, even if the window's size is not being changed. If this flag is not specified, WM_NCCALCSIZE
            is sent only when the window's size is being changed.</summary>
            <remarks>SWP_FRAMECHANGED</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.HideWindow">
            <summary>Hides the window.</summary>
            <remarks>SWP_HIDEWINDOW</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.DoNotActivate">
            <summary>Does not activate the window. If this flag is not set, the window is activated and moved to the
            top of either the topmost or non-topmost group (depending on the setting of the hWndInsertAfter
            parameter).</summary>
            <remarks>SWP_NOACTIVATE</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.DoNotCopyBits">
            <summary>Discards the entire contents of the client area. If this flag is not specified, the valid
            contents of the client area are saved and copied back into the client area after the window is sized or
            repositioned.</summary>
            <remarks>SWP_NOCOPYBITS</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.IgnoreMove">
            <summary>Retains the current position (ignores X and Y parameters).</summary>
            <remarks>SWP_NOMOVE</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.DoNotChangeOwnerZOrder">
            <summary>Does not change the owner window's position in the Z order.</summary>
            <remarks>SWP_NOOWNERZORDER</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.DoNotRedraw">
            <summary>Does not redraw changes. If this flag is set, no repainting of any kind occurs. This applies to
            the client area, the nonclient area (including the title bar and scroll bars), and any part of the parent
            window uncovered as a result of the window being moved. When this flag is set, the application must
            explicitly invalidate or redraw any parts of the window and parent window that need redrawing.</summary>
            <remarks>SWP_NOREDRAW</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.DoNotReposition">
            <summary>Same as the SWP_NOOWNERZORDER flag.</summary>
            <remarks>SWP_NOREPOSITION</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.DoNotSendChangingEvent">
            <summary>Prevents the window from receiving the WM_WINDOWPOSCHANGING message.</summary>
            <remarks>SWP_NOSENDCHANGING</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.IgnoreResize">
            <summary>Retains the current size (ignores the cx and cy parameters).</summary>
            <remarks>SWP_NOSIZE</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.IgnoreZOrder">
            <summary>Retains the current Z order (ignores the hWndInsertAfter parameter).</summary>
            <remarks>SWP_NOZORDER</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.SetWindowPosFlags.ShowWindow">
            <summary>Displays the window.</summary>
            <remarks>SWP_SHOWWINDOW</remarks>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_ACCEPTFILES">
            <summary>
            Specifies that a window created with this style accepts drag-drop files.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_APPWINDOW">
            <summary>
            Forces a top-level window onto the taskbar when the window is visible.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_CLIENTEDGE">
            <summary>
            Specifies that a window has a border with a sunken edge.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_COMPOSITED">
            <summary>
            Windows XP: Paints all descendants of a window in bottom-to-top painting order using double-buffering. For more information, see Remarks. This cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_CONTEXTHELP">
            <summary>
            Includes a question mark in the title bar of the window. When the user clicks the question mark, the cursor changes to a question mark with a pointer. If the user then clicks a child window, the child receives a WM_HELP message. The child window should pass the message to the parent window procedure, which should call the WinHelp function using the HELP_WM_HELP command. The Help application displays a pop-up window that typically contains help for the child window.
            WS_EX_CONTEXTHELP cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX styles.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_CONTROLPARENT">
            <summary>
            The window itself contains child windows that should take part in dialog box navigation. If this style is specified, the dialog manager recurses into children of this window when performing navigation operations such as handling the TAB key, an arrow key, or a keyboard mnemonic.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_DLGMODALFRAME">
            <summary>
            Creates a window that has a double border; the window can, optionally, be created with a title bar by specifying the WS_CAPTION style in the dwStyle parameter.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_LAYERED">
            <summary>
            Windows 2000/XP: Creates a layered window. Note that this cannot be used for child windows. Also, this cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_LAYOUTRTL">
            <summary>
            Arabic and Hebrew versions of Windows 98/Me, Windows 2000/XP: Creates a window whose horizontal origin is on the right edge. Increasing horizontal values advance to the left.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_LEFT">
            <summary>
            Creates a window that has generic left-aligned properties. This is the default.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_LEFTSCROLLBAR">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading order alignment, the vertical scroll bar (if present) is to the left of the client area. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_LTRREADING">
            <summary>
            The window text is displayed using left-to-right reading-order properties. This is the default.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_MDICHILD">
            <summary>
            Creates a multiple-document interface (MDI) child window.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_NOACTIVATE">
            <summary>
            Windows 2000/XP: A top-level window created with this style does not become the foreground window when the user clicks it. The system does not bring this window to the foreground when the user minimizes or closes the foreground window.
            To activate the window, use the SetActiveWindow or SetForegroundWindow function.
            The window does not appear on the taskbar by default. To force the window to appear on the taskbar, use the WS_EX_APPWINDOW style.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_NOINHERITLAYOUT">
            <summary>
            Windows 2000/XP: A window created with this style does not pass its window layout to its child windows.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_NOPARENTNOTIFY">
            <summary>
            Specifies that a child window created with this style does not send the WM_PARENTNOTIFY message to its parent window when it is created or destroyed.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_OVERLAPPEDWINDOW">
            <summary>
            Combines the WS_EX_CLIENTEDGE and WS_EX_WINDOWEDGE styles.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_PALETTEWINDOW">
            <summary>
            Combines the WS_EX_WINDOWEDGE, WS_EX_TOOLWINDOW, and WS_EX_TOPMOST styles.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_RIGHT">
            <summary>
            The window has generic "right-aligned" properties. This depends on the window class. This style has an effect only if the shell language is Hebrew, Arabic, or another language that supports reading-order alignment; otherwise, the style is ignored.
            Using the WS_EX_RIGHT style for static or edit controls has the same effect as using the SS_RIGHT or ES_RIGHT style, respectively. Using this style with button controls has the same effect as using BS_RIGHT and BS_RIGHTBUTTON styles.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_RIGHTSCROLLBAR">
            <summary>
            Vertical scroll bar (if present) is to the right of the client area. This is the default.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_RTLREADING">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading-order alignment, the window text is displayed using right-to-left reading-order properties. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_STATICEDGE">
            <summary>
            Creates a window with a three-dimensional border style intended to be used for items that do not accept user input.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_TOOLWINDOW">
            <summary>
            Creates a tool window; that is, a window intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the taskbar or in the dialog that appears when the user presses ALT+TAB. If a tool window has a system menu, its icon is not displayed on the title bar. However, you can display the system menu by right-clicking or by typing ALT+SPACE.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_TOPMOST">
            <summary>
            Specifies that a window created with this style should be placed above all non-topmost windows and should stay above them, even when the window is deactivated. To add or remove this style, use the SetWindowPos function.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_TRANSPARENT">
            <summary>
            Specifies that a window created with this style should not be painted until siblings beneath the window (that were created by the same thread) have been painted. The window appears transparent because the bits of underlying sibling windows have already been painted.
            To achieve transparency without these restrictions, use the SetWindowRgn function.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStylesEx.WS_EX_WINDOWEDGE">
            <summary>
            Specifies that a window has a border with a raised edge.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Interop.User32.WindowStyles">
            <summary>
            Window Styles.
            The following styles can be specified wherever a window style is required. After the control has been created, these styles cannot be modified, except as noted.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_BORDER">
            <summary>The window has a thin-line border.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_CAPTION">
            <summary>The window has a title bar (includes the WS_BORDER style).</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_CHILD">
            <summary>The window is a child window. A window with this style cannot have a menu bar. This style cannot be used with the WS_POPUP style.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_CLIPCHILDREN">
            <summary>Excludes the area occupied by child windows when drawing occurs within the parent window. This style is used when creating the parent window.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_CLIPSIBLINGS">
            <summary>
            Clips child windows relative to each other; that is, when a particular child window receives a WM_PAINT message, the WS_CLIPSIBLINGS style clips all other overlapping child windows out of the region of the child window to be updated.
            If WS_CLIPSIBLINGS is not specified and child windows overlap, it is possible, when drawing within the client area of a child window, to draw within the client area of a neighboring child window.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_DISABLED">
            <summary>The window is initially disabled. A disabled window cannot receive input from the user. To change this after a window has been created, use the EnableWindow function.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_DLGFRAME">
            <summary>The window has a border of a style typically used with dialog boxes. A window with this style cannot have a title bar.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_GROUP">
            <summary>
            The window is the first control of a group of controls. The group consists of this first control and all controls defined after it, up to the next control with the WS_GROUP style.
            The first control in each group usually has the WS_TABSTOP style so that the user can move from group to group. The user can subsequently change the keyboard focus from one control in the group to the next control in the group by using the direction keys.
            You can turn this style on and off to change dialog box navigation. To change this style after a window has been created, use the SetWindowLong function.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_HSCROLL">
            <summary>The window has a horizontal scroll bar.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_MAXIMIZE">
            <summary>The window is initially maximized.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_MAXIMIZEBOX">
            <summary>The window has a maximize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_MINIMIZE">
            <summary>The window is initially minimized.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_MINIMIZEBOX">
            <summary>The window has a minimize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_OVERLAPPED">
            <summary>The window is an overlapped window. An overlapped window has a title bar and a border.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_OVERLAPPEDWINDOW">
            <summary>The window is an overlapped window.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_POPUP">
            <summary>The window is a pop-up window. This style cannot be used with the WS_CHILD style.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_POPUPWINDOW">
            <summary>The window is a pop-up window. The WS_CAPTION and WS_POPUPWINDOW styles must be combined to make the window menu visible.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_SIZEFRAME">
            <summary>The window has a sizing border.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_SYSMENU">
            <summary>The window has a window menu on its title bar. The WS_CAPTION style must also be specified.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_TABSTOP">
            <summary>
            The window is a control that can receive the keyboard focus when the user presses the TAB key.
            Pressing the TAB key changes the keyboard focus to the next control with the WS_TABSTOP style.  
            You can turn this style on and off to change dialog box navigation. To change this style after a window has been created, use the SetWindowLong function.
            For user-created windows and modeless dialogs to work with tab stops, alter the message loop to call the IsDialogMessage function.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_VISIBLE">
            <summary>The window is initially visible. This style can be turned on and off by using the ShowWindow or SetWindowPos function.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.WindowStyles.WS_VSCROLL">
            <summary>The window has a vertical scroll bar.</summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.ShowWindowCommands.Hide">
            <summary>
            Hides the window and activates another window.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.ShowWindowCommands.Normal">
            <summary>
            Activates and displays a window. If the window is minimized or
            maximized, the system restores it to its original size and position.
            An application should specify this flag when displaying the window
            for the first time.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.ShowWindowCommands.ShowMinimized">
            <summary>
            Activates the window and displays it as a minimized window.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.ShowWindowCommands.Maximize">
            <summary>
            Maximizes the specified window.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.ShowWindowCommands.ShowMaximized">
            <summary>
            Activates the window and displays it as a maximized window.
            </summary>      
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.ShowWindowCommands.ShowNoActivate">
            <summary>
            Displays a window in its most recent size and position. This value
            is similar to <see cref="!:Win32.ShowWindowCommand.Normal"/>, except
            the window is not activated.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.ShowWindowCommands.Show">
            <summary>
            Activates the window and displays it in its current size and position.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.ShowWindowCommands.Minimize">
            <summary>
            Minimizes the specified window and activates the next top-level
            window in the Z order.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.ShowWindowCommands.ShowMinNoActive">
            <summary>
            Displays the window as a minimized window. This value is similar to
            <see cref="!:Win32.ShowWindowCommand.ShowMinimized"/>, except the
            window is not activated.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.ShowWindowCommands.ShowNA">
            <summary>
            Displays the window in its current size and position. This value is
            similar to <see cref="!:Win32.ShowWindowCommand.Show"/>, except the
            window is not activated.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.ShowWindowCommands.Restore">
            <summary>
            Activates and displays the window. If the window is minimized or
            maximized, the system restores it to its original size and position.
            An application should specify this flag when restoring a minimized window.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.ShowWindowCommands.ShowDefault">
            <summary>
            Sets the show state based on the SW_* value specified in the
            STARTUPINFO structure passed to the CreateProcess function by the
            program that started the application.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Interop.User32.ShowWindowCommands.ForceMinimize">
            <summary>
             <b>Windows 2000/XP:</b> Minimizes a window, even if the thread
            that owns the window is not responding. This flag should only be
            used when minimizing windows from a different thread.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.PlacesToolbar">
            <summary>
            Provides a toolbar showing common places in the computer's
            filesystem.
            </summary>
            
            <remarks>
            Use the <see cref="T:BExplorer.Shell.PlacesToolbar"/> control to display a 
            toolbar listing common places in the computer's filesystem,
            similar to that on the far left-side of the standard file 
            open/save dialogs.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.PlacesToolbar.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:BExplorer.Shell.PlacesToolbar"/> class.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.PlacesToolbar.Add(BExplorer.Shell.ShellItem)">
            <summary>
            Adds a new folder to the toolbar.
            </summary>
            
            <param name="folder">
            A <see cref="T:BExplorer.Shell.ShellItem"/> representing the folder to be added.
            </param>
            
            <returns>
            true if the item was sucessfully added, false otherwise.
            </returns>
        </member>
        <member name="M:BExplorer.Shell.PlacesToolbar.OnVisibleChanged(System.EventArgs)">
            <summary>
            Overrides the <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)"/> method.
            </summary>
            <param name="e"/>
        </member>
        <member name="F:BExplorer.Shell.PlacesToolbar.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.PlacesToolbar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BExplorer.Shell.PlacesToolbar.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.PlacesToolbar.ShellView">
            <summary>
            A <see cref="C:ShellView"/> that should be automatically 
            navigated when the user clicks on an entry in the toolbar.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.PlacesToolbar.AllowDrop">
            <summary>
            This property does not apply to the 
            <see cref="T:BExplorer.Shell.PlacesToolbar"/> class.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.PlacesToolbar.AutoScroll">
            <summary>
            This property is not relevant to the 
            <see cref="T:BExplorer.Shell.PlacesToolbar"/> class.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.PlacesToolbar.AutoScrollMargin">
            <summary>
            This property is not relevant to the 
            <see cref="T:BExplorer.Shell.PlacesToolbar"/> class.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.PlacesToolbar.AutoScrollMinSize">
            <summary>
            This property is not relevant to the 
            <see cref="T:BExplorer.Shell.PlacesToolbar"/> class.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.PlacesToolbar.AutoSize">
            <summary>
            This property is not relevant to the 
            <see cref="T:BExplorer.Shell.PlacesToolbar"/> class.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.PlacesToolbar.AutoSizeMode">
            <summary>
            This property is not relevant to the 
            <see cref="T:BExplorer.Shell.PlacesToolbar"/> class.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.PlacesToolbar.AutoValidate">
            <summary>
            This property is not relevant to the 
            <see cref="T:BExplorer.Shell.PlacesToolbar"/> class.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.PlacesToolbar.BackgroundImage">
            <summary>
            This property is not relevant to the 
            <see cref="T:BExplorer.Shell.PlacesToolbar"/> class.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.PlacesToolbar.BackgroundImageLayout">
            <summary>
            This property is not relevant to the 
            <see cref="T:BExplorer.Shell.PlacesToolbar"/> class.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.PlacesToolbar.BorderStyle">
            <summary>
            This property is not relevant to the 
            <see cref="T:BExplorer.Shell.PlacesToolbar"/> class.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.PlacesToolbar.CausesValidation">
            <summary>
            This property is not relevant to the 
            <see cref="T:BExplorer.Shell.PlacesToolbar"/> class.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Properties.Resources.Back">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Properties.Resources.NewFolder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Properties.Resources.Up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.Properties.Resources.Views">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.ShellComboBox">
            <summary>
            Provides a drop-down list displaying the Windows Shell namespace.
            </summary>
            
            <remarks>
            The <see cref="T:BExplorer.Shell.ShellComboBox"/> class displays a view of the Windows
            Shell namespace in a drop-down list similar to that displayed in
            a file open/save dialog.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.ShellComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BExplorer.Shell.ShellComboBox"/> class.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellComboBox.ShouldSerializeRootFolder">
            <summary>
            Occurs when the <see cref="T:BExplorer.Shell.ShellComboBox"/> control wants to know
            if it should include a folder in its view.
            </summary>
            
            <remarks>
            This event allows the folders displayed in the 
            <see cref="T:BExplorer.Shell.ShellComboBox"/> control to be filtered.
            </remarks>
        </member>
        <member name="P:BExplorer.Shell.ShellComboBox.Editable">
            <summary>
            Gets/sets a value indicating whether the combo box is editable.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellComboBox.ShowFileSystemPath">
            <summary>
            Gets/sets a value indicating whether the full file system path 
            should be displayed in the main portion of the control.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellComboBox.RootFolder">
            <summary>
            Gets/sets the folder that the <see cref="T:BExplorer.Shell.ShellComboBox"/> should
            display as the root folder.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellComboBox.SelectedFolder">
            <summary>
            Gets/sets the folder currently selected in the 
            <see cref="T:BExplorer.Shell.ShellComboBox"/>.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellComboBox.ShellView">
            <summary>
            Gets/sets a <see cref="P:BExplorer.Shell.ShellComboBox.ShellView"/> whose navigation should be
            controlled by the combo box.
            </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellComboBox.Changed">
            <summary>
            Occurs when the <see cref="T:BExplorer.Shell.ShellComboBox"/>'s 
            <see cref="P:BExplorer.Shell.ShellComboBox.SelectedFolder"/> property changes.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.ShellContextMenu">
            <summary>
            Provides support for displaying the context menu of a shell item.
            </summary>
            
            <remarks>
            <para>
            Use this class to display a context menu for a shell item, either
            as a popup menu, or as a main menu. 
            </para>
            
            <para>
            To display a popup menu, simply call <see cref="M:BExplorer.Shell.ShellContextMenu.ShowContextMenu(System.Windows.Forms.Control,System.Drawing.Point,BExplorer.Shell.Interop.CMF,System.Boolean)"/>
            with the parent control and the position at which the menu should
            be shown.
            </para>
            
            <para>
            To display a shell context menu in a Form's main menu, call the
            <see cref="M:BExplorer.Shell.ShellContextMenu.Populate(System.Windows.Forms.Menu,BExplorer.Shell.Interop.CMF)"/> method to populate the menu. In addition, 
            you must intercept a number of special messages that will be sent 
            to the menu's parent form. To do this, you must override 
            <see cref="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)"/> like so:
            </para>
            
            <code>
                protected override void WndProc(ref Message m) {
                    if ((m_ContextMenu == null) || (!m_ContextMenu.HandleMenuMessage(ref m))) {
                        base.WndProc(ref m);
                    }
                }
            </code>
            
            <para>
            Where m_ContextMenu is the <see cref="T:BExplorer.Shell.ShellContextMenu"/> being shown.
            </para>
            
            Standard menu commands can also be invoked from this class, for 
            example <see cref="M:BExplorer.Shell.ShellContextMenu.InvokeDelete"/> and <see cref="M:BExplorer.Shell.ShellContextMenu.InvokeRename"/>.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.ShellContextMenu.#ctor(BExplorer.Shell.ShellView,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BExplorer.Shell.ShellContextMenu"/> class.
            </summary>
            <param name="shellView">The ShellView the ContextMenu is associated with</param>
            <param name="menuType"></param>
        </member>
        <member name="M:BExplorer.Shell.ShellContextMenu.#ctor(BExplorer.Shell.ShellItem)">
            <summary>
            Initialises a new instance of the <see cref="T:BExplorer.Shell.ShellContextMenu"/> 
            class.
            </summary>
            
            <param name="item">
            The item to which the context menu should refer.
            </param>
        </member>
        <member name="M:BExplorer.Shell.ShellContextMenu.#ctor(BExplorer.Shell.ShellItem[],BExplorer.Shell.Interop.SVGIO)">
            <summary>
            Initializes a new instance of the <see cref="T:BExplorer.Shell.ShellContextMenu"/> class.
            </summary>
            
            <param name="items">
            The items to which the context menu should refer.
            </param>
            <param name="svgio"></param>
        </member>
        <member name="M:BExplorer.Shell.ShellContextMenu.HandleMenuMessage(System.Windows.Forms.Message@)">
            <summary>
            Handles context menu messages when the <see cref="T:BExplorer.Shell.ShellContextMenu"/>
            is displayed on a Form's main menu bar.
            </summary>
            
            <remarks>
            <para>
            To display a shell context menu in a Form's main menu, call the
            <see cref="M:BExplorer.Shell.ShellContextMenu.Populate(System.Windows.Forms.Menu,BExplorer.Shell.Interop.CMF)"/> method to populate the menu with the shell
            item's menu items. In addition, you must intercept a number of
            special messages that will be sent to the menu's parent form. To
            do this, you must override <see cref="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)"/> like so:
            </para>
            
            <code>
                protected override void WndProc(ref Message m) {
                    if ((m_ContextMenu == null) || (!m_ContextMenu.HandleMenuMessage(ref m))) {
                        base.WndProc(ref m);
                    }
                }
            </code>
            
            <para>
            Where m_ContextMenu is the <see cref="T:BExplorer.Shell.ShellContextMenu"/> being shown.
            </para>
            </remarks>
            
            <param name="m">
            The message to handle.
            </param>
            
            <returns>
            <see langword="true"/> if the message was a Shell Context Menu
            message, <see langword="false"/> if not. If the method returns false,
            then the message should be passed down to the base class's
            <see cref="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)"/> method.
            </returns>
        </member>
        <member name="M:BExplorer.Shell.ShellContextMenu.InvokeDelete">
            <summary>
            Invokes the Delete command on the shell item.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellContextMenu.InvokeRename">
            <summary>
            Invokes the Rename command on the shell item.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellContextMenu.Populate(System.Windows.Forms.Menu,BExplorer.Shell.Interop.CMF)">
            <summary>
            Populates a <see cref="T:System.Windows.Forms.Menu"/> with the context menu items for
            a shell item.
            </summary>
            
            <remarks>
            If this method is being used to populate a Form's main menu
            then you need to call <see cref="M:BExplorer.Shell.ShellContextMenu.HandleMenuMessage(System.Windows.Forms.Message@)"/> in the
            Form's message handler.
            </remarks>
            
            <param name="menu">The menu to populate.</param>
            <param name="additionalFlags"></param>
        </member>
        <member name="M:BExplorer.Shell.ShellContextMenu.ShowContextMenu(System.Windows.Forms.Control,System.Drawing.Point,BExplorer.Shell.Interop.CMF,System.Boolean)">
            <summary>
            Shows a context menu for a shell item.
            </summary>
            
            <param name="control">
            The parent control.
            </param>
            
            <param name="pos">
            The position on <paramref name="control"/> that the menu
            should be displayed at.
            </param>
            <param name="aditionalFlags"></param>
            <param name="IsOnEmpty"></param>
        </member>
        <member name="P:BExplorer.Shell.ShellContextMenu._ShellView">
            <summary>The ShellView the ContextMenu is associated with</summary>
        </member>
        <member name="P:BExplorer.Shell.ShellContextMenu.ComInterface">
            <summary>
            Gets the underlying COM <see cref="T:BExplorer.Shell.Interop.IContextMenu"/> interface.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.ShellHistory">
            <summary>
            Holds a <see cref="T:BExplorer.Shell.ShellView"/>'s navigation history.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellHistory.Clear">
            <summary>
            Clears the shell history.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellHistory.HistoryBack">
            <summary>
            Gets the list of folders in the <see cref="T:BExplorer.Shell.ShellView"/>'s
            <b>Back</b> history.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellHistory.HistoryForward">
            <summary>
            Gets the list of folders in the <see cref="T:BExplorer.Shell.ShellView"/>'s
            <b>Forward</b> history.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.ShellIconType">
            <summary>
            Enumerates the types of shell icons.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ShellIconType.LargeIcon">
            <summary>The system large icon type</summary>
        </member>
        <member name="F:BExplorer.Shell.ShellIconType.ShellIcon">
            <summary>The system shell icon type</summary>
        </member>
        <member name="F:BExplorer.Shell.ShellIconType.SmallIcon">
            <summary>The system small icon type</summary>
        </member>
        <member name="T:BExplorer.Shell.ShellIconFlags">
            <summary>
            Enumerates the optional styles that can be applied to shell icons.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.ShellIconFlags.OpenIcon">
            <summary>The icon is displayed opened.</summary>
        </member>
        <member name="F:BExplorer.Shell.ShellIconFlags.OverlayIndex">
            <summary>Get the overlay for the icon as well.</summary>
        </member>
        <member name="T:BExplorer.Shell.ShellNotificationListener">
            <summary>
            Listens for notifications of changes in the Windows Shell Namespace.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellNotificationListener.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:BExplorer.Shell.ShellNotificationListener"/> class.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellNotificationListener.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:BExplorer.Shell.ShellNotificationListener"/> class.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellNotificationListener.Dispose(System.Boolean)">
            <summary>
            Overrides the <see cref="M:System.ComponentModel.Component.Dispose(System.Boolean)"/> method.
            </summary>
            <param name="disposing"/>
        </member>
        <member name="E:BExplorer.Shell.ShellNotificationListener.DriveAdded">
            <summary>
            Occurs when a drive is added.
            </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellNotificationListener.DriveRemoved">
            <summary>
            Occurs when a drive is removed.
            </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellNotificationListener.FolderCreated">
            <summary>
            Occurs when a folder is created.
            </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellNotificationListener.FolderDeleted">
            <summary>
            Occurs when a folder is deleted.
            </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellNotificationListener.FolderRenamed">
            <summary>
            Occurs when a folder is renamed.
            </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellNotificationListener.FolderUpdated">
            <summary>
            Occurs when a folder's contents are updated.
            </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellNotificationListener.ItemCreated">
            <summary>
            Occurs when a non-folder item is created.
            </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellNotificationListener.ItemDeleted">
            <summary>
            Occurs when a non-folder item is deleted.
            </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellNotificationListener.ItemRenamed">
            <summary>
            Occurs when a non-folder item is renamed.
            </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellNotificationListener.ItemUpdated">
            <summary>
            Occurs when a non-folder item is updated.
            </summary>
        </member>
        <member name="E:BExplorer.Shell.ShellNotificationListener.SharingChanged">
            <summary>
            Occurs when the shared state for a folder changes.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.ShellItemEventArgs">
            <summary>
            Provides information of changes in the Windows Shell Namespace.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellItemEventArgs.#ctor(BExplorer.Shell.ShellItem)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:BExplorer.Shell.ShellItemEventArgs"/> class.
            </summary>
            
            <param name="item">
            The ShellItem that has changed.
            </param>
        </member>
        <member name="P:BExplorer.Shell.ShellItemEventArgs.Item">
            <summary>
            The ShellItem that has changed.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.ShellItemChangeEventArgs">
            <summary>
            Provides information of changes in the Windows Shell Namespace.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellItemChangeEventArgs.#ctor(BExplorer.Shell.ShellItem,BExplorer.Shell.ShellItem)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:BExplorer.Shell.ShellItemChangeEventArgs"/> class.
            </summary>
            
            <param name="oldItem">
            The ShellItem before the change
            </param>
            
            <param name="newItem">
            The ShellItem after the change
            </param>
        </member>
        <member name="P:BExplorer.Shell.ShellItemChangeEventArgs.OldItem">
            <summary>
            The ShellItem before the change.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellItemChangeEventArgs.NewItem">
            <summary>
            The ShellItem after the change.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.ShellItemEventHandler">
            <summary>
            Represents the method that handles change notifications from
            <see cref="T:BExplorer.Shell.ShellNotificationListener"/>
            </summary>
            
            <param name="sender">
            The source of the event.
            </param>
            
            <param name="e">
            A <see cref="T:BExplorer.Shell.ShellItemEventArgs"/> that contains the data
            for the event.
            </param>
        </member>
        <member name="T:BExplorer.Shell.ShellItemChangeEventHandler">
            <summary>
            Represents the method that handles change notifications from
            <see cref="T:BExplorer.Shell.ShellNotificationListener"/>
            </summary>
            
            <param name="sender">
            The source of the event.
            </param>
            
            <param name="e">
            A <see cref="T:BExplorer.Shell.ShellItemChangeEventArgs"/> that contains the data
            for the event.
            </param>
        </member>
        <member name="T:BExplorer.Shell.IOwnerDataCallback">
            <summary>
            This is the COM interface that a ListView must be given in order for groups in virtual lists to work.
            </summary>
            <remarks>
            This interface is NOT documented by MS. It was found on Greg Chapell's site. This means that there is
            no guarantee that it will work on future versions of Windows, nor continue to work on current ones.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.IOwnerDataCallback.GetItemPosition(System.Int32,BExplorer.Shell.Interop.POINT@)">
            <summary>
            Not sure what this does
            </summary>
            <param name="i"></param>
            <param name="pt"></param>
        </member>
        <member name="M:BExplorer.Shell.IOwnerDataCallback.SetItemPosition(System.Int32,BExplorer.Shell.Interop.POINT)">
            <summary>
            Not sure what this does
            </summary>
            <param name="t"></param>
            <param name="pt"></param>
        </member>
        <member name="M:BExplorer.Shell.IOwnerDataCallback.GetItemInGroup(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Get the index of the item that occurs at the n'th position of the indicated group.
            </summary>
            <param name="groupIndex">Index of the group</param>
            <param name="n">Index within the group</param>
            <param name="itemIndex">Index of the item within the whole list</param>
        </member>
        <member name="M:BExplorer.Shell.IOwnerDataCallback.GetItemGroup(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Get the index of the group to which the given item belongs
            </summary>
            <param name="itemIndex">Index of the item within the whole list</param>
            <param name="occurrenceCount">Which occurences of the item is wanted</param>
            <param name="groupIndex">Index of the group</param>
        </member>
        <member name="M:BExplorer.Shell.IOwnerDataCallback.GetItemGroupCount(System.Int32,System.Int32@)">
            <summary>
            Get the number of groups that contain the given item
            </summary>
            <param name="itemIndex">Index of the item within the whole list</param>
            <param name="occurrenceCount">How many groups does it occur within</param>
        </member>
        <member name="M:BExplorer.Shell.IOwnerDataCallback.OnCacheHint(BExplorer.Shell.Interop.LVITEMINDEX,BExplorer.Shell.Interop.LVITEMINDEX)">
            <summary>
            A hint to prepare any cache for the given range of requests
            </summary>
            <param name="i"></param>
            <param name="j"></param>
        </member>
        <member name="T:BExplorer.Shell.SearchCondition">
            <summary>
            Exposes properties and methods for retrieving information about a search condition.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.SearchCondition.GetSubConditions">
            <summary>
            Retrieves an array of the sub-conditions. 
            </summary>
        </member>
        <member name="M:BExplorer.Shell.SearchCondition.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:BExplorer.Shell.SearchCondition.Dispose">
            <summary>
            Release the native objects.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.SearchCondition.Dispose(System.Boolean)">
            <summary>
            Release the native objects.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:BExplorer.Shell.SearchCondition.PropertyCanonicalName">
            <summary>
            The name of a property to be compared or NULL for an unspecified property.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.SearchCondition.PropertyKey">
            <summary>
            The property key for the property that is to be compared.
            </summary>        
        </member>
        <member name="P:BExplorer.Shell.SearchCondition.PropertyValue">
            <summary>
            A value (in <see cref="T:System.String"/> format) to which the property is compared. 
            </summary>
        </member>
        <member name="P:BExplorer.Shell.SearchCondition.ConditionOperation">
            <summary>
            Search condition operation to be performed on the property/value combination.
            See <see cref="!:Microsoft.WindowsAPICodePack.Shell.SearchConditionOperation"/> for more details.
            </summary>        
        </member>
        <member name="P:BExplorer.Shell.SearchCondition.ConditionType">
            <summary>
            Represents the condition type for the given node. 
            </summary>        
        </member>
        <member name="T:BExplorer.Shell.SearchConditionFactory">
            <summary>
            Provides methods for creating or resolving a condition tree 
            that was obtained by parsing a query string.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.SearchConditionFactory.CreateLeafCondition(System.String,System.String,BExplorer.Shell.Interop.SearchConditionOperation)">
            <summary>
            Creates a leaf condition node that represents a comparison of property value and constant value. 
            </summary>
            <param name="propertyName">The name of a property to be compared, or null for an unspecified property. 
            The locale name of the leaf node is LOCALE_NAME_USER_DEFAULT.</param>
            <param name="value">The constant value against which the property value should be compared.</param>
            <param name="operation">Specific condition to be used when comparing the actual value and the expected value of the given property</param>
            <returns>SearchCondition based on the given parameters</returns>
            <remarks>
            The search will only work for files that are indexed, as well as the specific properties are indexed. To find 
            the properties that are indexed, look for the specific property's property description and 
            <see cref="P:Microsoft.WindowsAPICodePack.Shell.PropertySystem.ShellPropertyDescription.TypeFlags"/> property for IsQueryable flag.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.SearchConditionFactory.CreateLeafCondition(System.String,System.DateTime,BExplorer.Shell.Interop.SearchConditionOperation)">
            <summary>
            Creates a leaf condition node that represents a comparison of property value and constant value. 
            Overload method takes a DateTime parameter for the comparison value.
            </summary>
            <param name="propertyName">The name of a property to be compared, or null for an unspecified property. 
            The locale name of the leaf node is LOCALE_NAME_USER_DEFAULT.</param>
            <param name="value">The DateTime value against which the property value should be compared.</param>
            <param name="operation">Specific condition to be used when comparing the actual value and the expected value of the given property</param>
            <returns>SearchCondition based on the given parameters</returns>
            <remarks>
            The search will only work for files that are indexed, as well as the specific properties are indexed. To find 
            the properties that are indexed, look for the specific property's property description and 
            <see cref="P:Microsoft.WindowsAPICodePack.Shell.PropertySystem.ShellPropertyDescription.TypeFlags"/> property for IsQueryable flag.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.SearchConditionFactory.CreateLeafCondition(System.String,System.Int32,BExplorer.Shell.Interop.SearchConditionOperation)">
            <summary>
            Creates a leaf condition node that represents a comparison of property value and Integer value. 
            </summary>
            <param name="propertyName">The name of a property to be compared, or null for an unspecified property. 
            The locale name of the leaf node is LOCALE_NAME_USER_DEFAULT.</param>
            <param name="value">The Integer value against which the property value should be compared.</param>
            <param name="operation">Specific condition to be used when comparing the actual value and the expected value of the given property</param>
            <returns>SearchCondition based on the given parameters</returns>
            <remarks>
            The search will only work for files that are indexed, as well as the specific properties are indexed. To find 
            the properties that are indexed, look for the specific property's property description and 
            <see cref="P:Microsoft.WindowsAPICodePack.Shell.PropertySystem.ShellPropertyDescription.TypeFlags"/> property for IsQueryable flag.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.SearchConditionFactory.CreateLeafCondition(System.String,System.Boolean,BExplorer.Shell.Interop.SearchConditionOperation)">
            <summary>
            Creates a leaf condition node that represents a comparison of property value and Boolean value. 
            </summary>
            <param name="propertyName">The name of a property to be compared, or null for an unspecified property. 
            The locale name of the leaf node is LOCALE_NAME_USER_DEFAULT.</param>
            <param name="value">The Boolean value against which the property value should be compared.</param>
            <param name="operation">Specific condition to be used when comparing the actual value and the expected value of the given property</param>
            <returns>SearchCondition based on the given parameters</returns>
            <remarks>
            The search will only work for files that are indexed, as well as the specific properties are indexed. To find 
            the properties that are indexed, look for the specific property's property description and 
            <see cref="P:Microsoft.WindowsAPICodePack.Shell.PropertySystem.ShellPropertyDescription.TypeFlags"/> property for IsQueryable flag.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.SearchConditionFactory.CreateLeafCondition(System.String,System.Double,BExplorer.Shell.Interop.SearchConditionOperation)">
            <summary>
            Creates a leaf condition node that represents a comparison of property value and Floating Point value. 
            </summary>
            <param name="propertyName">The name of a property to be compared, or null for an unspecified property. 
            The locale name of the leaf node is LOCALE_NAME_USER_DEFAULT.</param>
            <param name="value">The Floating Point value against which the property value should be compared.</param>
            <param name="operation">Specific condition to be used when comparing the actual value and the expected value of the given property</param>
            <returns>SearchCondition based on the given parameters</returns>
            <remarks>
            The search will only work for files that are indexed, as well as the specific properties are indexed. To find 
            the properties that are indexed, look for the specific property's property description and 
            <see cref="P:Microsoft.WindowsAPICodePack.Shell.PropertySystem.ShellPropertyDescription.TypeFlags"/> property for IsQueryable flag.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.SearchConditionFactory.CreateLeafCondition(BExplorer.Shell.Interop.PROPERTYKEY,System.String,BExplorer.Shell.Interop.SearchConditionOperation)">
            <summary>
            Creates a leaf condition node that represents a comparison of property value and constant value. 
            </summary>
            <param name="propertyKey">The property to be compared.</param>
            <param name="value">The constant value against which the property value should be compared.</param>
            <param name="operation">Specific condition to be used when comparing the actual value and the expected value of the given property</param>
            <returns>SearchCondition based on the given parameters</returns>
            <remarks>
            The search will only work for files that are indexed, as well as the specific properties are indexed. To find 
            the properties that are indexed, look for the specific property's property description and 
            <see cref="P:Microsoft.WindowsAPICodePack.Shell.PropertySystem.ShellPropertyDescription.TypeFlags"/> property for IsQueryable flag.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.SearchConditionFactory.CreateLeafCondition(BExplorer.Shell.Interop.PROPERTYKEY,System.DateTime,BExplorer.Shell.Interop.SearchConditionOperation)">
            <summary>
            Creates a leaf condition node that represents a comparison of property value and constant value. 
            Overload method takes a DateTime parameter for the comparison value.
            </summary>
            <param name="propertyKey">The property to be compared.</param>
            <param name="value">The DateTime value against which the property value should be compared.</param>
            <param name="operation">Specific condition to be used when comparing the actual value and the expected value of the given property</param>
            <returns>SearchCondition based on the given parameters</returns>
            <remarks>
            The search will only work for files that are indexed, as well as the specific properties are indexed. To find 
            the properties that are indexed, look for the specific property's property description and 
            <see cref="P:Microsoft.WindowsAPICodePack.Shell.PropertySystem.ShellPropertyDescription.TypeFlags"/> property for IsQueryable flag.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.SearchConditionFactory.CreateLeafCondition(BExplorer.Shell.Interop.PROPERTYKEY,System.Boolean,BExplorer.Shell.Interop.SearchConditionOperation)">
            <summary>
            Creates a leaf condition node that represents a comparison of property value and Boolean value. 
            Overload method takes a DateTime parameter for the comparison value.
            </summary>
            <param name="propertyKey">The property to be compared.</param>
            <param name="value">The boolean value against which the property value should be compared.</param>
            <param name="operation">Specific condition to be used when comparing the actual value and the expected value of the given property</param>
            <returns>SearchCondition based on the given parameters</returns>
            <remarks>
            The search will only work for files that are indexed, as well as the specific properties are indexed. To find 
            the properties that are indexed, look for the specific property's property description and 
            <see cref="P:Microsoft.WindowsAPICodePack.Shell.PropertySystem.ShellPropertyDescription.TypeFlags"/> property for IsQueryable flag.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.SearchConditionFactory.CreateLeafCondition(BExplorer.Shell.Interop.PROPERTYKEY,System.Double,BExplorer.Shell.Interop.SearchConditionOperation)">
            <summary>
            Creates a leaf condition node that represents a comparison of property value and Floating Point value. 
            Overload method takes a DateTime parameter for the comparison value.
            </summary>
            <param name="propertyKey">The property to be compared.</param>
            <param name="value">The Floating Point value against which the property value should be compared.</param>
            <param name="operation">Specific condition to be used when comparing the actual value and the expected value of the given property</param>
            <returns>SearchCondition based on the given parameters</returns>
            <remarks>
            The search will only work for files that are indexed, as well as the specific properties are indexed. To find 
            the properties that are indexed, look for the specific property's property description and 
            <see cref="P:Microsoft.WindowsAPICodePack.Shell.PropertySystem.ShellPropertyDescription.TypeFlags"/> property for IsQueryable flag.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.SearchConditionFactory.CreateLeafCondition(BExplorer.Shell.Interop.PROPERTYKEY,System.Int32,BExplorer.Shell.Interop.SearchConditionOperation)">
            <summary>
            Creates a leaf condition node that represents a comparison of property value and Integer value. 
            Overload method takes a DateTime parameter for the comparison value.
            </summary>
            <param name="propertyKey">The property to be compared.</param>
            <param name="value">The Integer value against which the property value should be compared.</param>
            <param name="operation">Specific condition to be used when comparing the actual value and the expected value of the given property</param>
            <returns>SearchCondition based on the given parameters</returns>
            <remarks>
            The search will only work for files that are indexed, as well as the specific properties are indexed. To find 
            the properties that are indexed, look for the specific property's property description and 
            <see cref="P:Microsoft.WindowsAPICodePack.Shell.PropertySystem.ShellPropertyDescription.TypeFlags"/> property for IsQueryable flag.
            </remarks>
        </member>
        <member name="M:BExplorer.Shell.SearchConditionFactory.CreateAndOrCondition(BExplorer.Shell.Interop.SearchConditionType,System.Boolean,BExplorer.Shell.SearchCondition[])">
            <summary>
            Creates a condition node that is a logical conjunction ("AND") or disjunction ("OR") 
            of a collection of subconditions.
            </summary>
            <param name="conditionType">The SearchConditionType of the condition node. 
            Must be either AndCondition or OrCondition.</param>
            <param name="simplify">TRUE to logically simplify the result, if possible; 
            then the result will not necessarily to be of the specified kind. FALSE if the result should 
            have exactly the prescribed structure. An application that plans to execute a query based on the 
            condition tree would typically benefit from setting this parameter to TRUE. </param>
            <param name="conditionNodes">Array of subconditions</param>
            <returns>New SearchCondition based on the operation</returns>
        </member>
        <member name="M:BExplorer.Shell.SearchConditionFactory.CreateNotCondition(BExplorer.Shell.SearchCondition,System.Boolean)">
            <summary>
            Creates a condition node that is a logical negation (NOT) of another condition 
            (a subnode of this node). 
            </summary>
            <param name="conditionToBeNegated">SearchCondition node to be negated.</param>
            <param name="simplify">True to logically simplify the result if possible; False otherwise. 
            In a query builder scenario, simplyfy should typically be set to false.</param>
            <returns>New SearchCondition</returns>
        </member>
        <member name="M:BExplorer.Shell.SearchConditionFactory.ParseStructuredQuery(System.String)">
            <summary>
            Parses an input string that contains Structured Query keywords (using Advanced Query Syntax 
            or Natural Query Syntax) and produces a SearchCondition object.
            </summary>
            <param name="query">The query to be parsed</param>
            <returns>Search condition resulting from the query</returns>
            <remarks>For more information on structured query syntax, visit http://msdn.microsoft.com/en-us/library/bb233500.aspx and
            http://www.microsoft.com/windows/products/winfamily/desktopsearch/technicalresources/advquery.mspx</remarks>
        </member>
        <member name="M:BExplorer.Shell.SearchConditionFactory.ParseStructuredQuery(System.String,System.Globalization.CultureInfo)">
            <summary>
            Parses an input string that contains Structured Query keywords (using Advanced Query Syntax 
            or Natural Query Syntax) and produces a SearchCondition object.
            </summary>
            <param name="query">The query to be parsed</param>
            <param name="cultureInfo">The culture used to select the localized language for keywords.</param>
            <returns>Search condition resulting from the query</returns>
            <remarks>For more information on structured query syntax, visit http://msdn.microsoft.com/en-us/library/bb233500.aspx and
            http://www.microsoft.com/windows/products/winfamily/desktopsearch/technicalresources/advquery.mspx</remarks>
        </member>
        <member name="T:BExplorer.Shell.ShellSavedSearchCollection">
            <summary>
            Represents a saved search
            </summary>
        </member>
        <member name="T:BExplorer.Shell.ShellSearchFolder">
            <summary>
            Create and modify search folders.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellSearchFolder.#ctor(BExplorer.Shell.SearchCondition,BExplorer.Shell.ShellItem[])">
            <summary>
            Create a simple search folder. Once the appropriate parameters are set,
            the search folder can be enumerated to get the search results.
            </summary>
            <param name="searchCondition">Specific condition on which to perform the search (property and expected value)</param>
            <param name="searchScopePath">List of folders/paths to perform the search on. These locations need to be indexed by the system.</param>
        </member>
        <member name="M:BExplorer.Shell.ShellSearchFolder.SetStacks(System.String[])">
            <summary>
            Creates a list of stack keys, as specified. If this method is not called,
            by default the folder will not be stacked.
            </summary>
            <param name="canonicalNames">Array of canonical names for properties on which the folder is stacked.</param>
            <exception cref="T:System.ArgumentException">If one of the given canonical names is invalid.</exception>
        </member>
        <member name="M:BExplorer.Shell.ShellSearchFolder.SetStacks(BExplorer.Shell.Interop.PROPERTYKEY[])">
            <summary>
            Creates a list of stack keys, as specified. If this method is not called,
            by default the folder will not be stacked.
            </summary>
            <param name="propertyKeys">Array of property keys on which the folder is stacked.</param>
        </member>
        <member name="M:BExplorer.Shell.ShellSearchFolder.SetDisplayName(System.String)">
            <summary>
            Sets the search folder display name.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellSearchFolder.SetIconSize(System.Int32)">
            <summary>
            Sets the search folder icon size.
            The default settings are based on the FolderTypeID which is set by the
            SearchFolder::SetFolderTypeID method.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellSearchFolder.SetFolderTypeID(System.Guid)">
            <summary>
            Sets a search folder type ID, as specified.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.ShellSearchFolder.SetFolderLogicalViewMode(BExplorer.Shell.Interop.FolderLogicalViewMode)">
            <summary>
            Sets folder logical view mode. The default settings are based on the FolderTypeID which is set
            by the SearchFolder::SetFolderTypeID method.
            </summary>
            <param name="mode">The logical view mode to set.</param>
        </member>
        <member name="M:BExplorer.Shell.ShellSearchFolder.SetVisibleColumns(BExplorer.Shell.Interop.PROPERTYKEY[])">
            <summary>
            Creates a new column list whose columns are all visible,
            given an array of PropertyKey structures. The default is based on FolderTypeID.
            </summary>
            <remarks>This property may not work correctly with the ExplorerBrowser control.</remarks>
        </member>
        <member name="P:BExplorer.Shell.ShellSearchFolder.SearchCondition">
            <summary>
            Gets the <see cref="!:Microsoft.WindowsAPICodePack.Shell.SearchCondition"/> of the search.
            When this property is not set, the resulting search will have no filters applied.
            </summary>
        </member>
        <member name="P:BExplorer.Shell.ShellSearchFolder.SearchScopePaths">
            <summary>
            Gets the search scope, as specified using an array of locations to search.
            The search will include this location and all its subcontainers. The default is FOLDERID_Profile
            </summary>
        </member>
        <member name="T:BExplorer.Shell.RecycleBin">
            <summary>
            Send files directly to the recycle bin.
            </summary>
        </member>
        <member name="M:BExplorer.Shell.RecycleBin.Send(System.String,BExplorer.Shell.Windows.WindowsAPI.FileOperationFlags)">
            <summary>
            Send file to recycle bin
            </summary>
            <param name="path">Location of directory or file to recycle</param>
            <param name="flags">FileOperationFlags to add in addition to FOF_ALLOWUNDO</param>
        </member>
        <member name="M:BExplorer.Shell.RecycleBin.Send(System.String)">
            <summary>
            Send file to recycle bin.  Display dialog, display warning if files are too big to fit (FOF_WANTNUKEWARNING)
            </summary>
            <param name="path">Location of directory or file to recycle</param>
        </member>
        <member name="M:BExplorer.Shell.RecycleBin.SendSilent(System.String)">
            <summary>
            Send file silently to recycle bin.  Surpress dialog, surpress errors, delete if too large.
            </summary>
            <param name="path">Location of directory or file to recycle</param>
        </member>
        <member name="T:Microsoft.WindowsAPICodePack.Shell.FileIcon">
            <summary>
            Enables extraction of icons for any file type from
            the Shell.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAPICodePack.Shell.FileIcon.GetInfo">
            <summary>
             Gets the information for the specified 
             file name and flags.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAPICodePack.Shell.FileIcon.#ctor">
            <summary>
            Constructs a new, default instance of the FileIcon
            class.  Specify the filename and call GetInfo()
            to retrieve an icon.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAPICodePack.Shell.FileIcon.#ctor(System.String)">
            <summary>
            Constructs a new instance of the FileIcon class
            and retrieves the icon, display name and type name
            for the specified file.      
            </summary>
            <param name="fileName">The filename to get the icon, 
            display name and type name for</param>
        </member>
        <member name="M:Microsoft.WindowsAPICodePack.Shell.FileIcon.#ctor(System.String,Microsoft.WindowsAPICodePack.Shell.FileIcon.SHGetFileInfoConstants)">
            <summary>
            Constructs a new instance of the FileIcon class
            and retrieves the information specified in the 
            flags.
            </summary>
            <param name="fileName">The filename to get information
            for</param>
            <param name="flags">The flags to use when extracting the
            icon and other shell information.</param>
        </member>
        <member name="P:Microsoft.WindowsAPICodePack.Shell.FileIcon.Flags">
            <summary>
            Gets/sets the flags used to extract the icon
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAPICodePack.Shell.FileIcon.FileName">
            <summary>
            Gets/sets the filename to get the icon for
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAPICodePack.Shell.FileIcon.ShellIcon">
            <summary>
            Gets the icon for the chosen file
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAPICodePack.Shell.FileIcon.DisplayName">
            <summary>
            Gets the display name for the selected file
            if the SHGFI_DISPLAYNAME flag was set.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAPICodePack.Shell.FileIcon.TypeName">
            <summary>
            Gets the type name for the selected file
            if the SHGFI_TYPENAME flag was set.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAPICodePack.Shell.IconUtilities">
            <summary>
            Converts Icon to ImageSource
            </summary>
        </member>
        <member name="T:JunctionPointUtils.JunctionPoint">
            <summary>
            Provides access to NTFS junction points in .Net.
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.ERROR_NOT_A_REPARSE_POINT">
            <summary>
            The file or directory is not a reparse point.
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.ERROR_REPARSE_ATTRIBUTE_CONFLICT">
            <summary>
            The reparse point attribute cannot be set because it conflicts with an existing attribute.
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.ERROR_INVALID_REPARSE_DATA">
            <summary>
            The data present in the reparse point buffer is invalid.
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.ERROR_REPARSE_TAG_INVALID">
            <summary>
            The tag present in the reparse point buffer is invalid.
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.ERROR_REPARSE_TAG_MISMATCH">
            <summary>
            There is a mismatch between the tag specified in the request and the tag present in the reparse point.
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.FSCTL_SET_REPARSE_POINT">
            <summary>
            Command to set the reparse point data block.
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.FSCTL_GET_REPARSE_POINT">
            <summary>
            Command to get the reparse point data block.
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.FSCTL_DELETE_REPARSE_POINT">
            <summary>
            Command to delete the reparse point data base.
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.IO_REPARSE_TAG_MOUNT_POINT">
            <summary>
            Reparse point tag used to identify mount points and junction points.
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.NonInterpretedPathPrefix">
            <summary>
            This prefix indicates to NTFS that the path is to be treated as a non-interpreted
            path in the virtual file system.
            </summary>
        </member>
        <member name="M:JunctionPointUtils.JunctionPoint.Create(System.String,System.String,System.Boolean)">
            <summary>
            Creates a junction point from the specified directory to the specified target directory.
            </summary>
            <remarks>
            Only works on NTFS.
            </remarks>
            <param name="junctionPoint">The junction point path</param>
            <param name="targetDir">The target directory</param>
            <param name="overwrite">If true overwrites an existing reparse point or empty directory</param>
            <exception cref="T:System.IO.IOException">Thrown when the junction point could not be created or when
            an existing directory was found and <paramref name="overwrite"/> if false</exception>
        </member>
        <member name="M:JunctionPointUtils.JunctionPoint.Delete(System.String)">
            <summary>
            Deletes a junction point at the specified source directory along with the directory itself.
            Does nothing if the junction point does not exist.
            </summary>
            <remarks>
            Only works on NTFS.
            </remarks>
            <param name="junctionPoint">The junction point path</param>
        </member>
        <member name="M:JunctionPointUtils.JunctionPoint.Exists(System.String)">
            <summary>
            Determines whether the specified path exists and refers to a junction point.
            </summary>
            <param name="path">The junction point path</param>
            <returns>True if the specified path represents a junction point</returns>
            <exception cref="T:System.IO.IOException">Thrown if the specified path is invalid
            or some other error occurs</exception>
        </member>
        <member name="M:JunctionPointUtils.JunctionPoint.GetTarget(System.String)">
            <summary>
            Gets the target of the specified junction point.
            </summary>
            <remarks>
            Only works on NTFS.
            </remarks>
            <param name="junctionPoint">The junction point path</param>
            <returns>The target of the junction point</returns>
            <exception cref="T:System.IO.IOException">Thrown when the specified path does not
            exist, is invalid, is not a junction point, or some other error occurs</exception>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.REPARSE_DATA_BUFFER.ReparseTag">
            <summary>
            Reparse point tag. Must be a Microsoft reparse point tag.
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.REPARSE_DATA_BUFFER.ReparseDataLength">
            <summary>
            Size, in bytes, of the data after the Reserved member. This can be calculated by:
            (4 * sizeof(ushort)) + SubstituteNameLength + PrintNameLength + 
            (namesAreNullTerminated ? 2 * sizeof(char) : 0);
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.REPARSE_DATA_BUFFER.Reserved">
            <summary>
            Reserved; do not use. 
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.REPARSE_DATA_BUFFER.SubstituteNameOffset">
            <summary>
            Offset, in bytes, of the substitute name string in the PathBuffer array.
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.REPARSE_DATA_BUFFER.SubstituteNameLength">
            <summary>
            Length, in bytes, of the substitute name string. If this string is null-terminated,
            SubstituteNameLength does not include space for the null character.
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.REPARSE_DATA_BUFFER.PrintNameOffset">
            <summary>
            Offset, in bytes, of the print name string in the PathBuffer array.
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.REPARSE_DATA_BUFFER.PrintNameLength">
            <summary>
            Length, in bytes, of the print name string. If this string is null-terminated,
            PrintNameLength does not include space for the null character. 
            </summary>
        </member>
        <member name="F:JunctionPointUtils.JunctionPoint.REPARSE_DATA_BUFFER.PathBuffer">
            <summary>
            A buffer containing the unicode-encoded path string. The path string contains
            the substitute name string and print name string.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Windows.WindowsAPI.SHFILEOPSTRUCT_x86">
            <summary>
            SHFILEOPSTRUCT for SHFileOperation from COM
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Windows.WindowsAPI.FileOperationFlags">
            <summary>
            Possible flags for the SHFileOperation method.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Windows.WindowsAPI.FileOperationFlags.FOF_SILENT">
            <summary>
            Do not show a dialog during the process
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Windows.WindowsAPI.FileOperationFlags.FOF_NOCONFIRMATION">
            <summary>
            Do not ask the user to confirm selection
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Windows.WindowsAPI.FileOperationFlags.FOF_ALLOWUNDO">
            <summary>
            Delete the file to the recycle bin.  (Required flag to send a file to the bin
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Windows.WindowsAPI.FileOperationFlags.FOF_SIMPLEPROGRESS">
            <summary>
            Do not show the names of the files or folders that are being recycled.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Windows.WindowsAPI.FileOperationFlags.FOF_NOERRORUI">
            <summary>
            Surpress errors, if any occur during the process.
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Windows.WindowsAPI.FileOperationFlags.FOF_WANTNUKEWARNING">
            <summary>
            Warn if files are too big to fit in the recycle bin and will need
            to be deleted completely.
            </summary>
        </member>
        <member name="T:BExplorer.Shell.Windows.WindowsAPI.FileOperationType">
            <summary>
            File Operation Function Type for SHFileOperation
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Windows.WindowsAPI.FileOperationType.FO_MOVE">
            <summary>
            Move the objects
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Windows.WindowsAPI.FileOperationType.FO_COPY">
            <summary>
            Copy the objects
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Windows.WindowsAPI.FileOperationType.FO_DELETE">
            <summary>
            Delete (or recycle) the objects
            </summary>
        </member>
        <member name="F:BExplorer.Shell.Windows.WindowsAPI.FileOperationType.FO_RENAME">
            <summary>
            Rename the object(s)
            </summary>
        </member>
    </members>
</doc>
